This is the description of the class "CX_PERCENT - Arithmetic": The following overviews show the mathematical operators and the operands to which a percentage can be linked ( all results correspond to the priority rules ): Addition Subtraction Multiplication Division CX_PERCENT is always treated as a multiple of 0.01(3). When adding/subtracting with another type it follows the logic of a commercial calculator of markup and markdown(3.1). Addition Addition with a percentage value is to be understood in a business sense: x% added to the price means that the price is increased by x% of its value. It should be noted that this means that the addition is no longer associative and is also not commutative(2.1)*: {CODE( theme="default")}3 = 1 + (100% + 100%) != (1 + 100%) + 100% = 2 + 100% = 4{CODE} In InstantView notation: {CODE()}1 100% 100% + + 1 100% + 100% +{CODE} *= The commutativity of CX_PERCENT has been suspended due to the commercial interpretation of addition, which leads to confusion in case of commutativity. On the one hand, the notation "5 + 20%" corresponds to the description of adding up a mark-up on a basic value. However, the spelling "20% + 5" suggests that 5 percentage points are added to the 20% and the result would be 25% and not a 20% mark-up on 5. It becomes particularly confusing when it comes to subtraction: If you write "5 - 20%", it is clear that this is a 20% discount of 5. But "20% - 5" again suggests a change in percentage points and would be clearly defined by commutativity as 20% - 5 = 20% + (-5) = (-5) + 20% = (-5) * 1.2 = (-6) which is almost certainly not the intention of the writer. To avoid such misleading interpretations, CX_PERCENT(+|-|+=|-=) X (X≠CX_PERCENT) is defined as an error.(2.1) CX_PERCENT + INTEGER = Error 15% + 10 = not allowed(2.1) INTEGER + CX_PERCENT = CX_NUMERIC 10 + 15% = 11,5(3.1) CX_PERCENT + CX_NUMERIC = Error 15% + 10 = not allowed(2.1) CX_NUMERIC + CX_PERCENT = CX_NUMERIC 10 + 15% = 11,5(3.1) CX_PERCENT + CX_PERCENT = CX_PERCENT 15% + 10% = 25%(3) CX_PERCENT + CX_FRACTION = Error 50% + 1/2 = not allowed(2.1) CX_FRACTION + CX_PERCENT = CX_FRACTION 1/2 + 50% = 3/4(3.1) CX_PERCENT + CX_VALUE = Error 50% + 10 pieces = not allowed(2.1) CX_VALUE + CX_PERCENT = CX_VALUE 10 pieces + 50% = 15 pieces(3.1) CX_PERCENT + CX_VALUE_PER = Error 50% + 1 €/2 piece = not allowed(2.1) CX_VALUE_PER + CX_PERCENT = CX_VALUE_PER 1 €/2 piece + 50% = 1,5 €/2 piece(3.1) CX_PERCENT + CX_FORMULA = Error 15% + Formula = not allowed(2.1) CX_FORMULA + CX_PERCENT = CX_NUMERIC, CX_VALUE or CX_PERCENT Formula + 15% = Number Note: Before the addition is performed, the formula is evaluated. The actual addition is only carried out if the result is an object which may be added to a percentage. If this is the case, number is the result. CX_PERCENT + CX_CONDITIONED_BAG = Error 15% + conditional object table = not allowed(2.1) CX_CONDITIONED_BAG + CX_PERCENT = CX_NUMERIC, CX_VALUE or CX_PERCENT conditional object table + 15% = Number Note: Before the addition is executed, the corresponding object is determined from the conditional object table. The actual addition is only executed if this object may be added to a percentage. If this is the case, the result is a number . Subtraction Percentages may be deducted from figures in the commercial sense(3.1). However, only percentages can be deducted from a percentage value. These are then offset as figures.(3) Subtracting other values from percentages will result in an error.(2.1) INTEGER - CX_PERCENT = CX_NUMERIC 2 - 50% = 1(3.1) CX_PERCENT - CX_PERCENT = CX_PERCENT 50% - 20% = 30%(3) CX_NUMERIC - CX_PERCENT = CX_NUMERIC 10 - 50% = 5(3.1) CX_FRACTION - CX_PERCENT = CX_FRACTION 1/2 - 50% = 1/4(3.1) CX_VALUE - CX_PERCENT = CX_VALUE 15 pieces - 50% = 7,5 pieces(3.1) CX_VALUE_PER - CX_PERCENT = CX_VALUE_PER 1 €/2 piece - 50% = 0,5 €/2 piece(3.1) CX_FORMULA - CX_PERCENT = CX_NUMERIC, CX_VALUE or CX_PERCENT Formula - 50% = Number Note: Before the subtraction is performed, the formula is evaluated. The actual subtraction is only carried out if the result is an object which may be subtracted to a percentage. If this is the case, number is the result. CX_CONDITIONED_BAG - CX_PERCENT = CX_NUMERIC, CX_VALUE or CX_PERCENT conditional object table - 50% = Number Note: Before the subtraction is executed, the corresponding object is determined from the conditional object table. The actual subtraction is only executed if this object may be subtracted to a percentage. If this is the case, the result is a number . Multiplication In multiplication, CX_PERCENT behaves mathematically correct like hundredths(3). This corresponds to the reduction of a value to x%. Again the operation is not commutative, because "20% * 3.0" suggests a result of 60% instead of 0.6, which is mathematically of course the same, but cannot be treated equally in ClassiX due to the changed semantics of X + CX_PERCENT. In order not to confuse the reader of calculations, the operation CX_PERCENT * X (X != CX_PERCENT) is prohibited. CX_PERCENT * INTEGER = Error 50% * 2 = not allowed(2.1) INTEGER * CX_PERCENT = CX_NUMERIC 2 * 50% = 1(3) CX_PERCENT * CX_PERCENT = CX_PERCENT 50% * 10% = 5%(3) CX_PERCENT * CX_NUMERIC = Error 50% * 2 = not allowed(2.1) CX_NUMERIC * CX_PERCENT = CX_NUMERIC 2 * 50% = 1(3) CX_PERCENT * CX_FRACTION = Error 50% * 1/2 = not allowed(2.1) CX_FRACTION * CX_PERCENT = CX_FRACTION 1/2 * 50% = 1/4(3) CX_PERCENT * CX_VALUE = Error 50% * 2 pieces = not allowed(2.1) CX_VALUE * CX_PERCENT = CX_VALUE 2 pieces * 50% = 1 piece(3) CX_PERCENT * CX_VALUE_PER = Error 50% * 1 €/2 piece = not allowed(2.1) CX_VALUE_PER * CX_PERCENT = CX_VALUE_PER 1 €/2 piece * 50% = 0,5€ €/2 piece(3) CX_PERCENT * CX_FORMULA = CX_NUMERIC, CX_VALUE or CX_PERCENT 50% * Formula = Number CX_FORMULA * CX_PERCENT = CX_NUMERIC, CX_VALUE or CX_PERCENT Formula * 50% = Number Note: Before the multiplication is performed, the formula is evaluated. The actual multiplication is only executed if the result is an object which may be multiplied by a percentage. If this is the case, number is the result. CX_PERCENT * CX_CONDITIONED_BAG = CX_NUMERIC, CX_VALUE or CX_PERCENT 50% * conditional object table = Number CX_CONDITIONED_BAG * CX_PERCENT = CX_NUMERIC, CX_VALUE or CX_PERCENT conditional object table * 50% = Number Note: Before the multiplication is executed, the corresponding object is determined from the conditional object table. The actual multiplication is only executed if this object may be multiplied by a percentage. If this is the case, the result is a number . Division The percentage is also considered to be a hundredth in the division(3). INTEGER / CX_PERCENT = CX_INTEGER 2 / 50% = 4(3) CX_PERCENT / CX_PERCENT = CX_PERCENT 50% / 50% = 100%(3) CX_NUMERIC / CX_PERCENT = CX_NUMERIC 2 / 50% = 4(3) CX_FRACTION / CX_PERCENT = CX_FRACTION 1/2 / 50% = 1(3) CX_VALUE / CX_PERCENT = CX_VALUE 2 pieces / 50% = 4 pieces(3) CX_VALUE_PER / CX_PERCENT = CX_VALUE_PER 1 €/2 piece / 50% = 2 €/2 piece(3) CX_FORMULA / CX_PERCENT = CX_NUMERIC or CX_VALUE Formula / 50% = Number Note: Before the division is executed, the formula is evaluated. The actual dividing is only executed if the result is an object which is allowed to divide a percentage. If this is the case, number is the result. CX_CONDITIONED_BAG / CX_PERCENT = CX_NUMERIC or CX_VALUE conditional object table / 50% = Number Note: Before the division is executed, the corresponding object is determined from the conditional object table. The actual division is only executed if this object is allowed to divide a percentage. If this is the case, the result is a number .