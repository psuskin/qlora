This is the description of the functionality of the class "CX_COND_WRAPPER - Conditioned Wrapper" regarding Description: A conditioned wrapper is a conditioned bag that behaves like a wrapper on the outside. This means that operations carried out with the CX_COND_WRAPPER (put, copy, etc.) are carried out with the object to which this object points. When accessing a Conditioned Wrapper (W), the formulas stored in the Conditioned Bag (C) are evaluated one after the other. The objects that are located on the plug space are used for this. As soon as a formula is found whose truth value is 1, the object (O) associated with this formula is returned. From InstantViewÂ® this looks as if the Conditioned Wrapper is exactly this object. So the programmer can treat the Conditioned Wrapper as if it was the desired object. Attention! In contrast to the descriptive and overwriting wrapper, the conditioned wrapper cannot include additional attributes or even overwrite values. All operations are directly passed on to the respective object! The Conditioned Wrapper is quasi transparent. Important! Before each access to a Conditioned Wrapper it must be ensured that the plugspace is set correctly. In the best case, an error message will appear that no suitable object was found, in the worst case an incorrect object or, even worse, the correct object will be returned. This is the description of the functionality of the class "CX_COND_WRAPPER - Conditioned Wrapper" regarding Code example: * MA = Member Access function, grey background = inherited function.