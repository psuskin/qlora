This is the description of the class "CX_PERCENT - Comparisons": The following overviews show the comparison operators and the operands with which a percentage can be linked. All operators return the result of the comparison as a truth value. Equality Larger Smaller Equality CX_PERCENT = INTEGER = INTEGER <-> 2% = 1 = 0 2% = 2 = 1 2% = 3 = 0 CX_PERCENT = CX_NUMERIC = INTEGER <-> 2,5% = 1,5 = 0 2,5% = 2,5 = 1 2,5% = 3,5 = 0 CX_PERCENT = CX_PERCENT = INTEGER <-> 2% = 1% = 0 2% = 2% = 1 2% = 3% = 0 CX_PERCENT = CX_VALUE = INTEGER -> 2% = 1 piece = 0 2% = 2 pieces = 1 2% = 3 pieces = 0 CX_PERCENT = CX_FRACTION = INTEGER -> 2,5% = 3/4 = 0 2,5% = 5/2 = 1 2,5% = 7/2 = 0 CX_PERCENT = CX_FORMULA = INTEGER -> 10% = Formula = Number Note: Before the comparison is carried out, the formula is evaluated. The actual comparison is only carried out if the result is an object that can be compared with a percentage. If this is the case, the result is a number . CX_PERCENT = CX_CONDITIONED_BAG = INTEGER -> 10% = conditional object table = Number Note: Before the comparison is performed, the corresponding object is determined from the conditional object table. The actual comparison is only executed if this object may be compared with a percentage. If this is the case, the result is a number . Larger CX_PERCENT > INTEGER = INTEGER <-> 2% > 1 = 1 2% > 2 = 0 2% > 3 = 0 CX_PERCENT > CX_NUMERIC = INTEGER <-> 2,5% > 1,5 = 1 2,5% > 2,5 = 0 2,5% > 3,5 = 0 CX_PERCENT > CX_PERCENT = INTEGER <-> 2% > 1% = 1 2% > 2% = 0 2% > 3% = 0 CX_PERCENT > CX_VALUE = INTEGER -> 2% > 1 piece = 1 2% > 2 pieces = 0 2% > 3 pieces = 0 CX_PERCENT > CX_FRACTION = INTEGER -> 2,5% > 3/4 = 1 2,5% > 5/2 = 0 2,5% > 7/2 = 0 CX_PERCENT > CX_FORMULA = INTEGER -> 10% > Formula = Number Note: Before the comparison is carried out, the formula is evaluated. The actual comparison is only carried out if the result is an object that can be compared with a percentage. If this is the case, the result is a number . CX_PERCENT > CX_CONDITIONED_BAG = INTEGER -> 10% > conditional object table = Number Note: Before the comparison is performed, the corresponding object is determined from the conditional object table. The actual comparison is only executed if this object may be compared with a percentage. If this is the case, the result is a number . Smaller CX_PERCENT < INTEGER = INTEGER <-> 2% < 1 = 0 2% < 2 = 0 2% < 3 = 1 CX_PERCENT < CX_NUMERIC = INTEGER <-> 2,5% < 1,5 = 0 2,5% < 2,5 = 0 2,5% < 3,5 = 1 CX_PERCENT < CX_PERCENT = INTEGER <-> 2% < 1% = 0 2% < 2% = 0 2% < 3% = 1 CX_PERCENT < CX_VALUE = INTEGER -> 2% < 1 piece = 0 2% < 2 pieces = 0 2% < 3 pieces = 1 CX_PERCENT < CX_FRACTION = INTEGER -> 2,5% < 3/4 = 0 2,5% < 5/2 = 0 2,5% < 7/2 = 1 CX_PERCENT < CX_FORMULA = INTEGER -> 10% < Formula = Number Note: Before the comparison is carried out, the formula is evaluated. The actual comparison is only carried out if the result is an object that can be compared with a percentage. If this is the case, the result is a number . CX_PERCENT = CX_CONDITIONED_BAG = INTEGER -> 10% = conditional object table = Number Note: Before the comparison is performed, the corresponding object is determined from the conditional object table. The actual comparison is only executed if this object may be compared with a percentage. If this is the case, the result is a number .