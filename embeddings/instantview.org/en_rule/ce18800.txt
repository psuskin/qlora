This is the description of the functionality of the class "CX_SINGLE_ALLOCATION - CyberEnterprise" regarding Description: (Business Pattern): A single allocation describes a use or a resource of a business object, depending on the point of view. In our example above, the single allocation describes a resource from the viewpoint of the business object Work Center (CX_WORK_STATION) and a usage from the viewpoint of the business object Machine (CX_MACHINE). As we can see, this is dependent on the type of backrelation from the individual allocation to the business object. In the case of a resource, a business object is referenced by the single allocation via the back relation "allocators", in the case of a usage, the single allocation points to the business object via the data field "object". In order to show the use of a business object, it is not enough to know only the business object (to reference it via the reference "object"), it is also necessary to specify the quantity of the business object that is "appropriated". This is described via the two data fields "amount" and "baseAmount", which are both attributes of the single allocation object. Examples: The business object (in the above examples A. B or C respectively) is the "object" within a single allocation CX_SINGLE_ALLOCATION, the specifications "5 hours", "17 pieces" or "2 hours" describe the scope of use of the business object under consideration. In the business object itself, an individual allocation is linked via the back relation CX_BUSINESS_OBJECT::allocations. The function CX_BUSINESS_OBJECT::Allocators(os_set) returns all uses of a business object. As shown in the graph above, single allocation describes a resource from the point of view of the work centre. The single allocation is referenced by the relation "allocations", the back relation from the single allocation to the business object is described by the relation "allocators". This is the description of the functionality of the class "CX_SINGLE_ALLOCATION - CyberEnterprise" regarding Code example: * MA = Member Access function, grey background = inherited function * I = Indexable data field, grey background = inherited data field.