This is the description of the functionality of the class "CX_UNIT_RATE - Unit ratio" regarding Description: A unit ratio describes the "conversion rate" between two units whose dimensions cannot be changed directly . This is the case, for example, with packaging units, as there are no fixed definitions, such as for length specifications. While "1 m" always corresponds to "100 cm" in terms of definition, "1 package" can correspond to "5 cans", "10 cans" or even another unit, such as "15 bags", depending on the context. Furthermore, the type of conversion between two units can be defined to control the conversion process. If the conversion rate "1 bar = 2.4 m" is used to convert "3 bars" into meters, the result is "7.2 m". If, on the other hand, "8 m" is converted into bars, "3 bars with a rest of 0.8 m". The data field conversionRuleEnum of a conversion table (= an object of class CX_UNIT_RATE or CX_CURRENCY_RATE) defines whether the conversion rule may be applied uni- or bidirectionally. Registered conversion tables automatically affect the arithmetic operations + - * /. According to the above mentioned difference (conversionRuleEnum) there are two modes for the implicit conversion: Mode (a ) is applied to bidirectional conversion rules as long as the table applied for does not contain any contradictions relating to the rule in question1. The declared conversion objects (CX_UNIT_RATE, CX_CURRENCY_RATE ) modify the transient units table (CXB_SYSTEM::systemUnits) so that units for which the conversion table determines a (unique !) way of conversion become compatible. Mode b) applies to unidirectional conversion rules and to those bidirectional rules that conflict with another (simultaneously notified) rule. Addition and subtraction use the conversion table to convert the second operand to the unit of the first one in case of incompatible operands. The transient unit table (CXB_SYSTEM::systemUnits) remains unchanged. This is the description of the functionality of the class "CX_UNIT_RATE - Unit ratio" regarding Sample table: The first two lines of the table implicitly define 2m = 1 kg, the following two lines contradict this ratio and the table is therefore invalid. The following conversion types exist: The specifications about "exact calculation" or "calculation with remainder" are taken into accountin the explicit conversion with Call(UnitConvert). This is the description of the functionality of the class "CX_UNIT_RATE - Unit ratio" regarding Code example: * MA = Member Access Function * I = Indexable data field (*) If the ratio is described by a CX_VALUE, such as "5 kg/m", it is not an exchange rate in the traditional sense, but a factor. This means that no conversion from kilograms to metres is defined. Rather, such a construct is used for "conversions over several units", which are explained in more detail in the documentation of the conversion tables.