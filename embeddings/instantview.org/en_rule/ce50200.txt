This is the description of the functionality of the class "CX_EXCEL_XML" regarding Description: Objects of this class represent Excel documents. The objects offer the possibility to import .xlsx files, to edit them and to save them again as .xlsx files. Like CX_WORD_XML, the objects offer the possibility to store the XML data as .xml file in plain text, but Excel cannot open them. The processing of Excel documents is currently subject to certain restrictions, which are explained in detail in the corresponding functions (GetValue & SetValue). The parameters are generally arranged according to the rate of change. Parameters that change frequently (value, column) are further to the left when called up than parameters that are changed less frequently. (row, worksheet) It is assumed that Excel documents are processed row by row in ascending order and column by column within the row. The CX_EXCEL_XML class has a caching mechanism, which is only fully effective if the rows are processed in ascending order in the smallest possible intervals. Since the entire XML structure must be reproduced in memory for editing XML, there is a technical (32-bit system) size limit. This is a .xlsx file of approx. 20 MB in size. Since reading from large Excel files is important for a large number of applications, a "readonly mode" was implemented for this XML class. CX_EXCEL_XML automatically opens every .xlsx file in "readonly mode" if it has been loaded with LoadFromFile. In this mode the relevant file parts are unpacked as temporary files into the TEMP directory and read from there in the so-called streaming mode. The temporary files are deleted as soon as the XML object is deleted or the object changes to "write mode". In this mode CX_EXCEL_XML can open files of any size. The CX_EXCEL_XML object can switch to "write mode" (also DOM mode) in two different ways. Either by calling a method that would change the XML (EmptyDocument, SetColorIndex, SetValue) or by explicitly setting it to "write mode" by means of SetWriteMode. When opening a document in "readonly mode" the file path of the original file is stored in the object. This file path is later used to change to the "write mode". So if this file changes during processing, you should force a change into "write mode" with SetWriteMode before processing. In terms of performance, "readonly mode" and "write mode" hardly differ. The only difference is the size limitation of the files in "write mode". This is the description of the functionality of the class "CX_EXCEL_XML" regarding Code example: The following script increments the contents of each numeric cell in an Excel document. All other cells are coloured red. * MA = Member Access Function * I = Indexable data field.