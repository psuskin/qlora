This is the description of the class "CX_SPAN_DATE - Comparisons": Description: The comparison operators ">", "<" and "=" compare a date period with a date of any type. The following rules are applied one after the other, i.e. if 2 objects are not distinguished by one rule, the next one is applied. This happens until a rule distinguishes the objects or until all rules have been passed through. If the objects are not distinguished even after the last rule, they are the same (identical). Please note that a simple date is treated like a date period of one day. A periodic date is smaller than a date period without a beginning or end (unlimited) A limited date period (has start and end) is smaller than any periodic date If the duration of at least one date period is negative, the one with the smaller duration is also the smaller date period If the duration of at least one date period is negative, the one with fewer net types is also the smaller date period A date period that is endless (no limits) is always greater than one that is not endless. Two endless dates are equal. A date period without a start or end is greater than one with a start and end. Of two date periods, the one with the smaller gross duration is also the smaller one. Of two date periods, the one with fewer net types is also the smaller Of two date periods, the one whose duration is the finer representation (granularity, e.g. days instead of years) has the smaller Out of two date periods without a start (both) or without an end (also both), the one whose reference date is smaller is smaller. Of two date periods that are restricted (have start and end) and do not contain each other(encompassed), the one that starts earlier is smaller. Of two restricted date periods with the same beginning, the one with a shorter gross duration is the smaller. Of two restricted date periods with the same beginning and end, the one with fewer net types is the smaller Of course, it follows from: not (span1 < span2) and not (span1 = span2) span1 > span2 and vice versa. Stack Stack Position Object type Brief description Stack(In) Top CX_DATE or CX_SPAN_DATE or CX_PERIODIC_DATE the date (object) Top 1 CX_DATE or CX_SPAN_DATE or CX_PERIODIC_DATE the other date (object) Stack(Out) Top INTEGER The test result Examples Date comparison date = < > 12.5.96-14.5.96 14.5.96 x 12.5.96-14.5.96 (WORKINGDAY) 12.5.96-14.5.96 (ALL_TERM) x 12.5.96-14.5.96 1.5.96-13.5.96 x 14.5.96 - any periodic date x.