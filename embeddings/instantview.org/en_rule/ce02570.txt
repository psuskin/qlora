This is the description of the class "CX_SPAN_DATE - Interval or operation": A date period has a (start) date and a period length (duration). In the simplest case: duration is positive, type is FROM_TO (with start and end) and day category is gross, such a date period is both a set of dates (time span, interval) and an event. I.e. in the simplest case we do not have to worry about whether a time span or a type of time expenditure with start date is what is modelled with the date period. However, if a non-positive duration or a certain flag in the validEnum means that the simplest case is no longer available, a distinction must be made between these two interpretations, because e.g. some functions only make sense for a certain interpretation. Therefore the possible deviations from the normal case will be described in the following. Period length not positive semi-restricted and unrestricted periods Daily categories functions restricted to a specific interpretation Period length not positive: A process, i.e. a certain necessary expenditure of time which is (begins to) be carried out on a certain date, can also be the result of a calculation, e.g. the calculation of the critical path in a Gantt chart (critical path). A buffer time in a production should at least not be negative. In the case of a (still) non-harmonised planning, a negative value for this may well arise as an interim result. Directly interpreted this means: "You still have - 1 day to finish something on this day". Or better said: "You have to win/save 1 more day elsewhere to be able to finish the final product in time" In order to be able to present such calculative results in ClassiXÂ®, a period length that is not positive is allowed. Since a date period for a certain day has the period length "1 day" and, for example, extends from "3.10.1990" to "3.10.1990", a period length of "0 days" already means that it extends, for example, from "3.10.1990" to " 2.10.1990". So the end is before the beginning! The end moves correspondingly further before the start, if the duration is -1, -2, -3 etc. is days long. So it will be strictly according to the formula: EndDate = StartDate + period length -1 day procedure. For a (closed!) interval, on the other hand, a period length of 0 already makes no sense. If the period length is not positive, such an interval would not contain any values, but would still be unequal to the empty set. Such a structure cannot exist as a set. For this reason, all functions that refer to the quantity consideration of the date period(see below) return a value that reflects their inapplicability (e.g. NULL). If a non-positive period length is only due to the fact that basically only the start and end dates have been rotated (e.g. each date is taken from a free calculation formula), the most recent or oldest date can be used via the functions RealStartOfPeriod and RealEndOfPeriod. Together with the ideal period length of an interval that can be formed from these variables and calculated with the function RealDuration, a date period with a non-positive duration can also be treated as an interval. The Real* functions also map desired properties for (semi-) unlimited intervals. semi-restricted and unrestricted periods: Intervals (in set theory) do not have to have both limits. Each limit can also be omitted. If a boundary is missing, one speaks of a semi-bounded interval, both are missing from an unbounded interval. With the types FROM (end missing), TO (start missing) and ENDLESS (start and end missing) a date period can also be semi-limited or unlimited. Applications are descriptions for a state that not only lasts from one point in time to another, but also, for example, starts from one point in time and never ends again. In modelling, this would be e.g. a VAT rate introduced on "1.4.1997" which (a priori, as there is no newer definition yet) lasts until the end of all time. Corresponding meanings are also given to TO and ENDLESS, especially if a date period is the result of a calculation. Since the start date is always the internal date and the end date is obtained from the above calculation formula, these quantities cannot be used to request a result that also reflects the case of an infinity. Use the Real* functions for this. Thus RealStartOfPeriod returns the value NULL for the definition TO or ENDLESS. The same applies to RealEndOfPeriod and FROM or ENDLESS. So with these functions you always get back the real ("real") limits of the interval, independent of the definition. To check if a date is in a date period, you can call e.g. RealStartOfPeriod and check the result for NULL before comparing dates. If this is the case, each date is later than the interval start. (More elegant for such "contained" checks is of course the function Encompassed ). Also processes can theoretically be unlimited. In this case a type unequal to FROM_TO should be chosen. Practically these will not appear from calculations, because e.g. in the aggregation of processes only which finite length is included and therefore such an aggregation always has finite length. Even if a date period is only half-limited, its theoretical length is always infinite. De facto, however, the field duration is not changed even when the type is changed. Thus the value in this field (especially the diffusivity) can be recovered later. With all calculation functions, however, it is proceeded as if it were set to infinity. Since the length of a (semi-)unlimited date period is no longer relevant, it is irrelevant whether it is positive or not. The day categories (see below) are then also no longer applicable. Daily categories: Day categories determine the date type over which the period length is formed. A date period with a day category not equal to ALL_TERM is also called a net date period. The interpretation of this is explained as a separate concept called net type. See there. For an interval interpretation, net periods are treated like the corresponding gross period (same start, same end). Net periods can also occur together with a non positive period length. Net periods are always defined FROM_TO, because a "net" together with an infinite duration makes no sense. The actual purpose of a net duration is to be used as an expense within a transaction. Functions restricted to a specific interpretation: Interval: Encompassed, Overlap, RealStartOfPeriod, RealEndOfPeriod, RealDuration, FirstPeriod, LastPeriod, JoinPeriods, OverlappingPeriod process: NetDuration, GrossDuration, IsNet, GetNet, SetNet In addition, many functions can be applied to a date period that actually refer to the (start) date, such as IsWorkingday.