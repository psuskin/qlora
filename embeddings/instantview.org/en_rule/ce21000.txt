This is the description of the functionality of the class "CX_TRANSACTION - Transactions (documents)" regarding Description: All documents of a company are modelled as transactions. The transaction objects are filled with data using the respective specialised input masks. The processing or posting of the documents in accounts/monitors is done via transaction descriptions that control the transaction manager. The following classes are available:. This is the description of the functionality of the class "CX_TRANSACTION - Transactions (documents)" regarding Arithmetic: CX_TRANSACTION can be linked together with CX_COMPOUND_TXN in an arithmetic operation. Addition (+) and subtraction (-) are allowed. It is never possible to link two CX_TRANSACTION objects together (this would cause an error), but two CX_COMPOUND_TXN objects (or derivatives thereof) can be linked. When a CX_TRANSACTION is "added" to a CX_COMPOUND_TXN or a CX_COMPOUND_TXN is "added" to a CX_TRANSACTION, the following operation is performed: In a subtraction, CX_TRANSACTION is removed from the list of subordinate transactions at CX_COMPOUND_TXN and the back reference is set to NULL. If CX_TRANSACTION did not belong to CX_COMPOUND_TXN, only the back reference is set to NULL. The return value of such an addition or subtraction is always the object that was last placed on the stack, modified of course as described above. When CX_TRANSACTION and CX_COMPOUND_TXN interact, it does not matter in what order they appear in the InstantViewÂ® code. If there are two CX_COMPOUND_TXN objects, the object that is first on the stack becomes part of the second CX_COMPOUND_TXN in the form of a subordinate transaction. This is the description of the functionality of the class "CX_TRANSACTION - Transactions (documents)" regarding Code example: * MA = Member Access function, grey background = inherited function * I = Indexable data field, grey background = inherited data field.