This is the description of the class "Plug-Space": The Plug-Space provides a mechanism to pass variables e.g. for the evaluation of formulas. For this purpose, the objects which could contain the searched variables are placed in the Plug-Space. This "placing" is done with the help of the InstantViewÂ® instruction PlugSpace The search for the variables is done by slot names or access expressions. For example, to determine the content of the "comment" slot, the first object in the plug space that has this slot is searched for. If such an object exists, a binding can take place, i.e. a parameter gets its value from the slot of this object. In the case of access expressions and functions, the procedure is equivalent. The InstantView Plug(Slotname) instruction can be used to explicitly access certain data fields available in the PlugSpace. Objects potentially behave differently in the Plug-Space: For example, the document CX_ALLOCATION_TXN themselves, its attributes (data field 'attributeSet'), its object (part or similar) referenced via the data field "object", the master allocation reached via the data field "allocation" (e.g. master BOM item) with its attributes and also follows the same pattern for all other CX_ALLOCATION_TXN superior to it, which can be reached via the data field "transaction". CX_TRANSACTION plugs itself and the higher-level document located under the "transaction" slot. For this document, the attribute set must be manually retrieved from the document and placed in the plug space. Examples for plugging can be found in the description of the PlugSpace command. ATTENTION: Attributes of (master) parts must never be ploughed alone! So the following example is wrong: item Get(attributeSet) PlugSpace If this is done in this way, it is no longer possible to evaluate whether a material characteristic of the type material characteristic (without value specification) or with a fixed value has been specified! So if the part contains a LENGTH attribute without value specification and this attribute is plugged, Plug(LENGTH) will give the default value of LENGTH in the master attribute, i.e. usually 0mm! So the right thing to do would be item PlugSpace. If the length is now determined via Plug(LENGTH), the result is INVALID, because it is assumed that the LENGTH must be defined order-specifically somewhere in the context (order item, parts list).