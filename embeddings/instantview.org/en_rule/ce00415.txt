This is the description of the class "CX_FORMULA - Functions": Functions (= methods of an object) can be called in two different ways within a formula expression:internal function: There is at least one parameter - and the function is a method of the object that is passed as a parameter.external function: The function is a method of an external object. The assignment to the object (in PlugSpace) is made when the variable is bound. Example: Formula expression Equivalent in C++ Comment sin(x) x.sin() Internal function: For a function with parameters, the assumption is that it is a method of the first parameter pow(x, n) x.pow(n) Internal function: For a function with parameters, the assumption is that it is a method of the first parameter Foo() object.Foo() External function: object denotes the first object found in the PlugSpace that has the Foo() method. Functions without parameters are always treated as if they were preceded by a ::. ::Bar(z) object.Bar(z) External function: object denotes the first one found in the PlugSpace that has the Bar() method. The scope operator :: is necessary here to make a distinction from calling an internal function (see above).To clarify the difference between internal and external functions, here again is an example of how sin(1) can be called as an internal and as an external function: The following arithmetic functions that expect real or dimensioned numbers (class CX_NUMERIC or CX_VALUE) as argument(s) can be called in a formula:trigonometric functions Prerequisite for CX_VALUE sin(x) sin x ° or dimensionless cos(x) cos x tan(x) tan x cot(x) 1 / tan(x) arcsin(x) arcsin x dimensionless arccos(x) arccos x arctan(x) arctan x arc(x) x * 3.1415926535 / 180.0Here, a dimensionless parameter is interpreted as a radian specification. The dimensionless return value of the arc functions (arc()) are also specifications in radians. If the return value of an arcus function is to be converted into a degree specification, it is to be multiplied by the factor (180.0°/3.1415926535). The reverse transformation (degrees to radians) is performed by the arc() function.hyperbolic functions Requirement for CX_VALUE sinh(x) (ex - e-x) dimensionless cosh(x) (ex + e-x) tanh(x) (ex - e-x) / (ex + e-x) other Prerequisite for CX_VALUE log(x) log10 x dimensionless ln(x) ln x exp(x) ex sqrt(x) √x Dimension is a square of dimensions pow(x, n) xnExponent n is dimensionless integer, n < 0 is allowed. min(a, b) if (a < b) a else b max(a, b) if (a > b) a else b floor(x) largest integer < x ceil(x) smallest integer > x round(x, n) x round after nth digit truncate(x, n) "truncate" x after nth digit unrounded string(x, f) format x as a string; the flags f control the representation Class CX_FORMULA - special functions in formula expression. has(variable) tests whether the variable specified as a parameter (i.e. a dynamic data field or an access expression) is bound, where the variable is bound tightly (see function get) available(variable) tests whether the variable specified as a parameter (i.e. a dynamic data field or an access expression) is bound. In contrast to has(), the variable is loosely bound (the normal case). get(variable) requires that the variable is bound tightly . type(variable) returns the type of a variable. The result can be compared with a type constant. inherited(variable, typeconstant) tests whether the object designated with variable is derived from the class designated with the second parameter. The name of a class can be specified as a parameter(type constant). var(name) returns the value of an InstantView® variable whose name is to be specified as a parameter. var() can also stand at the beginning of an access expression.