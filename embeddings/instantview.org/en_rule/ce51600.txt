This is the description of the functionality of the class "CX_JSON_OBJECT" regarding Description: This class represents a JSON object. The elements in the JSON structure can be accessed in the same way as the DDI of a class. Internally, the CX_JSON_OBJECT also generates a DDI so that the fields of the JSON object can be examined and modified in the Object Inspector. In the JSON object, all subordinate JSON objects and arrays are only references to data structures within the root object. Example: If the following JSON is given {"name":"charlie", "son":{"name":"jack"}}}, then deliver json Copy(name) and "name" json Call(GetTyped) both the string charlie. The calls json Get(son) and "son" json Call(GetTyped) return a CX_JSON_OBJECT, which contains the JSON section {"name":"jack"} represented. On this object, as on the previous object with Copy(name) the name can be read out. Alternatively, this can also be done on the root element via an access expression: json Copy(son.name) or "son.name" json Call(GetTyped) . 173936: When returning numerical values, 8 decimal places are always returned. If a non-existent field (here x) is queried, the behaviour is defined as follows:. This is the description of the functionality of the class "CX_JSON_OBJECT" regarding Code example: * MA = Member Access Function TYPE = type ID of (STRING | INTEGER | CX_NUMERIC | CX_BOOLEAN | CX_JSON_OBJECT | CX_JSON_ARRAY) * I = Indexable data field.