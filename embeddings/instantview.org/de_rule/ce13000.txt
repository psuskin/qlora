Dies ist die Beschreibung der Funktionalität der Klasse "CX_SCHEDULE - Termin" bezüglich Beschreibung: Mit einem Objekt dieser Klasse kann ein Termin verwaltet werden. Diese Klassen sind zeitgebundene Container, sie beschreiben termingebundene Vorgänge. Sie kennen daher die Zeitdimension und können in dieser hierarchisieren und organisieren. Mit einem CX_SCHEDULE beschreibt man etwas, was zu einem bestimmten DAYTIME passiert ist, passieren soll oder wird. Mit CX_SCHEDULED_TRANSACTION kann direkt eine Transaktion angegeben werden. CX_CALENDAR trägt der Tatsache Rechnung, dass periodische oder zeitlich andauernde Vorgänge in sich unterteilbar sind, daher auch zeitliche Sub-Vorgänge beinhalten können. CX_SCHEDULE Zeitlicher Vorgang. scheduleTypeEnum bestimmt Typ (abgleichen mit Typ HOLIDAY, VACATION, . in cxbsystm !). Der zeitliche Zustand des Vorganges wird in scheduleStatusEnum gehalten. dayTime bestimmt die zeitliche Dimension des Vorganges. links dazu da, um den gleichen Eintrag von verschiedenen Objekten gemeinsam führen zu können. (z.B. Workgroup-Period(Kalender)) CX_CALENDAR Mittels mainPeriod und subPeriods Hierarchisierung eines Kalenders. Insbesondere für Geschäftsperioden. Wenn mainPeriod == NULL, dann oberste "Verwaltungs"-Periode, dann auch dayTime = NULL. CX_ACCOUNT_PERIOD Periodenabhängige Nummern, Journalseiten (eventuell auch in ACCOUNT_DOMAIN), Journalsaldo, etc. CX_STATE_PERIOD monitors und controls (??) CX_SCHEDULED_TRANSACTION Einerseits um best. Transaktionen zur zukünftigen Abarbeitung in einem Kalender festzuhalten, zum anderen um durchgeführte Transaktionen terminlich geordnet führen zu können OFFEN: ====== GenerateSubPeriods(durationUnit, classID): Einsetzen Wochen unterhalb von Monaten. Automatisches Drüber/Druntersetzen von Perioden, z.B. Quartale einsetzen nachdem Monate bereits eingesetzt wurden. LookUpDate(date) führt dazu, dass 1. Eintrag (zB Januar) nicht erscheint. Wahrscheinlich CX_SPAN_DATE::Compare() falsch ! GEÄNDERT == termEnum -> scheduleTypeEnum termStatusEnum -> scheduleStatusEnum periods -> links. Dies ist die Beschreibung der Funktionalität der Klasse "CX_SCHEDULE - Termin" bezüglich Code-Beispiel: * MA = Member-Access-Funktion, grau unterlegt = geerbte Funktion * I = Indizierbares Datenfeld, grau unterlegt = geerbtes Datenfeld.