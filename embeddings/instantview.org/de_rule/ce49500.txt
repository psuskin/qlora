Dies ist die Beschreibung der Funktionalität der Klasse "CX_LOOSE_REF" bezüglich Beschreibung: Diese Klasse wird verwendet um lose Referenzen zwischen Objekten herzustellen. Dabei wird kein fester Pointer verwendet um das Zielobjekt zu erreichen, stattdessen werden am Loose-Ref-Objekt gespeicherte benutzerdefinierte Kennzeichen verwendet, um das Zielobjekte zu finden. Auf diese Art lassen sich relationale Verbindungen zwischen Objekten herstellen (Beziehungen, die aufgrund von Attribut-Werten hergestellt werden). Die benutzerdefinierten Kennzeichen dienen als Fremdschlüssel, um das Zielobjekt zu finden. Wenn Objekte dieser Klasse als Wrapper die Beziehungen zu anderen Objekten hergestellt haben, treten Sie für den Benutzer nicht mehr in Erscheinung. Stattdessen reichen sie alle Anfragen für Methodenaufrufe oder Attribute an das Zielobjekt weiter. Bei Änderungen an Attributen verhält sich das CX_LOOSE_REF-Objekt wie ein CX_OVERWRITING_REF, d.h die Änderungen werden als anonyme Slots an dem Wrapper gespeichert. Dadurch kann auf die Daten zugegriffen werden auch wenn das Zielobjekt nicht erreichbar ist, und man kann herausfinden, welche Daten des Zielobjektes über den Weg des Wrappers geändert worden sind. Folgende Eigenschaften eines CX_LOOSE_REF-Objektes werden verwendet, um das Zielobjekt aufzulösen: Die Verwaltung der CX_LOOSE_REF-Objekte übernimmt der CX_LOOSE_REF_MANAGER. Bei diesem werden auch die Messages angemeldet, die für verschiedene looseTypeEnums verwendet werden sollen. Die Auflösung des Zielobjekts beim Zugriff auf Attribute oder Methoden geschieht nur im Online-Modus. Befindet sich ein Objekt dieser Klasse im Offline-Modus, so werden nur Attribute des CX_LOOSE_REF-Objekts angefasst. Dieser Modus ist nötig, um zunächst die Werte für looseTypeEnum und die benutzerdefinierten Slots (die Fremdschlüsselattribute) setzen zu können. Gäbe es diesen Offline-Modus nicht, würde auch beim Versuch, auf ein neu erstelltes Objekt zuzugreifen um die Fremdschlüssel zu setzen, das Ziel aufgelöst und ein Fehler verursacht werden. Beim Auflösen des Zielobjekts wird eine Message gesendet (abhängig vom looseTypeEnum), die als Parameter das CX_LOOSE_REF-Objekt und ein CX_BOOLEAN Objekt hat. Die Reaktion auf so eine Message muss wie folgt implementiert werden:. Dies ist die Beschreibung der Funktionalität der Klasse "CX_LOOSE_REF" bezüglich Code-Beispiel: * MA = Member-Access-Funktion, grau unterlegt = geerbte Funktion * I = Indizierbares Datenfeld, grau unterlegt = geerbtes Datenfeld.