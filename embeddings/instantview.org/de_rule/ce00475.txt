Dies ist die Beschreibung der Funktionalität der Klasse "CX_ASCII_FILE - ASCII-Datei" bezüglich Beschreibung: Ein Objekt dieser Klasse bezieht sich auf eine ASCII-Datei, stellt Methoden zum Lesen und Schreiben sowie für einfache Dateioperationen zur Verfügung. (Für die Verwaltung von Dateien selbst steht die Klasse CX_FILE_INFO zur Verfügung). Dies ist die Beschreibung der Funktionalität der Klasse "CX_ASCII_FILE - ASCII-Datei" bezüglich Dateikodierung: Die Klasse unterstützt mehrere gängige Dateikodierungen (nicht nur ASCII). Beim Lesen von Dateien mit bekannter Kodierung sollte die Kodierung vor dem Öffnen der Datei immer Lesen explizit gesetzt werden. Falls die Kodierung nicht bekannt ist, sollte DetectCodepage verwendet werden, um die Codepage (falls möglich) aus dem Dateiinhalt zu ermitteln. Beim Schreiben von Dateien sollte immer die Kodierung explizit gesetzt werden, die von der empfangenden Dateischnittstelle definiert wurde. Falls nichts definiert wurde, sollte die UTF-8-Kodierung verwendet werden, die alle Zeichen effizient darstellen kann und von den meisten modernen Programmen unterstützt wird. Achtung: Die voreingestellte Kodierung wurde ab Dll-Version 228586 von CP850 auf UTF-8 geändert. Hinweis: Über den Befehl TransTable können Byte-Übersetzungstabellen für das Einlesen mittels Read angemeldet werden. Diese werden auf die eingelesenen Daten angewendet, BEVOR die Konvertierung aus der eingestellten Dateikodierung in die Kodierung des ClassiX-Systems (UTF-8) durchgeführt wird. Hierdurch lassen sich beliebige Codepages unterstützen - sogar ASCII-inkompatible wie EBCDIC! Dies ist die Beschreibung der Funktionalität der Klasse "CX_ASCII_FILE - ASCII-Datei" bezüglich Satzformate: Es werden sowohl variable Sätze sowie Sätze mit fester Länge und festen Datenpositionen unterstützt: Default-Einstellung für Lesen: ist variable Satzlänge, das Satzende bestimmt NL, CR oder eine Kombination aus beiden. Während der Benutzung einer Datei kann das Satzformat geändert werden, so dass beispielsweise zunächst Daten in variabler Form und dann in einer fixen Satzstruktur geschrieben werden können. Daher beherrscht diese Klasse beide Satzformate gleichzeitig. Anwendungs-Beispiele:. Dies ist die Beschreibung der Funktionalität der Klasse "CX_ASCII_FILE - ASCII-Datei" bezüglich Code-Beispiel: 181614 ist CX_ASCII_FILE iterierbar und das obige Beispiel kann wie folgt vereinfacht werden. Dies ist die Beschreibung der Funktionalität der Klasse "CX_ASCII_FILE - ASCII-Datei" bezüglich Code-Beispiel: * MA = Member-Access-Funktion * I = Indizierbares Datenfeld.