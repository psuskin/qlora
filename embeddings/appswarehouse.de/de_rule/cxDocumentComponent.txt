Dies ist die Beschreibung des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein": OLE-Objekte im Dokumentbaustein Export / Import In allen ClassiX®-Anwendungen steht Ihnen auch eine umfangreiche Dokumentverwaltung zur Verfügung. Darin können Sie nicht nur Ihre gesamte Korrespondenz und alle Belege erstellen, sondern diese auch flexibel und nach Ihren Bedürfnissen gestalten. Zudem werden alle Dokumente automatisch vorgangsbezogen verwaltet. Damit realisiert ClassiX® ein elektronisches Dokumentmanagement, in dem Sie einzelne Dokumente jederzeit direkt über Ihre Geschäftsvorfälle bzw. Beleghistorie wieder finden.Die Dokumentbausteine sind die umhüllenden Objekte für die OLE-Objekte. Sie besitzen einen mehrsprachigen Namen, eine Nummer, den Typ, den OLE-Text sowie Unterbausteine.Besitzt ein Dokumentbaustein Unterbausteine, so werden diese beim Ausdruck berücksichtigt. Dabei verhält sich das System so, als wenn der Baustein selbst ein Dokument wäre, d.h. alle Unterbausteine werden in der selben Reihenfolge gedruckt wie im Dokument (siehe Reihenfolge beim Ausdruck von Dokumentbausteine). Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Neuen Dokumentbaustein erstellen: Beim Anlegen eines neuen Dokumentes gilt es zuerst den Type (Dokumentkopf, Listenkopf, Listenposition, .) des Bausteines zu definieren, damit beim Drucken der Bausteine auch für den richtigen Zweck verwendet wird. Neben den normalen Bausteintypen gibt es auch 2 Typen, die nur als Hilfsbausteine bezeichnet werden. Dies ist der Typ "Kopie" und der Typ "Adresse". Diese Bausteine werden nicht in der normalen Reihenfolge der Bausteine im Dokument berücksichtigt und können nicht als Unterbaustein fungieren. Besondere Bausteine: Als nächstes können für den Baustein folgende Optionen festgelegt werden. Der Inhalt des Dokumentbausteines wie folgt definiert sein. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Bearbeiten des Dokumentbausteins in Word: Die Verbindung des Bausteins zum ClassiX®-System entsteht über das Einfügen von Dokumentvariablen. Dies geschieht über das Menü Einfügen/Feld. Es wird ein Fenster geöffnet, in dem das gewünschte Feld ausgewählt werden kann. Die Dokumentvariable ist unter der Kategorie Dokumentautomation als Feldname DocVariable zu finden. Durch den Button OK wird eine neue Dokumentvariable erstellt. Im Dokument wird der Eintrag { DOCVARIABLE \* MERGEFORMAT } eingefügt. Eine zweite und schnellere Möglichkeit zum Einfügen einer Dokumentvariable ist die Tastenkombination Strg + F9 Hinweis: Falls statt dieses Eintrags der Text "Fehler! Dokumentvariable nicht definiert" zu sehen ist, muss über die Tastenkombination ALT-F9 in die Feldansicht umgeschaltet werden. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Verbinden mit dynamischen Datenfeldern: Von Hand ist das dynamische Datenfeld einzufügen. Der Name des Datenfeldes wird hinter DOCVARIABLE eingetragen. Beispiel: Einfügen des dynamisches Datenfeldes uniqueID: Aus { DOCVARIABLE \* MERGEFORMAT } wird { DOCVARIABLE uniqueID \* MERGEFORMAT }. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Verbinden mit ClassiX®-Makros: Diese Verbindung muss auch per Hand eingefügt werden. Der Makroaufruf ist auch hier hinter DOCVARIABLE einzutragen. Der Aufruf erfolgt über call(Makroname) Beispiel: Einfügen des Makros OrderItemDescription: Aus { DOCVARIABLE \* MERGEFORMAT } wird { DOCVARIABLE call(OrderItemDescription) \* MERGEFORMAT }. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Verwendung von Member der ClassiX®-Objekte: Member der ClassiX®-Objekte sind auch aus Word heraus erreichbar. Dazu wird das ClassiX®-Objekt wie oben beschrieben eingefügt. Der Zugriff auf den Objektmember geschieht dann nach C++-Konvention. Beispiel: Verwenden der Methode String des ClassiX®-Objekts quantity: Aus { DOCVARIABLE \* MERGEFORMAT } wird { DOCVARIABLE ordered.shortName \* MERGEFORMAT }. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Verwendung von Methoden der ClassiX®-Objekte: Es ist auch möglich, Objektmethoden aus Word aufzurufen. Dazu wird das ClassiX®-Objekt wie oben beschrieben eingefügt. Der Zugriff auf die Objektmethode geschieht dann nach C++-Konvention. Die Übergabe von Parametern ist möglich. Beispiel: Verwenden der Methode String des ClassiX®-Objekts quantity: Aus { DOCVARIABLE \* MERGEFORMAT } wird { DOCVARIABLE quantity.string(NF_DIMENSIONED,NF_SIG_PRECISION) \* MERGEFORMAT }. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Formatierung von Dokumentbaustein: Der Dokumentbaustein kann alle Formatierungsmöglichkeiten, die Word bietet, enthalten. Dies können auch Tabellen sein, um die Felder im Baustein strukturieren zu können. Auch einfacher Text kann eingefügt und frei formatiert werden. Lösung häufiger Probleme bei fehlerhaften Darstellung der ausgewählten Formatierung. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Ablaufsteuerung: Word bietet die Möglichkeit, den Ablauf über Verzweigung zu steuern. Dies geschieht mit der IF-Anweisung. Diese wird über das Menü Einfügen/Feld und der Auswahl des Feldnamens IF in der Kategorie Dokumentautomation eingefügt. Eingefügt wird der Eintrag { IF }. Die Anweisung ist nun mit der Bedingung und den Anweisungen für die beiden Fälle wahr und falsch aufzufüllen. Der Eintrag { IF } ist zu ändern in { IF Bedingung „Anweisung für wahr“ „Anweisung für falsch“ } Wichtig sind die Anführungsstriche bei den Anweisung. Diese kapseln die Anweisung. Bei fast allen Bedingungen wird kontrolliert, ob ein Wert vorhanden ist oder nicht. Die Bedingung hierfür sieht dann wie folg aus: { IF { DOCVARIABLE uniqueID } <> " " "Anweisung für wahr“ "Anweisung für falsch“ } In diesem Beispiel wird kontrolliert, ob das Datenfeld uniqueID ungleich (<>) leer ist. Hierbei ist zu beachten, dass leer in Word durch zwei doppelte Anführungsstriche dargestellt wird, zwischen denen sich ein Leerzeichen befindet. ( " " nicht "" ) Sollte die Bedingung trotzdem nicht erkannt werden, so ist auch die Dokumentvariable, gegen die verglichen werden soll, in doppelte Anführungsstriche gesetzt werden. Ergebnis: { IF "{ DOCVARIABLE uniqueID }" <> " " "Anweisung für wahr“ "Anweisung für falsch“ }. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Export / Import: Export: Es können einzelne (in der Liste selektierte) oder alle Dokumentbausteine exportiert werden; die untergeordnete Dokumentbausteine werden mitexportiert. Die ganzen Dokumente (zusammen mit allen benutzten Dokumentbausteinen) können in dem Listenmodul "Dokument" exportiert werden. Import: s. unter technischen Beschreibung / Import der Dokumente. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Eingabefenster: Dieses Fenster dient der Pflege von Dokumentbausteinen. Sie können ein Dokumentbausteine auswählen, in dem Sie im Feld ID die gewünschte ID eingeben und mit RETURN bestätigen. Wenn Sie das Listenfenster aufrufen wollen, dann können Sie den Menüpunkt "Suchen" auswählen. Im allgemeinen setzen sich Ihre Geschäftsdokumente aus mehreren Elementen (Dokumentbausteinen) zusammen: Kopf erste Seite (z.B. Firmenlogo, Geschäftsadresse), Anrede, Fuß erste Seite, usw. Ein spezifisches Dokument stellen Sie dann aus den vordefinierten Bausteinen zusammen. Dabei können Sie die einzelnen Bausteine direkt als Text im Fenster ´Dokumentbaustein´ eingeben, diese aber auch in Ihrer Standard Textverarbeitung, wie zum Beispiel Microsoft Word, erstellen. Die Bausteine können wiederum modular aufgebaut sein. Mit Hilfe des Einsatzes von ´Feldern´ können Werte direkt aus ClassiX® übernommen werden. So können Sie beispielsweise Serienbriefe und Mahnläufe automatisch erstellen. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Listenfenster: Dient der Auflistung der Dokumentbausteine. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Selektionsfenster: Dieses Fenster dient der Selektion eines Dokumentbaustein-Objekts. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Bausteinverwendung: Dieses Fenster dient der Auflistung der Dokumente, die den aktuellen Dokumentbaustein verwenden. Dies ist die Beschreibung der Funktionalität des Moduls "cxDocumentComponent" mit dem Namen "Dokumentbaustein" bezüglich Import der Dokumentbausteine: Für den Import der Dokumentbausteine werden benötigt: Dokumentbaustein-Beschreibungsdatei (enthält Dokumentbaustein-Kopfdaten wie Nummer, Name u.s.w. und die Auflistung der Unterbausteine; Standardname component.dat) und dazugehörige Paaren (für einfache Inhalte) oder Paargruppen (für bedingte Bausteine) der MS-Word-Dateien (z.B. 10_1.doc / 10_2.doc für den einfachen Baustein 10 in zwei Sprachen bzw. 11_0_1.doc / 11_1_1.doc / 11_0_2.doc / 11_1_2.doc für den bedingten Baustein 11 mit zwei Bedingungen in jeweils zwei Sprachen). Vor dem Laden wird in einem Abfrage-Fenster ausgewählt, was mit eventuell bereits vorhandenen Bausteinen gemacht werden soll (überschreiben, benutzen, abbrechen). S. auch LOAD_DOCUMENT_COMPONENT. Die ganzen Dokumente (zusammen mit allen benutzten Dokumentbausteinen) können mit dem Message LOAD_DOCUMENT importiert werden.