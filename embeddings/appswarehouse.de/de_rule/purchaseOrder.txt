Dies ist die Beschreibung des Moduls "purchaseOrder" mit dem Namen "Bestellung": Beim Erstellen einer Bestellung muss sehr darauf geachtet werden, dass diese auch sauber angelegt ist. Das bedeutet u.a., dass eine Bestellung vom Typ EIGENBEDARF auch unbedingt eine Kostenstelle benötigt, damit der Typ komplett "ausgeprägt" ist und die entsprechenden Kosten auch entsprechend zugeordnet werden können.Achtung Eigenbedarf! Ware, die als Eigenbedarf bestellt wird, landet weder im Lager noch in der Kundenbereitstellung! Sie ist nur für den wirklichen Eigenbedarf (Büromaterial, Drehstühle) zu benutzen! Beim Typ KUNDENBEDARF muss auch unbedingt ein Vorgänger angegeben werden, also ein Kostenträger, damit dort ebenfalls die Kosten entsprechend zugeordnet werden. Eine Bestellung ist nur vollständig angelegt, bekommt also den Status ausgelöst, wenn diese Bedingungen befriedigt worden sind. Sind diese Bedingungen nicht erfüllt, so kann die Bestellung weder in Folgebelegen verarbeitet, noch gedruckt werden. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Lieferanten-Reinheit: Jede Bestellung, die generiert wird, ist Lieferantenrein. Das bedeutet im einzelnen folgendes: Hinweis: Werden Bestellungen "von Hand" erstellt, so kann die Lieferanten-Reinheit nicht gewährleistet werden. In diesem Fall ist der Anwender selber für die Reinheit der Bestellung verantwortlich! Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Ermittlung des Lieferanten: Bei der automatischen Erstellung von Bestellungen besteht der Grundsatz in der Regel den A-Lieferanten als den Lieferanten zu ermitteln, bei dem bestellt werden soll. Im Detail wird über folgende Schritte versucht einen Lieferanten zu ermitteln. Liefert ein Schritt hierbei einen Lieferanten, so wird dieser in die Bestellung übernommen und die folgenden Schritte nicht mehr berücksichtigt. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Belegvoreinstellungen: Die Voreinstellung der Beleges läuft in drei Etappen ab. Die erste Etappe hier bei ist die Initialisierung der Maske ohne Bestellung. Dieser Schritt ist sehr überschaubar, da alle Felder geleert werden und ausschließlich der angemeldete Benutzer als Bearbeiter gesetzt wird. Die zweite Etappe ist das Anlagen der Bestellung durch das erste Speichern der Bestellung. Hierbei wird nach den Standardbelegeinstellungen, welche am Benutzer, an der Kostenstelle des Benutzers oder am Mandanten hinterlegt werden können. Dies könnte zum Beispiel das Anschreiben oder Standardkonditionen des Mandanten sein. Zu erwähnen ist, dass Felder, welche gefüllt sind, nicht überschrieben werden. Wurde zum Beispiel vor dem ersten Speichern das Feld "1.Unterschrift" gesetzt, so wird es nicht durch den Wert des Feldes "1.Unterschrift" der Belegeinstellungen überschrieben. Die dritte Etappe ist das Auswählen des Lieferanten. Hierdurch werden zum Beispiel fest definiert Felder, wie Kreditor (Angabe im Lieferantenstamm) oder Adresse (Postfach- vor Straßenadresse) gefüllt. Zu dem werden zusätzlich noch die Standardbelegeinstellungen des Lieferanten übernommen. Wurde in diesen Belegeinstellungen beispielsweise ein anderer Kreditor oder eine andere Adresse ausgewählt, so wird das Feld überschrieben. Wird über die Belegvoreinstellungen ein Anschreiben oder Fußtext übernommen, so wird der alte Textbaustein ersetzt. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Eingabefenster: Dieses Fenster dient der Pflege von Bestellungen. Sie können eine Bestellung auswählen, in dem Sie im Feld Nummer die gewünschte Nummer eingeben und mit RETURN bestätigen. Wenn Sie das Listenfenster aufrufen wollen, dann können Sie den Menüpunkt "Suchen" auswählen. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Schnellpflege Bestellpreise: Bei der Schnellpflege öffnet sich nur ein Fenster für die Eingabe des Netto-Bestellpreises. Es werden die Ab- und Zuschläge für die Position angezeigt und können icht verändert werden. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Listenfenster: Dient der Auflistung der Bestellungen. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Selektionsfenster: Dieses Fenster dient der Selektion einer Bestellung. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Belegvoreinstellungsfenster: Dieses Fenster dient dem Setzen der Belegvoreinstellungen für Bestellungen. Die Belegvoreinstellungen können sowohl einem Benutzer, einer Kostenstelle oder dem Mandanten, sowie Beispielweise einer Partnerrolle zugewiesen werden. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Bestellung(en) erzeugen: Dieses Fenster dient dem Erzeugen von Bestellungen aus Aufträgen heraus. Wenn sich dieses Fenster geöffnet hat, wurden bereits Auftragspositionen zum Bestellen ausgewählt. Auch wurde bereits gegebenenfalls die Bestellung ausgewählt, welche erweitert werden soll. Beide Informationen werden in diesem Fenster angezeigt. Anschließend können jetzt weitere Optionen für das Erzeugen der Bestellung ausgewählt werden, wie die Übernahme der Bestellpreise. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Optionsfenster: Dieses Fenster dient dem Setzen der Optionen, welche bei der Erfassung von Bestellungen angewandt werden sollen. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Technische Dokumentation: Bestellungen können aus den genehmigten Bedarfsanforderungen generiert oder manuell erfasst werden. Dies ist die Beschreibung der Funktionalität des Moduls "purchaseOrder" mit dem Namen "Bestellung" bezüglich Ablauf Bestellung erweitern: Schnittstellendefinition: Die Message APPEND_PURCHASE_ORDER erwartet folgende Parameter: zweiter Parameter: Als zweiten Parameter übergibt man entweder die Vorgängertransaktion, ein CX_ITEM, einen transienten CX_ITEM Container, der die zu bestellende Menge und das Datum enthält, zu dem bestellt werden soll. Beim Erweitern von im Hintergrund offenen Bestellungen aus der "genehmigte Bedarfsanforderungen" Liste, wird die Anfordererreinheit ignoriert! Erster Schritt CreateUnsortedVector: Dieses Makro erstell einen Vector aus transienten Containern. Für jedes übergebene Objekt wird das zuerst das Makro CheckPurchaseAtCall aufgerufen, welches eine Rahmenbestellung für dieses Teil sucht. Wird eine Rahmenbestellung gefunden, so wird dieses Teil nicht in den unsortierten Vektor aufgenommen. Ist keine Rahmenbestellung gefunden worden, wird durch das Makro CreateContainer ein transienter Container erstellt, der dann auch in den unsortierten Vektor aufgenommen wird. CreateContainer: Je nach Typ des übergebenen Objektes wird ein transienter Container erstellt, der alle zur Erstellung einer Bestellposition nötigen Informationen enthält: Container.supplier = Lieferant Container.quantity = Bestellmenge Container.purchase.date = zu diesem Datum soll bestellt werden Container.itemPointer = CX_ITEM des zu bestellenden Teils(nicht Bestellartikelrolle!) Container.default.transaction = Vorgängertransaktion aus der die Position erstellt wird CheckPurchaseAtCall: Der Bestellaccount des übergebenen Teils oder des Teils der übergebenen Transaktion wird ermittelt und auf den Typ Rahmenbestellung geprüft. Wird keine Rahmenbestellung gefunden, wird FALSE auf dem Stack hinterlassen und das Makro beendet. Für den Fall dass es eine Rahmenbestellung gibt, wird das Makro SendPurchaseOrder mit der gefundenen Transaktion aufgerufen, welches sofort die Bestellung erweitert. Auf dem Stack wird nach der Erweiterung der Rahmenbestellung ein TRUE hinterlassen. AppendPurchaseAtCall: Die Rahmenbestellung wird zum Editieren aufgerufen, ein transienter Container über das Makro CreateContainer erstellt und dieser mit der Rahmenbestellung über die Message APPEND_PURCHASE_ORDER_ITEM zum Erweitern der Rahmenbestellung geschickt. ChecktPurchaseItemCasts: Nach dem Anlegen des unsortierten Vektors werden alle benötigten Bestellartikelrollen geprüft. Ist eine nicht vorhanden, wird die komplette Routine abgebrochen und der Anwender aufgefordert, die Bestelldaten einzupflegen. SplitVectorIntoSuppliers: Der unsortierte Vektor wird durchlaufen und alle in ihm vorkommenden Lieferanten in einem weiteren Vektor gespeichert. Dieser wird nun durchlaufen, so dass alle folgenden Schritte für jeden im Vektor vorkommenden Lieferanten durchgeführt werden. Es wird kontrolliert, ob die Bestellung, die erweitert werden soll, einen Lieferanten besitzt, oder nicht. Wenn diese Bestellung nämlich keinen Lieferanten hat, dann sollte im später sortiertem Vektor auch die zu erstellenden Bestellpositionen erscheinen, die ebenfalls keinen Lieferanten haben. Also wird im Fall, wenn die Bestellung keinen Lieferanten besitzt, erst mal das Makro FillVectorWithoutSupplier aufgerufen, welches alle Einträge in einen Ergebnisvektor schreibt, für die kein Lieferant gefunden wurde. Wenn alle Einträge ohne Lieferanten gefunden wurden, wird das Makro CreatePurchaseOrderAndAppendItems auf deren Funktion später eingegangen wird. Danach wird dann das Makro FillVectorWithSupplier aufgerufen, welches zuerst kontrolliert, ob auf der zu erweiternden Bestellung ein Lieferant eingetragen wurde. Wenn ja, dann wird genau dieser Lieferant im Vektor gesucht und zuerst in den Ergebnisvektor geschrieben. Anschließend werden alle weiteren vorher ermittelten Lieferanten gesucht und die passenden Einträge im Ergebnisvektor gespeichert. Nachdem alle Einträge für einen Lieferanten gesammelt wurden, wird dieser Vektor mit dem zugehörigen Lieferanten an das Makro CreatePurchaseOrderAndAppendItems übergeben. CreatePurchaseOrderAndAppendItems: Der Lieferant der zu erweiternden Bestellung wird mit dem übergebenen Lieferanten verglichen. Ist dieser gleich, wird diese Bestellung zusammen mit dem Vektor der sortierten Container über die Message APPEND_PURCHASE_ORDER_ITEMS verschickt. Ist der Lieferant ein anderer, wird eine neue Bestellung generiert und mit dem Vektor verschickt. Nachdem die Bestellpositionen angelegt wurden, wird die komplette Bestellung nachkalkuliert. Das erspart beim Anlegen mehrerer Bestellpositionen pro Bestellung eine Menge Zeit. Die uniqueID der Bestellung wird in einem String gespeichert, der am Ende als Zusammenfassung ausgegeben wird. Dies passiert im Makro CountPurchaseOrders.