Dies ist die Beschreibung des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)": Allgemein Vergleich Drucken über MS Word mit Drucken über XML Anlegen von Dokumentbausteinen Dokumentvariablen Übersicht der Dokumentvariablen Dynamische Datenfelder Makros Methoden Ablaufsteuerung (IF-Bedingung) Bedingte Dokumente Listendefinition Hauptdokument Testen des Dokuments Problembehebung Anhang Einbinden des Druckdialogs Setzen von Defaultdokumenten für einen Vorgang. Dies ist die Beschreibung der Funktionalität des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)" bezüglich Vergleich Drucken über MS Word mit Drucken über XML: Beim Drucken wird derzeit zwischen zwei Druckmethoden unterschieden, dem Drucken über MS Word und dem Drucken über XML. In diesem Abschnitt wird ein erster Überblick gegeben, wie die Druckmethoden funktionieren und welche Vor- und Nachteile sie besitzen. Eine detailliertere Beschreibung erfolgt weiter unten. Ganz allgemein lässt sich das Drucken über MS Word wie folgt beschrieben. Zu Beginn des Druckvorgangs wird ein leeres Worddokument erzeugt. Anschließend werden die dem Dokument zugewiesenen Dokumentbausteine sukzessive in das erzeugte leere Worddokument eingefügt. Der Typ oder auch die Reihenfolge Bausteine definiert hierbei wann und wo die Bausteine eingefügt werden. Durch den Typ "Fußzeile" wird zum Beispiel die Fußzeile des Dokuments erzeugt. Das Ergebnis ist, dass das eingangs leere Worddokument mit Inhalt gefüllt wurde und nun gedruckt, gespeichert u. s. w. werden kann. Beim Drucken über XML wird hinter dem Dokument ein Template hinterlegt. Dieses gibt das Layout des Ausdrucks vor. Dies kann zum einen durch den Verweis auf die zu verwenden Dokumentbausteine erfolgen der Inhalt kann aber auch direkt im Template hinterlegt werden. So kann in der Fußzeile des Templates ein Verweis erfolgen, dass der Baustein des Dokuments zum Drucken der Fußzeile gezogen werden soll oder aber der Inhalt kann direkt in Fußzeile des Templates hinterlegt werden. Beim Drucken wird das Layout gezogen und ausgewertet (gemerged), hierdurch werden die Inhalte alle Platzhalter (Dokumentvariabeln) gesetzt. Das Template ist ein Word XML Dokument welches erst nach der Aufbereitung in ein Word-Dokument als COM Objekt umgewandelt wird. Dies ist die Beschreibung der Funktionalität des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)" bezüglich Erstellen eines neuen Dokuments für den XML-Druck: In diesem Abschnitt wird an einem Beispiel gezeigt, wie für zum Drucken der Lieferscheine ein neues Dokument erzeugt wird. Dies ist die Beschreibung der Funktionalität des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)" bezüglich Anlegen eines Dokuments: Der erste Schritt zum Erstellen eines neuen Dokuments ist das Anlegen des Dokuments selbst. In diesem Beispiel wird dem Dokument die Nummer "SDN" der Name "Lieferschein" vergeben. Im Anwendungsbereich wird der Bereich "Verkauf" definiert und über die Einschränkung kann gesetzt werden, dass das Dokument nur für Lieferscheine (Klasse CX_DELIVERY_NOTE) gültig ist. Dies ist die Beschreibung der Funktionalität des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)" bezüglich Anlegen des Templates: Der entscheidende Schritt ist nun aber das Anlegen des Templates. Das Template wird als Word-Dokument in dem Verzeichnis "CX_ROOTDIR\appswh\data\Template\Forms\CX_PROJECT_NAME" unter dem Namen des Dokuments gespeichert, in diesem Fall also unter defaultTemplate.doc. Das Template könnte in etwa wie folgt aussehen. Es besitzt eine Kopfzeile und ein Fußzeile mit entsprechenden Dokumentvariablen, welche gleich beschrieben werden. Zudem besitzt es zwei Abschnittswechsel und weitere Dokumentvariablen. Allerdings gibt es auch noch ein paar versteckte Dokumentvariablen. Fügt man vor dem ersten Abschnittswechsel ein paar Zeilenumbrüche ein, so sieht man, dass das Dokument eine abweichende Kopfzeile auf der Folgeseite hat. Gleiches gilt für die zwei durch die Abschnittswechsel definierten Abschnitte. Die Dokumentvariablen, welche in der nächsten Tabelle beschrieben werden, sorgen dafür, dass der Inhalt aus den im Dokument definierten Dokumentbausteinen ausgelesen und an entsprechender Stelle eingefügt wird. Alternativ könnte man wie zuvor schon beschrieben den Inhalt aber auch direkt im Template einfügen. So könnte man die Dokumentvariable "call(XMLPrintListHeader)" zum Einfügen des Bausteins des Listenkopfes entfernen und den Listenkopf hier direkt definieren, wie das folgende Bild zeigt. Es ist aber auch möglich Inhalte ohne die Verwendung vom Dokumentbausteinen in das Template einzufügen. Dies ist sogar wesentlich einfacher, bietet aber nicht die Möglichkeit Bausteine zu kapseln und mehrfach zu verwenden. Einfacher ist es deswegen, weil man die Inhalte direkt im Template einfügen kann. So wäre es denkbar die Listenüberschrift der Positionsliste direkt in der Kopfzeile des Templates statt die Dokumentvariable "call(XMLPrintListHeader)" einzufügen. Gleiches gilt für den Dokumentkopf, die Fußzeile und so weiter. Und obwohl man in diesem Fall nicht über die Dokumentbausteine geht, können trotzdem ebenfalls Dokumentvariablen als Platzhalter für das Einfügen von ClassiX Daten, wie zum Beispiel "uniqueID" zum Einfügen der Belegnummer, verwendet werden. Dies ist die Beschreibung der Funktionalität des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)" bezüglich Dokumentbausteine: Über Dokumentbausteine werden Worddokumente verwaltet, welche in das Template eingefügt werden. Den Dokumenten muss eine ID vergeben werden, welche eindeutig sein muss, damit die Dokumente ex- und importiert werden können. Es empfiehlt sich die Bausteine wie das Dokument zu benennen, in welches sie eingefügt werden sollen, ergänzt ein Kürzel, welches den Typ beschreibt. Es könnte auch eine fortlaufende Nummer sein, die ID wäre dann aber nicht sprechend. Folgende Erweiterungen haben sich am Beispiel des Dokuments "SDN" etabliert. Durch den Typ des Dokumentbausteins wird gesteuert, welche Aufgabe der Baustein erfüllt und an welche Stelle dieser eingefügt werden soll. So wird der Bausteine "Listenkopf" an all den Stellen im Template eingefügt, an denen die Dokumentvariabel "call(XMLPrintListHeader)" definiert wurde. Das Word-Dokument kann bedingt in den Dokumentbausteinen hinterlegt werden. Dies können sowohl feste Bedingungen sein, wie zum Beispiel ob der Bausteine "Kopfzeile" gerade auf der ersten oder auf der Folgeseite eingefügt werden soll. Die Bedingungen können aber auch abhängig von allgemeinen Systeminformationen (z. Bsp. Abfrage bzgl. des angemeldeten Mandanten) oder Daten des zu druckenden Beleges (z. Bsp. Abfrage bzgl. der Auftragsart) etc. formuliert werden. Eine Besonderheit besitzt der Bausteine "Dokumentkopf", welche in der Regel immer bedingt ist. So gibt es die Bedingung für die erste Seite ("print.counter=11111"). Das Dokument, welches hier hinterlegt wurde wird als Dokumentkopf ausgegeben. Das Word-Dokument, welches hinter der Bedingung für die Folgeseite ("print.counter=99999") wird hingegen für die Kopfzeile der Folgeseite verwendet. Der Vorteil ist, dass trotz einer Dokument übergreifenden einheitlichen Kopfzeile auf der ersten Seite ohne eine Dokument individuelle Kopfzeile auf den Folgeseiten eingerichtet werden kann. Neben dem Worddokument kann der Baustein auch noch Optionen, wie zum Beispiel "neue Seite vor dem Baustein", definieren. Diese Optionen gelten jedoch nur für Bausteine vom Typ "Listenposition" bzw. "Listegruppen" sowie den Bausteinen, welche frei vor oder nach der Liste eingefügt werden. Dies ist die Beschreibung der Funktionalität des Moduls "processes_documentEditing" mit dem Namen "Beispiel Drucken (Dokumenterstellung)" bezüglich Dokumentvariablen: Im MS-Word Editor kann der Layoutentwurf für den Dokumentkopf entworfen werden. Falls noch keine Erfahrungen im Umgang von MS-Word mit dynamischen Datenfeldern bestehen empfiehlt es sich zuerst einen statischen Layoutentwurf zu erstellen indem die Formatierung von Tabellen, Schrift und eingefügten Grafiken festgelegt wird (siehe o. a. Abbildung).