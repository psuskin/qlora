Dies ist die Beschreibung des Moduls "metaobj" mit dem Namen "Meta Object": Ein Meta-Objekt repräsentiert eine Gruppe identischer bzw. ähnlicher Objekte einer Anwendungslösung. Ähnlich auch deshalb, weil sich verschiedene Objekte zum Beispiel der selben Klasse "CX_CUSTOMER" durch die Anzahl und Art der Datenfelder voneinander unterscheiden können. Trotzdem werden im Meta-Modell solche "ähnlichen" Objekte zu einem Meta-Objekte "Kunde" zusammengefasst. Dieses Meta-Objekt wird dann durch die Gesamtheit aller möglichen Datenfelder beschrieben.Meta-Objekte werden ausschließlich durch den ObjectCrawler angelegt. Dies ist die Beschreibung der Funktionalität des Moduls "metaobj" mit dem Namen "Meta Object" bezüglich Identifikation eines Meta-Objekts: Ein Meta-Objekt wird in erster Linie durch seinen Typ identifiziert. Der Typ ist der Klassenname (z. Bsp.: CX_CUSTOMER) der Objekte. Ein weiteres Identifizierungsmerkmal ist die Angabe Hauptobjekt. Hauptobjekte sind Objekte, welche in einer RootEntryPoint-Collection (REP Collection) des jeweiligen Klassentyps registriert werden. Somit können alle Hauptobjekte direkt identifiziert und dem entsprechenden Meta-Objekt zugeordnet werden. So ist jedes Kunden-Objekt durch die Angabe "Typ=CX_CUSTOMER und Hauptobjekt=ja" identifizierbar. Nun gibt es in der Datenbank aber auch Slave-Objekte, die nicht in einer REP-Collection stehen und somit keine Hauptobjekte sind. Diese Slave-Objekte werden über ihren Master referenziert/definiert/identifiziert. Der Master ist selbst ein Meta-Objekt und referenziert/definiert/identifiziert andere Meta-Objekte als Slave-Objekte. Dieses ist deshalb zu unterscheiden, da Slave-Objekte durch unterschiedliche Zuordnungen einen unterschiedlichen Charakter in der Anwendungslösung haben (können). Deutlich wird dies am Beispiel der Klasse CX_LINK_TXN. Objekte dieser Klasse können sowohl als Auftragspositionen, Lieferscheinpositionen oder andere beliebige Belegpositionen eingesetzt werden. Um eine Auftragsposition als Meta-Objekt eindeutig identifizieren zu können ist neben dem Typ (=CX_LINK_TXN) und der Kennung Hauptobjekt (=nein) die Angabe ihres Masters nötig. Der Typ des Master Objekts ist in diesem Fall CX_SALES_ORDER und z.B. im Falle einer Lieferscheinposition CX_DELIVERY_NOTE. Das Regelwerk, nach welchem das Master Objekt eines Slave-Objekts definiert wird, ist im ObjectCrawler hinterlegt. Exemplarisch sind in folgender Aufzählung einige der Regeln genannt: Neben den normalen Slave-Objekten gibt es noch die Datenwürfel Objekte (vom Typ CX_DATA_CUBE / CX_LOG_CUBE), die nicht durch ein Master Objekt, sondern durch ihre Dimensionen definiert werden. Als Dimensionen gibt es mindestens zwei Master Objekte. Ein zwei-dimensionaler Datenwürfel wird also dadurch identifiziert, dass es genau zwei eindeutige Verweise (Dimension 1 und Dimension 2) auf andere Meta-Objekte gibt. Ausnahmen gibt es bei den Datenwürfeln, die Monats- oder Jahreskonten darstellen. Hier gibt es eine "richtige" Dimension und eine Dimension, welche die Zeitspanne ("Jahr", "Monat") darstellt. Dies ist die Beschreibung der Funktionalität des Moduls "metaobj" mit dem Namen "Meta Object" bezüglich Eingabefenster: Dieses Fenster dient der Pflege von . Dies ist die Beschreibung der Funktionalität des Moduls "metaobj" mit dem Namen "Meta Object" bezüglich Listenfenster: Dieses Fenster dient der Auflistung der Meta-Objekte. Dies ist die Beschreibung der Funktionalität des Moduls "metaobj" mit dem Namen "Meta Object" bezüglich Selektionsfenster: Dieses Fenster dient der Selektion . Dies ist die Beschreibung der Funktionalität des Moduls "metaobj" mit dem Namen "Meta Object" bezüglich Optionsfenster: Hier können sämtliche Einstellungen für die Suche vorgenommen werden. Das Fenster kann nur über den "OK" Button geschlossen werden.