Dies ist die Beschreibung des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor": Dieses Modul "CyberEnterprise Inspektor" versteht sich als eine Sammlung universeller Darstellungs- und Editierwerkzeuge für die in einer Datenbank gespeicherten Objekte. Der Inspektor erfüllt grundsätzlich drei Aufgaben: Objekte und Collections (Objekt Listen) anzeigen Datenfelder in Objekten editieren über Zeiger und Relationen aus einem Objekt in andere Objekte navigieren Außerdem besitzt der Inspektor eine Reihe von Tools für erweiterte, direkte Operationen mit Objekten und/oder der Datenbank.Weil der Objekt Inspektor eine benutzerfreundliche Umgebung für die unter Umständen notwendigen direkten Dateneingriffe zur Verfügung stellt, ist es zu empfehlen, durch Vergabe der Zugriffsrechte nur speziell ausgebildeten Anwendern Zugriff auf den CyberEnterprise Inspektor zu gewähren. Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich CyberEnterprise Inspektor: Jedes persistente oder transiente Objekt kann im Inspektor angezeigt werden (Lasche Objekt Inspektor). Die eigentliche Editier- und Navigations-Funktionalität des Objekt Inspektors teilt sich auf in folgende Laschen:. Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich Objekt-Browser: In dieser graphischen Anzeige werden von einem Ausgangsobjekt aus alle Referenzen zu anderen Objekten angezeigt. Mittels des Kontextmenüs kann für jedes angezeigte Objekt seine Bearbeitungsmaske aufgerufen werden, es kann eine Liste weiterer Objekte des gleichen Typs aufgelistet werden und man kann über die Referenzen in der Datenbank zu anderen Objekten weiter navigieren. Im Gegensatz zur Durchsicht des statischen Unternehmensmodells mit dem CyberEnterprise® Inspektor navigiert man mit dem Objekt-Browser im dynamischen Netz der in der Datenbank gespeicherten Geschäftsobjekte. Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich Parameter definieren: Dieses Fenster dient der Pflege von . Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich Listenformat definieren: Dieses Fenster dient der Pflege der Spalten der im Collection Inspektor angeziegten Objekte. Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich Wert ändern: Dieses Fenster dient der Pflege von Datenfeldern. Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich COM-Objekt editieren: Im oberen Fensterbereich wird das COM Objekt angezeigt. Im unteren Fensterbereich wird eine Liste der mit diesem COM Objekt verbundenen Funktionen gezeigt. Durch Doppelklick wird die Funktion aufgerufen, indem vorher sich ein Fenster zur Eingabe der Parameter öffnet. Dies ist die Beschreibung der Funktionalität des Moduls "cyberEnterpriseInspector" mit dem Namen "CyberEnterprise® Inspektor" bezüglich DB Adresse eingeben: Die Datenbank Adresse eines persistenten Objekts kann in diesem Fenster direkt eingegeben werden. Im oberen Feld kann direkt eine volle Datenbank Adresse eines persistenten Objekts eingegeben werden. Mittels des Knopfs "Auflösen" wird diese Adresse in die einzelnen Abschnitte aufgeteilt in der zweiten Zeile ausgegeben. Ist eine Adresse mit ihren einzelnen Abschnitten eingegeben, wird mit dem OK-Knopf das entsprechende Objekt aus der Datenbank in den Objekt Inspektor geladen. Aufbau von Datenbankadressen Eine Datenbankadresse ist in der Regel wie folgt aufgebaut: < Layer | Segment | Cluster | Offset | Size > Dabei geben das Layer, das Segment, der Cluster und der Offset die genaue Position an, an welcher das Objekt in der Datenbank gespeichert ist. Der Offset wird in hexadezimaler Notation angegeben, wobei führende Nullen weggelassen werden (können). Es ist zu beachten, dass die Angabe des Layers eine nur für ClassiX® relevante Angabe ist und für ObjectStore keine Rolle spielt. Die Eindeutigkeit einer Adresse ergibt sich also alleine aus Segment, Cluster und Offset. Der letzte Teil, Size, gibt die Mapping-Größe (in Hex) an. Diese ist standardmäßig 64 KB, also 10000. Beispiel: <0|38|0|5b4|10000> Wenn also in einer Fehlermeldung z.B. folgender Satz vorkommt, so kann daraus die Datenbankadresse abgeleitet werden: "The object is at offset 0x1374 within cluster #0, segment #384 of Database Y:\classix.cxd" Ergibt folgende Adresse: <0|384|0|1374|10000>.