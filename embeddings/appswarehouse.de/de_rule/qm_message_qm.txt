Dies ist die Beschreibung des Moduls "qm_message_qm" mit dem Namen "Messages, garbage collection, Module reloading": Diese Routine testet folgende Funktionen und versucht, Fehler zu entdecken:Message Passing Gesendete und empfangenen Messages werden gezählt und die Zähler miteinander verglichen. CURRENT / NON_CURRENT für die Module wird überwacht und es wird getestet, ob die von Windowobjekten empfangenen Messages entsprechend der Parent-Child-Hierachy ankommen. Garbage Collection Jedes Modul testet einen invarianten Wert auf Unverändertheit - d.h. Schutz vor Garbage Collection - während alle Module absichtlich jede Menge Stack-Daten produzieren. Module nachladen Für das Modul Beta existieren drei unterschiedliche Implementationen, die jedoch alle auf die vom Hauptprogramm gesendeteten Messages reagieren. Von Zeit zu Zeit wird in zufälliger Reihenfolge die aktuelle Version für Modul Beta durch eine der anderen ersetzt. Der Test läuft endlos, ist also für eine längere Laufzeit gedacht. Sobald ein Fehler entdeckt wird, erscheint eine Fehlermeldung. Gleichzeitig wird in dem Verzeichnis, in dem die ClassiX® Anwendung gestartet wurde, ein Log-File angelegt. Damit lässt sich der Ablauf des Tests Nachverfolgen und eventuelle Fehler werden aufgezeichnet. // This module performs all actions in random order, thus we may detect errors // that occur under certain conditions only. // These actions are: // sending message ALFA, BETA, or GAMMA // sending message CLOSE_WINx with (x = A, B, C) // reloading module Beta with different implementations (1 - 3) // // Actions and errors are written into file MSGTEST.LOG // // // This test routine covers the following basic functionality: // // - Corrent Message Passing // Sended and Received messages are counted and checked. // Window objects check arrival of messages according to parent-child-hierachy. // CURRENT / NON_CURRENT received by any module are tested to arrive in proper sequence. // // - Garbage Collection // To detect possible errors in garbage collection, invariant values are repeatedly checked and // all modules produce deliberately lots of garbage. // // - Reloading of Modules // Module Beta is frequently reloaded, chosing arbitrarily among there are 3 different implementations. //.