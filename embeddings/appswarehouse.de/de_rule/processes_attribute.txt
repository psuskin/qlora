Dies ist die Beschreibung des Moduls "processes_attribute" mit dem Namen "Attribute - Processes": 2.1 Voreingestelltes Attribut Ein Voreingestelltes Attribut ermöglicht es, einem dynamischen Datenfeld einen beschreibenden Namen, weitere erklärende Daten oder eine Voreinstellung mitzugeben. Beispiel: Ein Teppichverkäufer mit einer ClassiX® Software möchte seine Teppiche durch verschiedene Merkmale beschreiben. Zum Beispiel sollen alle Teppiche durch ihren Preis beschrieben werden. Er fügt also in allen Stammdaten ein Sachmerkmal ein, in dem er anschließend den Preis angeben kann. Wenn jetzt einzelne Teppiche durch ihre Farbe (es soll keine freie Eingabe erfolgen, sondern nur Farben aus einer Farbtabelle zur Verfügung stehen) beschrieben werden sollen, kann er dies über ein Attribut tun, welches zum Beispiel ein Datenfeld vom Typ 'String' beschreibt. Dieses Attribut wird dann mit einer Tabelle mit den verschiedenen Farben versehen. Achtung: Attributwerte werden in den Formeln nur bis maximal 100 Zeichen unterstützt! 2.2 Formelattribute Wie der Name schon sagt, dienen Formelattribute dem Füllen eines Datenfeldes durch ein Formel, beziehungsweise durch den Wert, den die Formel errechnet. Konstanten können hierbei direkt in die Formel mit eingegeben werden während die variablen Werte wiederum Slot-Attribute sind. Beispiel: Der Teppichverkäufer will seine Teppiche nun auch durch die Größe beschreiben, wobei die Teppiche die Eigenschaft haben, dass alle Teppiche die gleiche Breite (4m) haben und sich nur durch die Länge unterscheiden. Hierbei kommen dem Teppichverkäufer die Formelattribute zu Gunsten. Er legt sich also ein Attribut mit der Formel '4m * Länge' an. Die Länge ist wiederum ein Voreingestelltes Attribute, wobei sich beim Ändern des Wertes automatisch auch der Wert bzw. das Ergebnis des Formelattributes ändert. 2.3 Bedingte Attribute Bedingte Attribute können eine Tabelle enthalte welche ein "wenn - dann" Beziehung beschreibt. Beispiel: Die Teppiche des Teppichverkäufer sollen je Farbe einen eigenen Preis bekommen. Wir legen nun ein Bedingtes Sachmerkmal an und füllen die Tabelle mit den Daten, die wir für die Preisberechnung brauchen. (z. B.: rot -> 10 € ; blau -> 20 € ; gelb -> 30€ ) Außerdem setzen wir unser gerade erzeugtes Sachmerkmal in Abhängigkeit des Sachmerkmales für die Farbe. (siehe Bsp. Voreingestelltes Attribut) Bei einer Änderung des Sachmerkmales für die Farbe, wird nun automatisch der zugehörige Wert der Bedingungstabelle zurückgegeben. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich 1. Warum Attribute?: Attribute haben in ClassiX® eine zentrale Bedeutung, da sie es ermöglichen, ein Objekt (Sachobjekt, Personenobjekte o.ä.) in allen seinen Merkmalen zu beschreiben, ohne dass Änderungen am Quellcode vorgenommen werden müssen. Beispiel: Ziel ist es, einen Verkaufsartikel durch seine Farbe zu beschreiben. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich 6. Stufenweise und bedingte Ausprägung von Attributen: Attribut-Knoten ermöglichen die stufenweise und bedingte Ausprägung von Attributen. Dies ist vor allem in der Produktkonfiguration (dem Ausprägen von Variantenteilen) sinnvoll, kann aber auch bei der Erfassung beliebiger Formular- (Beleg-) oder Stammdaten nützlich sein. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich Anwendungsbeispiel für die stufenweise Ausprägung: Ein Anwendungsbeispiel für die stufenweise Ausprägung von Attributen das Aufteilen einer komplexen Wertetabelle eines Attributs. Nehmen wir an es gibt ein Attribut "MATERIAL". Hinter diesem Attribut verbirgt sich eine sehr große Auswahl verschiedenster Materialien (verschiedene Stahl, Aluminium- und Kunststoffarten sowie zahlreicher Legierungen). Diese Tabelle kann sehr lang werden, so dass die Auswahl des richtigen Materials länger dauern könnte. Als Lösung dieses Problems kann man das Attribut "MATERIAL" mehrfach anlegen und jeweils die Ergebnistabelle einschränken. So könnte mein ein Attribut für Stahl, Aluminium etc. anlegen und als Ergebnisstabelle nur die dazugehörigen Auswahlmöglichkeiten anbieten. Zudem müsste man ein neues Attribut "MATERIAL_ART" anlegen mit der Auswahltabelle: Stahl, Aluminium, Kunststoff und Legierungen. Hinter diesem Attribut wird ein Attribut-Knoten hinterlegt, welcher abhängig von dem gesetzten Wert auf das entsprechende Attribut "MATERIAL" verweist. Beispielsweise im Verkaufsartikel wird dann das Attribut "MATERIAL_ART" statt der komplexen Tabelle "MATERIAL" eingefügt. Im Auftrag wählt man dann zunächst "MATERIAL_ART" aus. Das entsprechende Attribut "MATERIAL" wird dann automatisch hinzugefügt und in der zweiten Stufe kann dieser Wert dann gesetzt werden. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich Anwendungsbeispiel für die bedingte stufenweise Ausprägung: Die bedingten Ausprägung verhält sich ähnlich wie das zuvor genannte Anwendungsbeispiel, ist jedoch ein wenig komplexer. Im ersten Beispiel führte die Ausprägung eines Attributs zu anderen jeweils gleichnamigen Attributen mit gefilterten Ergebnistabellen. Über die Attribut-Knoten kann aber auch eine umfangreicher Produktkonfiguration durchgeführt werden. Stellen wir uns die Konfiguration eines Autos vor. Ein Auto kann durch sehr viele Parameter definiert werden. Diese Parameter können aber in einer starken Abhängigkeit zueinander stehen. So kann nach der Auswahl 2- oder 4-türig die Frage nach elektrischen Fensterhebern hinten obsolet sein. Gleiches gilt wenn ein als ein Parameter die Serie gewählt wird und diverse Extras dann schon inklusive sind. Auch diese Art der mehrstufigen bedingten Konfiguration ist über die Attribut-Knoten möglich. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich 7. Bearbeitung von Attributen in Stamm- und Bewegungsdaten: Die Gruppe zur Bearbeitung von Attributen an Stamm- und Bewegungsdaten sieht in der Regel wie folgt aus. Globale Attribute werden durch den Globus dargestellt, lokale Attribute werden mit dem Häuschen gekennzeichnet. Durch einen Doppelklick auf eines der Attribute können die Werte gepflegt werden. Hinter den lila dargestellten Zeilen befinden sicht Attribute, welche strukturiert eingefügt wurden. Diese bedeutet, dass diverse Attribute zu einem Attributknoten zusammengefasst wurden (siehe Strukturierung von Attributen). Durch den Doppelklick auf die lila Zeile wird der Knoten aufgeklappt und die Attribute dieses Knotens werden angezeigt. Durch einen weiteren Doppelklick wird der Knoten wieder zugeklappt. Der Button "Bearbeiten" führt bei einem selektierten . . globalen Attribut zum Editieren des Attributwertes in der Liste . lokalen Attribut zur Editieren des Attributs in der Bearbeitungsmaske . lila Attributknoten zum Bearbeiten der Knotenbezeichnung in der Liste Über den Button "Einfügen" kann die Liste der Attribute erweitert werden. Der Normalfall ist, dass ein Stammattribut ausgewählt und eingefügt wird. Hierbei gibt es die Optionen "Am Ende", "Vor selektierter Position" und "Hinter selektierter Position." Zudem kann auch ein lokales Attribut angelegt werden. Hierbei muss über das Menü der Typ des Attributs ("Voreinstellbares", "Errechnetes", "Bedingtes") bestimmt werden. Über das Menü "Neu Strukturebene einfügen" kann ein Attributknoten manuell angelegt werden. In diesen können dann Attribute über die Pfeile hoch/runter verschoben werden. Die Pfeiltasten übernehmen die Funktion die Reihenfolge der Attribute zu bestimmen. Sie können aber auch Attribut in einen Attributknoten verschieben oder es wieder heraus holen. Bevor Attribute in eine Ebene der aus ihr heraus verschoben werden wird der Benutzer gefragt, ob er diese Aktion wirklich so ausführen möchte. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich 8. Benutzung von Vergleichsoperatoren: Schon vor dem Anlegen eines neuen Sachmerkmals mit einer anhängenden Tabelle muss man sich im Klaren darüber sein, wie damit später gearbeitet werden soll und kann. Dazu muss man wissen, dass intern die Sachmerkmale verschiedene Typen haben können, z.B. STRING, ENUMCHAR, etc. Bei den Sachmerkmalen die als Typ STRING bzw. mit einem Datenfeld des Typs STRING angelegt werden, wird intern direkt der vom Benutzer eingegebene Wert (Text) gehalten und deshalb auch für Vergleiche herangezogen. Legt man aber zum Beispiel ein Sachmerkmal mit dem Typ ENUMCHAR an, so ist der interne Aufbau der anhängenden Tabelle ein anderer. Dort steht nicht mehr direkt der Wert (z.B. Text im Fall des Typs STRING), sondern in der internen Tabelle gibt es eine vom Anleger vorgegebene Durchnummerierung und für jeden der Einträge den nach außen hin zu zeigenden Wert, z.B. 1 -> Äpfel, 2 -> Birnen und 3 -> Bananen. Bei Vergleichsoperationen wird in allen Fällen von z.B. ENUMCHAR immer der interne Wert herangezogen, da man ja sozusagen nicht Äpfel mit Birnen über "größer" oder "kleiner" vergleichen kann. Auf "gleich" kann man aber natürlich ohne Probleme testen, nur eben bei nicht-"gleich" Vergleichen muss man sehr vorsichtig sein. Das gilt besonders für die Fälle, in denen man z.B. folgende Tabelle angelegt hat: 1 -> "100", 2 -> "200" und 3 -> "150". Dort kann man nicht einfach den Vergleich machen "kleiner oder gleich 200", da die "200" erst in den internen Wert 2 umgewandelt wird, und bei den internen Werten sind nur 1 und 2 "kleiner oder gleich 2", so dass der Eintrag 3 -> "150" nicht ausgegeben wird. Dies ist die Beschreibung der Funktionalität des Moduls "processes_attribute" mit dem Namen "Attribute - Processes" bezüglich 9. Attribute mit Steuerfunktionen: Die folgenden Attribute werden im ClassiX System intern interpretiert und steuern gewisse Funktionalitäten im System.