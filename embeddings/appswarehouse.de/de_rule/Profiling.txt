Dies ist die Beschreibung des Moduls "Profiling" mit dem Namen "Prozess Profiling": Diese App steuert das Profiling von Ablaufprozessen, also von beliebig ausgeführtem InstantView®-Code. Durch das Profiling kann untersucht werdenwo die Zeit im Einzelnen bleibt welcher Code für einen Vorgang ausgeführt wird welche Messages getriggert werden und welche diese wiederum triggern. Dies ist die Beschreibung der Funktionalität des Moduls "Profiling" mit dem Namen "Prozess Profiling" bezüglich Funktionalität: Je nach Protokollumfang und den oben gemachten Einschränkungen kann die Analyse etwas dauern. Die Analyse kann selbstverständlich abgebrochen werden (je nach dem, was im System eingestellt ist, z.B. mit Strg-F12). Um dem Wust an Daten Herr zu werden, kann außerdem eine Cluster-Analyse durchgeführt werden. Dies ist die Beschreibung der Funktionalität des Moduls "Profiling" mit dem Namen "Prozess Profiling" bezüglich Baum: In diesem Beispiel wurde eine Stückliste aufgelöst. Die Analyse wurde auf Messages und Makros beschränkt. Einige Beispiele sollen bei der Interpretation des Baumes helfen: Wie berechnet sich die Dauer? Die Dauer entspricht dem Zeitraum, der zwischen dem Beginn des betreffenden Statements und dem Beginn des nächsten Statements verging. Wenn 'CleanUp' zwei Sekunden in Anspruch nimmt, heißt das, dass von Beginn von 'CleanUp' bis zum Beginn des nächsten Befehls zwei Sekunden vergingen. Es ist nicht bekannt, wie viel Zeit 'CleanUp' genau brauchte, sondern nur, wie viel Zeit bis zum nächsten Statement verstrich! 'CleanUp' braucht aber deutlich weniger Zeit - die restliche Zeit ging beim Warten auf Benutzereingaben drauf: In der Regel braucht darauf nicht geachtet zu werden. Bei ungewöhnlich zeitraubenden Statements sollte aber nicht vergessen werden, dass direkt nach dem Statement möglicherweise auf eine Eingabe gewartet wurde.