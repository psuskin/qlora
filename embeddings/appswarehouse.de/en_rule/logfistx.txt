This is the description of the module "logfistx" with the name "Evaluation log file": Evaluation: Performance What should be taken into account when evaluating the logfiles, or what are indications of code that can be optimised? Evaluation: System crashes Blockade trigger - tree view This module is used to create various evaluations of log files and display them accordingly. The files are read out according to sessions (start of ClassiX速 until end or crash). The remaining entries of the log file are thus assigned to the created sessions. If additional dbProf files are read in, these entries are assigned to the sessions by the OS Client ID, if possible. An option can be used to set whether or not the previous sessions should be reset before each import. If this option is not set, many days in a row can easily be read in. Either several selected files, entire folders can be read in (subfolders are automatically taken into account) or a time period can be specified in which all log files are automatically searched and loaded. Specifying a time period is best suited in MorphIT, because the MorphIT user does not have to worry about the location of the log files and whether they are on the same computer, especially since in this case no files have to be uploaded. The automatic reading of log files depending on the time period requires that the log files are stored in a temporal subfolder structure, i.e. the following option must be activated in logging.ini. log4cplus.OrganizeLogsByDate=true Selecting individual files also allows you to view files for sessions from different time periods and points side by side. In addition to the sessions and user logins, certain events such as deadlocks, timeouts, crashes, etc. are additionally summarised in monitors across sessions. After reading in, all sessions are displayed in the session list with the most important data. A session is opened by double-clicking on it and you can see what happened. In the Statistics tab, graphical evaluations can be created flexibly. The monitors can be assigned to the diagrams as desired. There is a maximum of 3 diagrams, whereby only one monitor can be assigned to a diagram. You can drag and drop the monitors into the diagram areas or select a monitor and then click on the corresponding "Add monitor" button. For dbProf statistics, the desired evaluation can be selected after a double click. In the X-axis option area, the evaluation variant can be selected, whereby the transactions are evaluated according to time or date. In the case of an evaluation based on time, all transactions are summarised according to their time, so that one can see, for example, which events have occurred at which time of day. In this case, it makes sense to load or select only sessions from a single day. The time span and the period length of the evaluation can be specified in the Options section. The period length self-explanatory determines the accuracy of the statistics. For statistics accurate to the minute, a period length of 1 minute should be selected, but this could lead to extensive graphs. If, on the other hand, you want to make a summary evaluation over several days, you should select the option by date. All transactions of a particular monitor are summarised in days and displayed graphically. You could also select the time of day under Options, outside which the transactions are not considered. The monitor user has the special feature that besides the normal evaluation of the login, the maximum number of simultaneous use of ClassiX on one day is graphically displayed. Either "All sessions" or "Selected sessions only" can be set as an option. With the option "All sessions" all loaded sessions are used for the evaluation, otherwise only the sessions selected in the session list are used. The option "All sessions" can be used to read and compare only dbProf files of different days. So it is not necessary to read in all files from each day. For any number of monitors the transactions can be viewed within a time span. This makes it easier to understand which events are interdependent within a limited period of time. In the tab Blocks/ Crashes/Locks the transactions mentioned above for the selected sessions are displayed. The locking conflicts can be viewed in a summary by "Locked By" (Who is locking the others?) and segment. Red lines in a list or also called ListView Fatals (crashes within a ListView) are displayed in the same tab. RO and RW long distance transactions are grouped by location and displayed in the Long distance TXNs tab. The average duration and the average number of pages read are also displayed. IV faults are displayed in a separate tab. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Evaluation: Performance: The following options are available for evaluating performance and determining the causes of good/bad performance:. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding What should be taken into account when evaluating the log files, or what are indications of code that can be optimised?: 1. Evaluation of the blockades 2. Display blockade networks: 3. Check whether the topmost entries in the right-hand list are lines with a value higher than 50 in the "Number" column, or very many with high numbers (e.g. the first 15 entries more than 20 blockades in the "Number" column): 4. Review cross-country skiers TXN: If long-runners that have been marked as blockage triggers (second column) appear in the list with more than two minutes: 5. Statistics: If more than 600 blockades occurred:. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Evaluation: System crashes: For the evaluation of the system crashes the log files of the clients must be loaded, those of the server (cxdbprof.log) can be ignored. By double clicking on the monitor "Crashes" in the list of monitors all crashes are displayed. In the list each crash is described by three columns. (Error message of the crash, if a deadlock has occurred before, output of the C++ stack) In order to record a tendency of the number of crashes or to determine the increase/decrease of errors due to a difference, it is important to record key figures. This output of the key figures is done by clicking the corresponding button. By transferring the key figures daily to Excel, it is possible to make statements about the course of events. The following key figures are available:. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding List window: To carry out an evaluation, any number of log files must first be selected. The log files are first evaluated according to sessions. A session is the duration from the start of ClassiX速 until the termination or system crash. If another ClassiX速 instance is started during a session, a counter is incremented in the current session. If the option "Reset sessions each time log files are read in" is not set, log files can be read in one after the other without losing the previously read in sessions. If a file ends before a session is finished, the session end time is set to the time of the last event. If a log file does not start when ClassiX速 starts, a session is created that takes the start time of the first event of the file. If errors occur during reading in, these can be viewed later in the window Errors during reading in. Columns of the session list: Double-click on a session to open the session window. The evaluations for the lists, blockades/crashes/locks, ListView Fatals, long distance TXNs and IV errors are always immediately created and displayed for the currently selected sessions. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding ListView Fatals: This list displays the ListView Fatals (Hard crashes within a ListView - Red lines) for the selected sessions. If these occur more than once at one point, they are displayed together. By pressing a Double-clicking on a list entry displays the contained transactions in the Contained Transactionswindow. Instantview error This list displays the Instantview errors for the selected sessions. Identical errors are summarised. By double-clicking on a list entry, the contained transactions are displayed in the Contained Transactions window. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Session: This window displays all transactions included in the session sorted by timestamp. Transactions that are held in a monitor appear in red in the list (except for the dbProf statistics). This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Included transactions: This window displays all transactions included in the period sorted by time stamp. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Locking Summary: Locking conflicts are summarised by Locked by and by segment. To view the individual Locks, simply select the appropriate summary and Locks will be displayed in the Locking Conflicts list. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Error while reading in: The errors that occurred during reading are displayed here. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Evaluation: In this window the diagrams of the evaluation are displayed. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding Blockade trigger - tree view: If users create time-consuming bookings, it can happen that other users are hindered in their activities, as individual data is exclusively blocked by the booking. The other users then wait for the end of the transaction before they can continue. They only notice this circumstance by an extended duration of the action they are about to perform. Such behaviour is called blocking. As long as the user is waiting for the release of his data, it is possible that he has already locked data for himself, for which other users must then wait. Similar to the snowball system, a network of blockades could develop in an unfavourable case, which is all triggered by the time-consuming booking of the first user. To be able to find such time-consuming bookings that block many users, this tree view is available. Here you can see who the first blocker was, who he blocked, and who was blocked by the other users. Users who have only been blocked without triggering the blockade themselves are not displayed at the top level of the tree. The behaviour of the snowball system must be prevented by targeted improvements to the source code - this tree view should help to locate the critical parts of the programme. This is the description of the functionality of the module "logfistx" with the name "Evaluation log file" regarding System crashes: If the log level "FATAL" appears in a log file, this indicates that the machine has crashed. The next message with log level "ERROR" is the crash message that appears on the screen. The current session is closed and for this current transaction (crash message) the data field "settings" is displayed. The only exception is a "FATAL" from the logger "cx.listview". With this one, the system does not crash because the ListView catches it. If the system crashes without an error message, the last transaction (LogLevel "FATAL") is regarded as the end of the session and displayed in the list of crashes. (StopAllSessionsOfLogFile) investigation: + cx.app INFO "Signal caught: SIGABRT" + cx.app ERROR + cx.main FATAL + FATAL session end.