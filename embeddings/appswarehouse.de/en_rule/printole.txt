This is the description of the module "printole" with the name "Printing with OLE (document printing)": Description Related topics Technical documentation Example (Print delivery note) Overview of the document variables. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Description: This help gives you an overview of the printing options. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Document modules: The document modules are the enveloping objects for the OLE objects. It has a multilingual name, number, type, OLE text and sub-modules. The type of a document block determines the order in which it is printed (see Order in which document blocks are printed). A document module can have the following type: Document header, List header, List position, List footer, List transfer below, List transfer above, List group, Document footer (last page), footers If a document module has submodules, these are taken into account when printing. The system behaves as if the module itself were a document, i.e. all submodules are printed in the same sequence as in the document (see Sequence when printing document modules). This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Document: A document (pseudo-class CX_DOCUMENT) consists of document modules and has further characteristics such as margin settings, document type, name and document number. Possible document types are: purchasing, Sale, manufacturing, stock, Financial accounting, controlling, Miscellaneous When printing a document, the type of document module determines the order. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Sequence when printing document blocks: If the printout fits on one page: Multi-page printout: 1st page 2nd last page Last page. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding OLE objects in the document module: The OLE objects contain document variables that are replaced on printing with the values of the object to be printed. To do this, the print object must be placed in the PlugSpace (see the statement Define (SetTransactionPlugSpace) in the printole.mod module). By default, the client object and a temporary print object are also placed in the PlugSpace (the client object contains all important information about the client, such as the address; the temporary print object is currently only required for the output of page numbers and subtotals). If the object to be printed is a transaction, all subtransactions are printed as list items of the object. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Functions: In ClassiX®, document output is controlled by a document object, which also serves as a buffer between the InstantView® instructions and the print output channel of the respective operating system. The document object holds the information of the entire document and the output is explicitly triggered with PrintDocument. A preview on the screen is also possible. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Printing instructions: The system has four classes as follows: CX_PRINTER, CX_PRINTER_PROPERTIES, CX_PAGE_PROPERTIES, CX_PAPER_FORMAT, which can store the settings of the printer and various document types. The objects of these classes can be made persistent. A list of printers installed on the client can be obtained from Printermanager using the function GetInstalledPrinters. To set or display the printer properties the class CX_PRINTER has the function SelectPrinterProperties. This function displays the printer-installed dialog of selected printers, which depends on the printer. Because in this dialog both printer properties (printer name, printer port,.) and page properties (paper size, paper orientation,.) can be set, the function SelectPrinterProperties puts two objects back on the stack: CX_PRINTER_PROPERTIES and CX_PAGE_PROPERTIES. The margin settings usually cannot be set in the Printer Properties dialog and must be set from within InstantView®, the same applies to custom paper sizes. All paper formats are the objects of the class CX_PAPER_FORMAT. The setting of printer, printer and page properties for a document is done by calling a member function SetPagePropertiesAndPrinter, which saves the settings for a page area. Once the settings have been made, the document can be checked with the method CheckPrintRange to see whether valid settings have been set for all pages. The CXP_PRINT_JOB class represents a print job in the system. In the CXP_PRINT_JOB object, settings such as print area pages from. to., number of copies, and sorting when printing multiple copies are set in the CXP_PRINT_JOB object. Therefore, a CXP_PRINT_JOB object must be created before the document preparation using the document method CreatePrinterJob. If the document has several page settings, further print jobs are created automatically: one print job per page setting. If spooling is switched off, the print job is started after the document has been completely prepared using the StartPrinting method or the InstantView® statement PrintDocument. When spooling is turned on, the print job is automatically started when the number of completed pages reaches the number of spool pages. With the PrintToFile function, the document can be archived in this machine. During archiving, one or more files of the type Enhanced- Metafile (*.emf) are generated, which can be viewed with the ClassiX®- Metafileviewer. If the document has several page settings, one Metafile is created per page setting and a vector of created file names (transferred file name + page number from the start area of the page setting) and NULL strings is returned. The NULL strings represent the pages with unchanged settings saved in a metafile. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Modules: print.mod, printole.mod, printstd.mod, printpro.mod, paper.mod. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Object types used: CX_COM_OBJECT, CX_COMPOUND_TXN, CX_CONTAINER, CX_DOCUMENT, CX_MULTIPLE_COM_OBJECT. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Dynamic data fields: none. This is the description of the functionality of the module "printole" with the name "Printing with OLE (document printing)" regarding Pressure classes: CX_PRINTER, CX_PRINTER_PROPERTIES, CX_PAGE_PROPERTIES, CX_PAPER_FORMAT, CXP_PRINT_JOB See also:.