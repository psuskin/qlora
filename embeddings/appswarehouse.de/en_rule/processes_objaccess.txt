This is the description of the module "processes_objaccess" with the name "Object access and navigation": The easiest way to access information in a data processing system is to search using a unique number key. Relational databases are consistently structured in this way, so all information must have a "number". In ClassiX® you can also use "numbers" to search for customers or parts. Alternatively, you can use search terms, of which you can assign as many as you like in ClassiX®, e.g. for a part in the parts master or a company in the company master. Search terms can also be used for full indexing of data (e.g. full indexing of quotation and order data). In relational databases the relations from data entity to data entity also run via a "number", e.g. from an invoice the customer can be found via the customer number stored in the invoice, a payment term of an invoice is also searched for via "its number" in a central payment term file. However, if, for example, a uniquely negotiated payment term is to apply to an invoice, this must also be stored in the central file; over time, this file grows more and more. In object-oriented databases, however, the relations / connections of data entities to each other are not switched via the "number" defined in an application, rather the database manages these connections itself. Once a connection has been established, it is independent of the data or "numbers". Also the terms of payment do not always have to be stored "globally" in a file, but can be stored in such a way that they can only be viewed as "local" conditions via the invoice defining them. Due to the object-oriented database, there are no restrictions on the length, type and number of data fields. One has to imagine the storage of data entities in object-oriented databases as a network of interconnected information, but whose connections are directly accessible like roads in between. Driving" on these roads from data entity to data entity, from information to information is called navigating. Free navigation between the information in the object-oriented database can be restricted on the one hand by a validity of individual objects that is dependent on the date (only those objects can be "accessed" that are also valid on the set session date) and on the other hand by a validity described by domain declarations: all objects of a class or only individual objects can be assigned to so-called domains. Since all information with all connections to each other is stored in the database, a sophisticated system for defining and controlling the access rights of users of the ClassiX® system is also implemented. In order to increase the transparency of operational information, free navigation is widely used, especially for document history. The document history provides an overview of a triggering business transaction or document (e.g. order item) and its subsequent documents. This provides quick access to an entire chain of transactions in chronological order. Also, the dynamic change of state of a business document can be directly observed in its business process.