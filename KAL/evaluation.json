[
    {
        "query": "What is a variant part?",
        "response": "Based on the provided module description, a variant part is a description for an actually occurring part, a pattern for a distinct part, that includes an identifying number, a description, various details, such as logistic and dispositive identification, etc., and a list of characteristics that defines the characteristics or quantities whose different values or characteristics can be used for an actual part.\n\nTherefore, a variant part is a kind of template or blueprint for a part that can be customized with different characteristics or values to create multiple versions of the same part. It is a way of managing variation and complexity in a product line by defining a set of common features or characteristics that can be applied to multiple parts, rather than creating separate parts for every unique combination of features.\n\nTo answer your query, a variant part is not a physical thing, but rather a conceptual representation of a part that can be modified or configured in different ways to meet the needs of specific applications or customers.",
        "docs": [
            "This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Variant parts: In ClassiX® a variant part is a description for an actually occurring part, a pattern for a distinct part. This description includes - as for any other part - an identifying number, a description, various details, such as logistic and dispositive identification, etc. However, a variant part is also described by means of a list of characteristics. This list of characteristics defines the characteristics or quantities whose different values or characteristics can be used for an actual part. {img type=\"fileId\" fileId=\"320\" thumb=\"box\" width=\"100%\"} If you give a value for the length and a value for the width of our sheet metal with the number 4711, then such a part is described completely exactly. Although only one (variant) part is specified (\"sheet 4711\"), by additionally specifying the values of the characteristics, it is possible to describe different characteristics of one and the same variant part and thus define different, exactly described parts. A variant part can thus be used like any other part in the system, with the difference that all values for characteristics in the characteristics list must always be specified. The advantage now is that a variant part only has to be defined once in the system, only once as master information in the part master. Nevertheless, a large number of different versions of this variant part are available for further processing in the DP system. If you need sheet metal 4711 in length=100mm and width=50mm, but at another time you need the same sheet metal in length=30mm and width=12mm, you have to enter values for length and width, but you always use the other information of the variant part already stored in the system. In principle, the characteristics of a variant part - as in our example of the sheet metal - can take any value, but valid value ranges can be assigned to the characteristics or attributes. This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Lower and individual parts: As we have seen, variant parts make particular sense when you are dealing with \"equal\" parts of the most varied characteristics/dimensions/performance. However, if some characteristics (keyword \"standard sizes\") of a variant part are used very often, it makes sense to store them as independent parts in the part master. A subpart must hold all attributes of the characteristics bar. Assuming that the two sheets of type 4711 with the dimensions 100/50 and 50/40 are frequently required, they are created in the parts master and assigned to the variant part as so-called lower parts. These subparts can also have the same part number as the variant part, but they must each have different values for the attributes length and width. As a rule of thumb, a variant part should always be created as a subpart in the system if it is kept in the warehouse. In ClassiX®, parts in the part master, which are neither variants nor subparts, are called individual parts. Individual parts can also be specified more precisely via their attributes, but these attributes are only for information purposes. {img type=\"fileId\" fileId=\"322\" thumb=\"box\" width=\"100%\"}. This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Specifications: Specifications are automatically generated by the system if variant parts for which there is no distinct lower part are to be booked into the warehouse as surplus or remaining quantity. This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Part Rolls: Like all other parts in ClassiX®, variant parts can also have different rolls. Specifications as purchase part are described and stored in the purchase role, prices for sale in the sales role, etc. Subparts always also use the role information of the variant part assigned to them, unless they themselves have such a role object. In our example the part 4711/length=50mm and width=40mm has its own purchase role, but uses the sales role of the assigned variant part. {img type=\"fileId\" fileId=\"324\" thumb=\"box\" width=\"100%\"}. This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Examples: In these examples typical schemes for the use of variant parts are shown. This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Definition of semi-finished products I (cut-to-size parts): {img type=\"fileId\" fileId=\"326\" thumb=\"box\" width=\"100%\"}. This is the description of the functionality of the module \"processes_variant01\" with the name \"Variant parts\" regarding Definition of semi-finished products II (linear metres of goods): {img type=\"fileId\" fileId=\"328\" thumb=\"box\" width=\"100%\"}.",
            "This is the description of the module \"itemVarianceAnalyze\" with the name \"Parts Variance Analyser\": The constantly changing requirements in the markets lead to a constant adaptation and expansion of the own product range (external variance). In addition, the company's own engineering and production also contributes to changes in the parts used (internal variance). This external and internal variance often leads to a constant growth of the own parts base and can lead to increasing difficulties to configure the own products customer-specific and error-free.Carefully constructed parts classes or other ontologies can help to keep an overview and order in the parts master, but they usually cannot prevent the parts master from growing per se. Also missing is the definition of a configuration logic for the own products.By introducing sustainable variant management, the growth of the parts master can be slowed down sustainably, which automatically leads to an increased overview, improved order in the parts master and overall to improved efficiency in the production process. On the other hand, the necessary configuration logic for one's own product range results almost in parallel.For this purpose, it is first necessary to find \"similar\" parts in the part master, i.e. to find and structure groups of parts in such a way that the individual members of a group can only be unambiguously described by different versions of one and the same set of characteristics. The attribute scale itself is determined by the group and is therefore valid for all members (parts) of the group.For each group of parts, a so-called variant part with its specific characteristics is then created. The parts of the group are then assigned to the variant part as so-called sub-parts, whereby the characteristics list is defined for each of these sub-parts according to the characteristics of the sub-part. The sub-parts assigned to a variant part clearly show the differences between these sub-parts with regard to the characteristic values of the features.Here it can often already be established that sub-parts have been defined unnecessarily, since their characteristics - clearly described by the characteristic bar - are quite comparable and even substitutable with other sub-parts of the same variant part.The consistent introduction of product features, product feature strips and variant parts gives the entire parts master a clear structure. The focus is no longer on the individual parts, but rather on material features, i.e. characteristics that determine the parts to be used. The rules of configuration logic then only refer to characteristics - i.e. properties - and no longer directly to part numbers.This separation of the configuration logic from part numbers also makes it possible to determine configurations with parts for which there is still \"no part number\": in this case, the configuration determines variant parts with those characteristics for which there is (still) no subpart in the variant part. This does not have to be the case, because the desired - non-existent - part is clearly specified by the variant part and the distinct attribute list. With this unambiguous specification, it can be processed throughout the entire logistics process even without a system in the part master.Variant parts and their associated lower parts with a distinct list of characteristics can thus help to increase the diversity of the product range without creating an overflowing parts master: in this way, variance can be controlled. This is the description of the functionality of the module \"itemVarianceAnalyze\" with the name \"Parts Variance Analyser\" regarding Functionality: With this module, groups of parts can be found by examining the words in the part designations. For this purpose, all part designations are first broken down into the individual words. Each of these words holds all the parts in whose part designation this word occurs. By forming intersections or unions of these individual words it is easily possible to put together groups of parts of \"similar\" parts. This is the description of the functionality of the module \"itemVarianceAnalyze\" with the name \"Parts Variance Analyser\" regarding List window: In this window, the entire functionality for analysing the variance of a parts master is summarised. The following procedure is recommended when analysing the parts variance: This procedure assigns more and more individual parts to variant parts, thus increasing the structure of the parts master. This is the description of the functionality of the module \"itemVarianceAnalyze\" with the name \"Parts Variance Analyser\" regarding Option window: All settings for data exchange can be made here. Once set, options can be saved as the default option for the logged-in user. For this purpose, there is a context menu item on the \"Preferences\" tab in the \"User Preferences\" list, which can be used to save the current options.",
            "This is the description of the module \"processes_variant02\" with the name \"Variant routings and parts lists\": A variant bill of material and a variant routing are characterised by the fact that they consist of conditional items, which are defined by formulas depending on attributes. Only when a bill of material is exploded are these other items exploded to \"real\" bill of material items and the master bill of material becomes a production bill of material. Thus only the master data can contain upperen. The attributes that are significantly involved in the specification are mainly taken from the preceding document of the order item as well as the other higher order items. In this way, similarly constructed parts can use one and the same bill of material although they are not identically constructed. Example {img type=\"fileId\" fileId=\"330\" thumb=\"box\" width=\"100%\"}In this example, variant control is carried out using the attributes DICKE and SORTE_METALL.Without the variant parts list, you would have to create at least two parts lists, as the raw sheet metal differs depending on the type of installation. (And two parts of course, if there were no variant parts). However, ClassiX® uses the upper option, as the example shows. In this case there are two variants, which are dependent on the attribute THICK. Depending on the attribute, the part is then used for 3.0mm or 5.0mm. The main advantage here is the maintenance of the parts lists. Since similar parts lists are combined, the processing effort is minimised, although the creation may be more complex/difficult."
        ],
        "modules": [
            "processes_variant01",
            "itemVarianceAnalyze",
            "processes_variant02"
        ]
    },
    {
        "query": "What is a gozintograph?",
        "response": "Based on the information provided in the module description, I cannot determine what a \"gozintograph\" is. The term is not mentioned anywhere in the text, and it seems to be a unique concept that is not related to any known terminology or practices in supply chain management or ERP systems. Therefore, I cannot provide an answer to the query based on the information provided.",
        "docs": [
            "This is the description of the functionality of the module \"cxItemDemand\" with the name \"Parts requirement (Gozintograph)\" regarding Post Calculation: In order to determine which costs have actually been incurred on a cost object (e.g. sales order), all costs ? its follow-on documents must be added up. These are, for example, goods withdrawal slips, BDE deregistrations, incoming invoices etc. Some parts that are required but not planned have no follow-on documents, but must of course still be debited to the sales order. This is done for these parts using the standard quantity specified in the parts list. Only when the parts requisition is released (traffic light on green), all costs of the non-planned parts are allocated to the cost units via the final costing. All further costs arise automatically with the posting of the follow-up document. Disposition types The following disposition types are available for disposition from the parts request: Explanation of the general term \"Kanban Kanban is Japanese and means something like \"card\". It is a practical system of warehouse management in which a card is placed in each box in which parts are managed in the warehouse, under all parts at the bottom of the box. When the box is empty, the card becomes visible. Now the employee who has taken the last part out of the box must take the card and give it to the buyer indicated on the card. Depending on the replacement time of the part, there must then be 2 or more boxes of this part. Every time a box is empty, a new one is ordered. In the time in which the box is ordered but has not yet arrived or is being produced, the remaining boxes are used. 1. determination of the disposition type of the parts Based on the standard logistic identification of a part (in-house production, purchased or externally produced part) and its provision identification (disposable part, stock part, etc.), the type of disposition is automatically determined for each part in the Gozintograph. Thus, for example, non-stock-managed in-house production parts are set to the disposition type \"production order\", non-stock-managed purchased parts to the disposition type \"requirement request\" and stock parts to the disposition type \"material withdrawal\". Material staging indicators such as manual storage part are parts that actually have the MRP type \"material withdrawal\". However, since such parts are not taken from the warehouse on an order-related basis using material withdrawal slips, and are therefore not \"processed\", such parts are set to the MRP type \"No MRP\". Another irregularity is the \"special material withdrawal\". If a part requisition item is set to special material withdrawal, this requirement does not appear in the MRP account, but the item still has the status warehouse reservation - and can therefore be found via the staging list. These items must also be staged here, but no goods withdrawal documents are created. These parts also appear in the production documents as being to be taken from the warehouse. The determination of the disposition type can either be influenced automatically by separate control systems or changed manually. If, for example, a purchased part that is not normally kept in stock should have a stock (e.g. due to a return delivery from a previous order), the system automatically changes the disposition type from \"requirement request\" to\"material surplus \". The same applies to a production part in stock that may have been \"left over\" from a previous order. The parts can then be taken directly from the warehouse. Parts requisitions marked with this MRP type appear in the staging list under \"Stock reservation\". The disposition type defined in a gozintograph - automatically or manually - can therefore be quite different from the \"standard\" procurement type. The \"standard\" procurement type determines the generally valid case and is (should) not (be) changed (modified) for specific orders. A gozintograph is used to completely record the fully resolved parts lists of all parts. If a part is located below or within an assembly whose MRP type is \"requirement request\" or \"material withdrawal\", then this part or its quantity share - together with all parts of its bill of material - need not be considered further for MRP, as it is already contained in its superior assembly. For such parts, the MRP type is set to \"not required\". Conversely, if the MRP type of the superior assembly is changed to \"production order\" (if it is also an in-house produced part), the subordinate parts are automatically taken into account again in the MRP - the quantities (parts) become visible again. The MRP type\"No MRP\" thus refers to parts that are definitely needed or must be used, but should not be planned. The MRP type\"not required\", on the other hand, refers to parts that do appear in the combined bill of material but whose superior part is not to be produced (the superior part does not have the MRP type \"production order\"). The determined or manually defined disposition type is displayed in the column \"Disposition\". In the next column - if necessary - notes are displayed whether the disposition type could cause problems in the following processing stages. If the check fails, a red warning point is displayed: 2. determination of the standard procurement time according to the disposition type The standard procurement time or also replenishment lead time is taken from the production role for the MRP type \"production order\" and from the order article role of the part for the MRP type \"requirement request\". For production parts this is the pure procurement time of the corresponding level (total lead time of the routing only for this production part, not for its assemblies). It is therefore not the total \"delivery time\" of the part. For parts kept in stock (material withdrawals) a duration of 1 day is entered as standard. In addition to the standard procurement time, it is also possible to have the procurement time determined dynamically. This dynamic determination only affects parts that have received the disposition type \"production order\". Here it is now checked whether a routing has already been exploded on the possibly already attached production order. If so, the total time of the exploded routing is saved as the lead time for the parts request item. If a routing does not yet exist for the production order, or if no production order has yet been created at all, the total time of the master routing is saved as the lead time for the parts request item. 3. scheduling of the necessary provision of parts Due to the sequence of the production stages and the procurement times of the individual parts, there is a scheduling network of the parts among themselves (order network), which is best represented in the form of a Gantt diagram. In forward scheduling, this collective order starts on a predefined date (the default value is the day of planning itself). In backward scheduling, the delivery date (or the staging date, if available) is used as the starting point. It is not possible to schedule into the past, i.e. even with backward scheduling the delivery or staging date can be postponed to a later date than desired. (A corresponding warning message is automatically issued by the system, the system then automatically schedules forwards!) An influence on the delivery or provision date can be achieved by changing (shortening or extending) the procurement time: this results in an extension or shortening of the entire order network. The starting point of scheduling - e.g. the delivery or provision date in the case of backward scheduling - is first transferred to the collective order as the\"latest finish date\". If you subtract the procurement time from such a \"latest end date\", you get a\"latest start date\". The different lengths of the procurement times within a production stage result in\"earliest start dates\" for individual parts, which can be earlier than the latest start date. Adding the procurement time to the earliest start date then results in an\"earliest finish date\" again. In automatic scheduling over a period of time (e.g. \"3rd week 2014\"), the last working day of the period is set as the latest end in backward scheduling. This results in the latest start. Subsequently, the earliest start is determined from the latest start by deducting the duration of the period and the earliest end is determined on the basis of this. Excursus: The production orders are transferred to capacity planning with their respective earliest and latest completion dates . Automatic (non-graphical) forward scheduling: See the Automatic Terminationsection See also operating calendar and buffer times In the case of requirements from part requirements (departure date), the planned date is made up of the earliest and latest start, which also results in a time span. With the evaluation type \"Strict\", the earliest date of this time span is always used for the evaluation, with the setting \"Medium\" exactly the middle and with \"Soft\" the end of the time span, i.e. there is the least buffer for the real requirement. If planning (e.g. stock replenishment) is always to be carried out with a little air, the setting \"Medium\" is recommended, which is always set in the standard system. However, if there is little space in the warehouse or if the warehouse budget is always to be kept as low as possible, the setting \"Soft\" is recommended, whereby planning is always carried out on the actual demand date. Strictly means, therefore, that the goods are always already procured at the earliest possible date and may also lie in the warehouse for some time until they are needed, depending on how large the buffer times of the requirements were. 4. checking the availability of materials Checking material availability on the basis of the earliest or latest date in the parts request. This can be moved forward (with -) or backward by days or weeks. This shift is not calculated in calendar days but in working days, i.e. holidays and weekends are not included. During the check, the subsequent part requirements are normally also taken into account, i.e. parts that are available for the order are also displayed, but are in the red due to other orders. If you select the checkbox \"Ignore later requirements\", these subsequent part requirements will not be considered! On the one hand, it is possible to check the availability of stocked material on the desired date by checking the respective MRP account. The entries with the unavailable material are displayed selected in the list. On the other hand, material overhangs can be checked: If a part is by default a purchase or production part, but remaining stock (material surplus) from previous orders is still available, these entries of the list are also displayed selected for further checking. As a reaction, the MRP type can be changed, for example, from requirement request to material withdrawal, whereby this part is no longer procured via purchasing, but is instead withdrawn from existing (surplus) stock. These checks can also be graphically supported by means of a Gantt chart. 5. triggering of production orders, purchase requisitions and stock reservations Once the disposition types and dates for all parts have been defined within the gozintograph, the further documents such as production orders, purchase requisitions and stock reservations can be created automatically. 6. release of the parts requirement The release of the parts request blocks it from subsequent modification. A. Link with ex ante requirements If a sales order item is planned and preliminary requirements have been created for it, the following query appears, for example If you press \"YES\", it means that a remaining quantity still reserved over advance requirements will be withdrawn from this specific sales order, put into stock and thus released for general free disposal. If you press \"NO\" it means that you still want a remaining reserved quantity to remain available for this sales order and its further future dispositions. In case of doubt, you should therefore answer \"NO\" here, i.e. leave the reserved quantities with this sales order. B. Change in quantity Double-clicking on the part request item opens the individual disposition. Among other things, the quantity of the part requirement item can be changed there. For this purpose the editing field must be activated with the button next to the quantity specification. The quantity change is also carried out in the exploded parts list (predecessor of the parts requirement item) when saving the individual planning run. If the part requirement item has several predecessors, the system tries to distribute the quantity to all predecessors. This can result in the quantity of a BOM item being set to 0 or being greatly increased. If it is not possible to split the new quantity, a corresponding error message is issued and the quantity change is not saved. C. Deletion of direct follow-on documents(production order, requirement request, warehouse reservation) When deleting direct follow-on documents, the respective identifiers within the part request must be deleted, otherwise direct follow-on documents can no longer be created for the affected items. To remove the identifier, there is the menu item Delete in the parts request under Edit. The various identifiers can be removed with the submenu items below. "
        ],
        "modules": [
            "cxItemDemand"
        ]
    },
    {
        "query": "How do I plan production orders?",
        "response": "Based on the information provided in the module description, it appears that the system allows for the creation of production orders based on parts requests, and provides features for managing the work plans and schedules associated with those production orders. However, the query \"How do I plan production orders?\" is quite broad and encompasses many different aspects of the system's functionality.\n\nTo better assist you, could you please clarify what specific aspect of producing production orders you would like assistance with? For example, are you looking for guidance on how to create a production order, how to assign resources to a production order, or how to schedule the production order within the system? Additionally, if there are any specific requirements or constraints related to your production order planning, such as budgetary considerations or regulatory compliance, providing that information would also be helpful in developing a tailored solution.",
        "docs": [
            "This is the description of the module \"proorder\" with the name \"Construction contract\": This module is used to maintain production orders. The items of a production order determine with quantity and date all the parts that are to be produced in the company itself. In general, production orders with their positions are automatically generated from the parts request. Thereby only one production order (a collective order) is generated from a parts request (with the exception of latecomers), whose positions then define the parts to be produced. (After releasing a parts request, you automatically branch to the processing mask of the generated production orders).New production order items can also be opened manually (i.e. production order items without a predecessor), in which case the input option for assignment to a cost centre opens automatically.A work plan must always be defined for each individual production order item. This is generally generated production-specific from the master routing(Explode routing). In the same step the respective start and end times of each work sequence are determined by means of backward scheduling, taking into account the controlled throughput times. The automatically determined end dates as well as the lead times can be manually adjusted for each individual work sequence. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Input window: This window is used to maintain production orders. You can select a production order by entering the desired number in the Number field and confirming with RETURN. If you want to call up the list window, you can select the menu item \"Search\". The items of a production order are displayed in the lower list window. You can revise these production order items by double-clicking them in the window 'Production order items'. With the right mouse button it is possible to switch to the routings and revise them. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Change of dates: The dates of production orders that have already been fully booked and possibly already started and even partially completed can be changed subsequently via the menu Edit/End dates. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Changes to the production work plan after posting the work times: If a routing is to be changed after the production order has been released, an individual item can be booked out, changed and booked in again by using the context menu (right mouse button on selected item in the item list), menu item \"Item - Book out\". While the position is booked out, it remains in the status \"Stopped\". It is now possible to make changes to the work plan. After successfully changing a task list or creating a new task list, the item can participate in the business process again. The work times must now be booked in again, which returns the status of the item from \"Stopped\" to its original status. To change the work plan, only the item needs to be booked out and opened as described above. Afterwards new work sequences can be added or deleted on the tab \"Work plan\". By double-clicking, you can directly access the editing mask of the work sequence, on which its data can then be changed. Using the arrow keys next to the list, the sequence of operations can be changed as required. The list is not sorted. However, it is only possible to change the routing of a production order item as long as it has not been staged: the staged quantity is then already written to the triggering requirement. If you want to remove work sequences for which PDC confirmations have already taken place, you can either set these work sequences to \"completed\" with a possible remaining time that has not yet been reported, or you can change the status of the work sequence directly from the worklist to \"completed\". If, after processing, the total time of all work sequences of a production order item is longer or shorter than planned in parts scheduling, the production order item (or the work centre times) cannot be posted because the throughput times on the production order and parts request differ. In order to correct this it is possible to mark in the parts request the parts request item belonging to the changed production order item and to transfer the lead time resulting from the sum of the work sequences to the parts request item via the menu \"Edit - MRP - Determine procurement time - Set selected - Dynamic\". Due to the now changed throughput time of one production order item, a gap in the workflow across all production order items is created. For this reason, the scheduling of the entire parts requirement must now be rescheduled with the new throughput times. For this purpose the scheduling type \"rescheduling\" must be selected. Already scheduled items are not affected by this rescheduling. After rescheduling, the parts request can then be released and the work times can be booked back into the production order. Via the menu \"Edit - Check - Changed dates\" it can be checked after rescheduling whether the rescheduling had effects on subsequent documents such as further production order items or requirement coverage requests. All Explained in keywords, the change in the work sequences looks like this:. ",
            "This is the description of the module \"statprpl\" with the name \"Production planning orders\": This list should be the basis for the coordination between sales and production and thus the starting point for the timely scheduling of sales orders in production. Furthermore, it offers the possibility to evaluate the commissioned, performed or still to be performed service of a production company as a whole (see option Performance). As a basis for this production planning, sales order items can be listed here by means of various global selection criteria (see Tabular parts, characteristics, other restrictions) or direct individual selection. The core data displayed includes customer, parts, quantity, price and date information for the individual items. In addition, the resource allocation (which can be switched on and off via an option) can be listed (also controllable via an option as target, actual and open times). Since by default a sorting according to the production date of the individual items with corresponding subtotals is carried out, a target, actual or still open debit of the production from sales orders is displayed, sorted by date. This is the description of the functionality of the module \"statprpl\" with the name \"Production planning orders\" regarding Functionality: Listing of sales order items either according to various selection criteria or by direct selection. Display of value and time data to determine future, already performed or commissioned services. This is the description of the functionality of the module \"statprpl\" with the name \"Production planning orders\" regarding Option window: All settings can be made here. The window can only be closed with the \"OK\" button.",
            "This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Graphical scheduling of work plan positions: It is also possible to change the dates of work sequences in the graphical scheduling of the part request. The work plan does not need to be booked out (it is not possible to delete or add work sequences, only to change the lead time or the start and end dates). Graphical scheduling can be called up via the menu item \"Edit - Capacity - Graphical scheduling\". Whether there is sufficient capacity for the exploded routings can be checked via the menu item \"Edit - Capacity - Capacity check of all / selected items\". If all routings are to be checked, no item or all items must first be selected. More information about graphical scheduling and capacity check See also calendar of operations Subsequent changes to parts list items below production order items After changing a bill of material item which is located below a parts request item to be produced, the production order item receives an indicator (date) that the papers must be reprinted. This date can be seen in the production order processing mask in the penultimate column and in the worklist in the 2nd column. It disappears again after \"real\" printing of the production papers. For the further procedure when subsequently changing parts list items, see here. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding List window: Used to list the production orders. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Selection window: This window is used to select a production order. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Progress of work: This window is used to display the work progress of a production order. The \"Error\" column indicates as a number (bit pattern) the error code when data is transmitted from the PDA: // bit 0 = 1: multiple start events on the same day // bit 1 = 2: start event after end event // bit 2 = 4: Pause message after multiple starts (automatic break event with multiple starts) // bit 3 = 8: Pause message without start message (break/end event without start event) // bit 4 = 16: unknown BDE message (wrong event) // bit 5 = 32: multiple end events. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Option window: Each time the production order window is opened, the options described here are reset to the default settings. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding External work sequences Assistant: Using the assistant of the external work sequences, total quantities can be automatically assigned for the selected items, from which orders and own supplies of the superordinate parts can be created. Sequence description of external work sequences which are processed via the assistant:. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Printed production order items: This window is used to search for production order items printed today (or on another date that can be set). From this list, the withdrawals for all marked orders can be generated in summary form and the material accompanying sheets of the production orders can be printed. This evaluation list is opened by the warehouse every day to see which warehouse reservations need to be made, without the need for production to run to the warehouse with a production paper to tell people which order is to be produced now. This is the description of the functionality of the module \"proorder\" with the name \"Construction contract\" regarding Technical provision:: If a production order is provided, the production order is connected with all its parts list predecessors via the connection transfered.predecessors/transfered.successors. This is necessary so that individual parts list items can also be provided, for example, if several predecessors have been combined in a parts request and now only a single order item is to be provided. If the macro PROVIDE_PRODUCTION_ORDER_ITEM is called up with a BOM item, only the quantity of the BOM item is marked as staged, and only this quantity is allocated to ONLY the direct order predecessor (if available) as a staged quantity."
        ],
        "modules": [
            "proorder",
            "statprpl"
        ]
    },
    {
        "query": "What are specification numbers?",
        "response": "Based on the descriptions provided, I can confidently answer your query. Specification numbers are unique identifiers assigned to spare parts listed in a spare parts list. They are used to describe the attributes of a variant part and enable customers to easily and accurately identify the exact part they need.",
        "docs": [
            "This is the description of the module \"cxPattItemNumber\" with the name \"Specifications\": Specifications are automatically generated by the system if variant parts for which there is no distinct sub-part are to be booked into the warehouse as surplus or remaining quantity. The specifications save the characteristics of the variant part and the standard costs for the specification. This enables the automatic use of these quantities in parts planning and the warehouse value calculation in inventory and warehouse statistics. This is the description of the functionality of the module \"cxPattItemNumber\" with the name \"Specifications\" regarding Input window: This window is used to maintain . This is the description of the functionality of the module \"cxPattItemNumber\" with the name \"Specifications\" regarding List window: This window is used to list . This is the description of the functionality of the module \"cxPattItemNumber\" with the name \"Specifications\" regarding Selection window: This window is used for the selection . This is the description of the functionality of the module \"cxPattItemNumber\" with the name \"Specifications\" regarding Options window: All settings for the search can be made here.",
            "This is the description of the functionality of the module \"processes_serinumber\" with the name \"Serial numbers - Processes\" regarding General: A serial number is a unique string of characters used to identify a part of a series. They can be found on all types of products and are used for warranty purposes, quality control, detection of stolen goods and counterfeits. The term is also used when referring to alphanumeric identifiers which are used for unique identification. The aim is to seamlessly document all movements and processing of each serial numbered part. In this way information can be provided at any time for a clearly identifiable part. Via the document history, the individual processing stages of the parts with the respective serial numbers can be traced and viewed transparently. This includes, for example, information about which part of a series was stored at which storage location. But also how and when it was processed and where it was delivered to under certain circumstances. In order to define a part in ClassiX as serial number managed, the option \"Serial number managed part\" must be set via the logistics account in the group warehouse account. This is the description of the functionality of the module \"processes_serinumber\" with the name \"Serial numbers - Processes\" regarding Serial numbers at the storage place: The identification \"Serial number managed part\" means that the serial numbers of the moving parts are carried along with the goods receipt and all stock entries. For goods receipt this is still optional under the option \"bound serial numbers\". At the latest at storage, transfer and removal from stock of serially guided parts, a recording of the serial numbers in the amount of the quantity is mandatory. When posting the documents, the serial numbers are automatically assigned to or removed from the parts warehouse account depending on the stock movement. This functionality ensures that at any time in the system it is possible to identify which serial numbers are located in which storage bins. In addition, it is possible to see how a serial number was further processed via the stock removal and its predecessors. If a part is only defined as a serial number-maintained part at a later date, manual reworking of the serial numbers and their allocation to the storage locations is also possible. Via the input window of the serial numbers under the point \"Business objects\" -> \"Insert\" -> \"Stock account part\" the part including the stock account can be defined as serial number managed part and thus serial numbers can be assigned to this part afterwards. During stocktaking, the system checks whether the number of serial numbers assigned to the partial storage bin account corresponds to the quantity counted. If this is not the case, the serial numbers of the counted parts must be assigned to the inventory item. By posting the inventory, the serial numbers on the partial storage bin account are then automatically adjusted. This is the description of the functionality of the module \"processes_serinumber\" with the name \"Serial numbers - Processes\" regarding Serial number guided parts without stock guide: In addition to the \"normal\" serial number managed parts, where the complete logistics chain is documented and the batches in the warehouse are managed separately, there is also the possibility of creating serial number managed parts, where the serial number is only recorded once at the time of removal from stock. The document history then shows which serial number has been used in which orders. Serial number-managed parts without stock management are defined via the logistics account as serial number-managed parts \"Only on removal from stock\". When recording a removal from stock, the serial numbers must be indicated corresponding to the number of serial number-managed parts to be removed from stock, otherwise the removal from stock cannot be booked.",
            "This is the description of the module \"serinumb\" with the name \"Serial numbers\": A serial number is a character string used to identify one or more parts. It is important to understand that despite multiple uses (even two suppliers could use the same serial number), a serial number is in principle unique. In ClassiX a serial number is therefore modelled by 3 objects (see data model) 1. the reference to the serial number object (via a CX_SERIAL_NUMBER ACCOUNT object to an object of type CX_SERIAL_NUMBER) 2. the references to the business objects, including the part Other business objects could be the supplier who delivered the part and assigned the serial number or an industrial plant to which the part was delivered or which represents the part itself (device or plant) 3. the references to the documents that the part has passed through This information makes it possible to identify a part and its movements clearly and transparently. This is the description of the functionality of the module \"serinumb\" with the name \"Serial numbers\" regarding List window: Used to list the serial numbers. This is the description of the functionality of the module \"serinumb\" with the name \"Serial numbers\" regarding Serial numbers of document: Selection window for serial numbers for a document (inward, outward and transfer, delivery note, etc.). This is the description of the functionality of the module \"serinumb\" with the name \"Serial numbers\" regarding Selection window: This window is for selecting serial numbers. This is the description of the functionality of the module \"serinumb\" with the name \"Serial numbers\" regarding Serial number generator: This window is used for mass registration of serial numbers Examples: If only the field \"Serial number range from\" is filled with 12345 and \"Number of new serial numbers\" with 10, serial numbers are created in the following format: 12345-01, 12345-02, 12345-03, . Since letters can be entered here instead of numbers, the result could also look like this: Defective delivery -01, defective delivery -02, If the field \"Serial number range from\" is filled with A12345, the \"Serial number range to\" with A12999 and the \"Number of new serial numbers\" with 10, serial numbers are created in the following format: A12345, A12346, A13247, A12348, . If only the field \"Serial number range from\" is filled with A12345 and the \"Serial number range to\" with A12347, serial numbers are created in the following format: A12345, A12346 and A12347. This is the description of the functionality of the module \"serinumb\" with the name \"Serial numbers\" regarding Default first serial number: This window is used to enter the first serial number from which the next serial numbers are automatically incremented. The call is made, for example, from a production order item. Example: 000110000\" is entered in the field \"First serial number 000110001, 000110002, 000110003, 000110004. This is the description of the functionality of the module \"serinumb\" with the name \"Serial numbers\" regarding Data model: {img type=\"fileId\" fileId=\"475\" thumb=\"box\" width=\"100%\"}.",
            "This is the description of the module \"spardire\" with the name \"Spare parts list\": When a complex system is delivered, a spare parts list makes it possible to provide the customer immediately with a spare parts list with unique spare parts numbers which he can refer to in the event of damage. All parts of an order for which the indicator \"Spare part\" has been set in the part master, the indicator \"Spare parts list\" in the master parts list or the indicator \"Spare parts list\" in the production parts list are automatically transferred to the spare parts list. Since a lot of work is also done with variant parts, it can be difficult to agree with the customer which part he needs exactly in which specification. To simplify this, ClassiX offers the possibility to create so-called specifications on the spare part rolls of the variant parts, which describe the attributes. This way, for each variant part version a unique spare part number is created, which enables the customer to describe easily and exactly which part is concerned in the system. If a variant part has several spare part roles, the desired role must be assigned via the context menu on the list. The new E-number can then be assigned via the context menu. This is the description of the functionality of the module \"spardire\" with the name \"Spare parts list\" regarding Input window: This window is used to maintain spare parts lists. This is the description of the functionality of the module \"spardire\" with the name \"Spare parts list\" regarding List window: This window is for listing spare parts lists. This is the description of the functionality of the module \"spardire\" with the name \"Spare parts list\" regarding Selection window: This window is used to select spare parts lists. This is the description of the functionality of the module \"spardire\" with the name \"Spare parts list\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button."
        ],
        "modules": [
            "cxPattItemNumber",
            "processes_serinumber",
            "serinumb",
            "spardire"
        ]
    },
    {
        "query": "What is a subject characteristics bar?",
        "response": "Based on the provided module descriptions, I cannot determine what a \"subject characteristics bar\" is. The term does not appear anywhere in the descriptions, and none of the modules mentioned seem to relate to such a concept.\n\nHowever, based on the context of the query, it seems likely that the \"subject characteristics bar\" refers to some kind of feature or attribute related to the subject of the module. Perhaps it is a specific set of characteristics or attributes that apply to the subject, rather than the general set of attributes that can be applied to any object in the system.\n\nWithout more information or clarification, it is difficult to provide a definitive answer to the query. However, if you have any additional details or context, I would be happy to try and assist you further.",
        "docs": [
            "This is the description of the module \"attrisit\" with the name \"Subject characteristics bar\": The characteristics list of a variant part determines the characteristics which can be differently pronounced for the part. In addition to the use of the variant part itself, the variant part can also be assigned to so-called sub-parts, which are differently pronounced in exactly these characteristics. This is the description of the functionality of the module \"attrisit\" with the name \"Subject characteristics bar\" regarding Functionality: This window is used to maintain the characteristics bar of variant parts. You can create global Insert, change or delete attributes. Additionally you have the possibility to create new local attributes which are then only valid in this variant part. The attribute data can be edited by double-clicking. You can change the order of the attributes with the arrow buttons. You only need to select one attribute in the list and then move it up or down using the buttons. A context menu for editing the attributes is called up by right-clicking. In addition to creating a local attribute and inserting a global attribute, there is another way to extend the attribute bar, dropping an attribute. If a master attribute is dropped into a characteristics bar, it is inserted globally. This is different for local attributes which have been inserted in another characteristics bar, for example. With this type of attribute, a copy is created and inserted locally. An attribute in the attribute bar is only a (controlling) attribute if \"no value specification\" or \"attribute\" is set as type. In this case, the attribute may only be a preset attribute. Otherwise \"other\" attributes can also be assigned to a variant part, the \"Type\" column must remain empty. It is recommended to place all attributes of a variant part at the beginning of the attribute list in the desired order. You can insert attributes of the following types: You can also find more information in the topic Features.",
            "This is the description of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\": Characteristics tables make it easier to work with attributes when you have to assign the same \"groups\" of attributes to an attribute set again and again. Thus, any attributes can be listed in a characteristics table, so that one only needs to insert the characteristics table. This is the description of the functionality of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\" regarding Input window: This window is used to maintain attribute lists (attribute tables). You can select an attribute table by entering the desired number and confirming with RETURN. If you want to open the list window, you can select the menu item \"Search\". This is the description of the functionality of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\" regarding List window: Used to list the characteristics tables. This is the description of the functionality of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\" regarding Selection window: This window is used to select a table of characteristics. When the characteristics table is accepted, a dialogue window appears. Here the user can decide whether the characteristics table is to be expanded, whereby the attributes are inserted individually into the attribute set.",
            "This is the description of the module \"attribut\" with the name \"Attribute (module)\": There are three attribute types in ClassiX®: Preset material characteristic Calculated material characteristic Conditional material characteristic You can find more information in the topic Features. This is the description of the functionality of the module \"attribut\" with the name \"Attribute (module)\" regarding Input window: This window is used to maintain the attributes. It varies for the three attribute types, but behaves almost the same. Note: Characteristics are clearly defined via the data field. Therefore, each data field should only be used once, otherwise unwanted results may occur when integrating the attributes within the quotation and order items. This is the description of the functionality of the module \"attribut\" with the name \"Attribute (module)\" regarding List window: Serves to list the attribute objects. This is the description of the functionality of the module \"attribut\" with the name \"Attribute (module)\" regarding Selection window: This window is used to select an attribute object.",
            "This is the description of the module \"person\" with the name \"People\": This module is used for the care of the persons. A person is described by their different names, date of birth, address, etc. This data represents the basic information that is transferred to the respective roles (contact person, employee, consultant, customer, etc.). More specific data is maintained in the roles of a person. Linking the roles to a person ensures that no redundant data is created. This is the description of the functionality of the module \"person\" with the name \"People\" regarding Input window: This window is used for the care of people. The window is divided into four flaps. The most important one is the first tab \"Master data\". It contains basic personal data as well as communication information such as address and telephone number. These can be maintained in the lower area via the main menu or the context menu. The second tab \"Additional data\" contains data which is not part of the most important personal data. In the standard system, the bank details of a person are found here, which can also be maintained accordingly via the main menu. At the same time, this tab provides space for customer-specific extensions. The third tab \"Characteristics\" offers the possibility to add the characteristics (attributes) defined in ClassiX® to a person and to assign corresponding values to them. The fourth and last tab \"Picture\" is used to store a picture of a person in the database. An image can be loaded via the button \"Select image\". This is then displayed accordingly. With the help of the radio buttons the display can be selected, either in original size or dynamically adjusted to the window size. This image is used at different places within ClassiX®, e.g. it is displayed in the employee mask. This is the description of the functionality of the module \"person\" with the name \"People\" regarding List window: This window is used to list the persons. The list of roles and communication objects of the person currently selected is displayed on the right-hand side of the window. Double-clicking on a role takes you directly to its input window. Furthermore, the context menu can be called up by right-clicking to create new roles or to display the validity. Communication objects can be edited with a double click. This is the description of the functionality of the module \"person\" with the name \"People\" regarding Selection window: This window is used to select a person. This is the description of the functionality of the module \"person\" with the name \"People\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button.",
            "This is the description of the module \"queryatt\" with the name \"Enquiry about characteristics\": You can search objects by their attributes (e.g. all parts that are black). This is the description of the functionality of the module \"queryatt\" with the name \"Enquiry about characteristics\" regarding Functionality: Almost all data in the ClassiX® system can receive additional information via so-called attributes. For example, an attribute could be assigned to each company, indicating how many employees this company employs. Another one, how many screen workstations there are. This module is now available, for example, to search for all companies with more than 40 workstations. It allows a combination of an unlimited number of attributes, which searches for suitable objects in the list from which this search was opened. All attributes to be searched for can be inserted into the list with the \"Insert\" button. After the insertion the comparison operators (e.g. =, >, present, not present) and the possibly required comparison values can be set here. They are linked with\"AND\". So if two attributes are inserted in this list, both attributes (as set) must be present on the object in order to obtain a hit in the search. Example: Search via the list of companies: Attribute \"NUMBER_OF_EMPLOYEES\", comparison operator \">=\" comparison value \"40\". All companies that have the attribute NUMBER_COMPLETEES with a value greater than or equal to 40 are found.",
            "This is the description of the module \"metaobj\" with the name \"English:meta object\": A meta object represents a group of identical or similar objects of an application solution. It is similar because different objects, for example of the same class \"CX_CUSTOMER\", can differ from each other by the number and type of data fields. Nevertheless, such \"similar\" objects are combined in the meta model to form a meta object \"customer\". This meta-object is then described by the totality of all possible data fields. Meta-Objects are created exclusively by the ObjectCrawler. This is the description of the functionality of the module \"metaobj\" with the name \"English:meta object\" regarding Identification of a meta-object: A meta-object is primarily identified by its type. The type is the class name (for example, CX_CUSTOMER) of the objects. A further identification feature is the specification of the main object. Main objects are objects that are registered in a RootEntryPoint-Collection (REP Collection) of the respective class type. Thus all main objects can be identified directly and assigned to the corresponding meta object. Thus, each customer object can be identified by specifying \"type=CX_CUSTOMER and main object=yes\". But now there are also slave objects in the database which are not in a REP collection and therefore are not main objects. These slave objects are referenced/defined/identified via their master. The master is itself a meta object and references/defines/identifies other meta objects as slave objects. This is to be distinguished because slave objects (can) have a different character in the application solution due to different assignments. This becomes clear with the example of the class CX_LINK_TXN. Objects of this class can be used as order items, delivery note items or any other document items. In order to identify an order item as a meta-object, the type (=CX_LINK_TXN), the identification main object (=no) and the specification of its master are necessary. The type of the master object is in this case CX_SALES_ORDER and e.g. in case of a delivery note item CX_DELIVERY_NOTE. The set of rules according to which the master object of a slave object is defined is stored in the ObjectCrawler. Some of the rules are listed below as examples: In addition to the normal slave objects, there are also the data cube objects (of type CX_DATA_CUBE / CX_LOG_CUBE), which are not defined by a master object but by their dimensions. As dimensions there are at least two master objects. A two-dimensional data cube is therefore identified by the fact that there are exactly two unique references (dimension 1 and dimension 2) to other meta objects. Exceptions are made for data cubes that represent monthly or annual accounts. Here there is a \"correct\" dimension and a dimension representing the time span (\"year\", \"month\"). This is the description of the functionality of the module \"metaobj\" with the name \"English:meta object\" regarding Input window: This window is used for the maintenance of . This is the description of the functionality of the module \"metaobj\" with the name \"English:meta object\" regarding List window: This window is used to list the meta objects. This is the description of the functionality of the module \"metaobj\" with the name \"English:meta object\" regarding Selection window: This window is used for selection . This is the description of the functionality of the module \"metaobj\" with the name \"English:meta object\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button."
        ],
        "modules": [
            "attrisit",
            "atsetobj",
            "attribut",
            "person",
            "queryatt",
            "metaobj"
        ]
    },
    {
        "query": "How do I implement attributes into subject characteristics bars?",
        "response": "Based on the provided module descriptions, it appears that implementing attributes into subject characteristics bars involves several steps and requires knowledge of the underlying data structures and relationships between attributes and subject characteristics bars. To assist with this process, I would suggest breaking down the implementation into smaller tasks or questions, such as:\n\n1. What are the different types of attributes that can be added to a subject characteristic bar?\n2. How can I create a new local attribute and insert it into a subject characteristic bar?\n3. Can I move attributes up or down in the attribute list, and what is the purpose of doing so?\n4. Are there any restrictions or considerations when adding attributes to a subject characteristic bar?\n5. Is there a way to preview or test the changes made to the attribute list before committing them?\n6. Where can I find more information about working with attributes in Classix?\n\nBy approaching the implementation in this manner, we can ensure that all relevant aspects of adding attributes to a subject characteristic bar are considered, and that any potential issues or challenges are addressed early on in the process. Additionally, seeking out additional resources and documentation from Classix can provide valuable insights and guidance throughout the implementation journey.",
        "docs": [
            "This is the description of the module \"attrisit\" with the name \"Subject characteristics bar\": The characteristics list of a variant part determines the characteristics which can be differently pronounced for the part. In addition to the use of the variant part itself, the variant part can also be assigned to so-called sub-parts, which are differently pronounced in exactly these characteristics. This is the description of the functionality of the module \"attrisit\" with the name \"Subject characteristics bar\" regarding Functionality: This window is used to maintain the characteristics bar of variant parts. You can create global Insert, change or delete attributes. Additionally you have the possibility to create new local attributes which are then only valid in this variant part. The attribute data can be edited by double-clicking. You can change the order of the attributes with the arrow buttons. You only need to select one attribute in the list and then move it up or down using the buttons. A context menu for editing the attributes is called up by right-clicking. In addition to creating a local attribute and inserting a global attribute, there is another way to extend the attribute bar, dropping an attribute. If a master attribute is dropped into a characteristics bar, it is inserted globally. This is different for local attributes which have been inserted in another characteristics bar, for example. With this type of attribute, a copy is created and inserted locally. An attribute in the attribute bar is only a (controlling) attribute if \"no value specification\" or \"attribute\" is set as type. In this case, the attribute may only be a preset attribute. Otherwise \"other\" attributes can also be assigned to a variant part, the \"Type\" column must remain empty. It is recommended to place all attributes of a variant part at the beginning of the attribute list in the desired order. You can insert attributes of the following types: You can also find more information in the topic Features.",
            "This is the description of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\": Characteristics tables make it easier to work with attributes when you have to assign the same \"groups\" of attributes to an attribute set again and again. Thus, any attributes can be listed in a characteristics table, so that one only needs to insert the characteristics table. This is the description of the functionality of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\" regarding Input window: This window is used to maintain attribute lists (attribute tables). You can select an attribute table by entering the desired number and confirming with RETURN. If you want to open the list window, you can select the menu item \"Search\". This is the description of the functionality of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\" regarding List window: Used to list the characteristics tables. This is the description of the functionality of the module \"atsetobj\" with the name \"Attribute lists (characteristic tables)\" regarding Selection window: This window is used to select a table of characteristics. When the characteristics table is accepted, a dialogue window appears. Here the user can decide whether the characteristics table is to be expanded, whereby the attributes are inserted individually into the attribute set.",
            "This is the description of the module \"attribut\" with the name \"Attribute (module)\": There are three attribute types in ClassiX®: Preset material characteristic Calculated material characteristic Conditional material characteristic You can find more information in the topic Features. This is the description of the functionality of the module \"attribut\" with the name \"Attribute (module)\" regarding Input window: This window is used to maintain the attributes. It varies for the three attribute types, but behaves almost the same. Note: Characteristics are clearly defined via the data field. Therefore, each data field should only be used once, otherwise unwanted results may occur when integrating the attributes within the quotation and order items. This is the description of the functionality of the module \"attribut\" with the name \"Attribute (module)\" regarding List window: Serves to list the attribute objects. This is the description of the functionality of the module \"attribut\" with the name \"Attribute (module)\" regarding Selection window: This window is used to select an attribute object.",
            "This is the description of the module \"attrisat\" with the name \"Object characteristics\": Each object (derived from CX_CONTAINER ) can have freely definable attributes that can be edited with this module. This is the description of the functionality of the module \"attrisat\" with the name \"Object characteristics\" regarding Functionality: This window is used to maintain attributes. You can maintain global Insert, change or delete attributes. Additionally you have the possibility to create new local attributes, which are then only valid in this object. The attribute data can be edited by double-clicking. You can change the order of the attributes with the arrow buttons. You only need to select one attribute in the list and then move it up or down using the buttons. A context menu for editing the attributes is called up by right-clicking. You can insert attributes of the following types: You can also find more information in the topic Features.",
            "This is the description of the module \"attrilst\" with the name \"Attributes\": This module is used to list all attributes (regardless of whether they are of the type preset, calculated, conditional or table) or to calculate the value of an attribute that can be freely entered by name (in the case of calculated or conditional attributes). The second functionality is used from other modules, e.g. if you want to query the value of an attribute in a subitem of an order to check how the value is calculated from the characteristics of the subitem itself and the higher-level items. You can find more information in the topic Features. This is the description of the functionality of the module \"attrilst\" with the name \"Attributes\" regarding List window: Serves to list the attribute objects of all types. This is the description of the functionality of the module \"attrilst\" with the name \"Attributes\" regarding Test window: This window is used to calculate the value of an attribute object.",
            "This is the description of the module \"person\" with the name \"People\": This module is used for the care of the persons. A person is described by their different names, date of birth, address, etc. This data represents the basic information that is transferred to the respective roles (contact person, employee, consultant, customer, etc.). More specific data is maintained in the roles of a person. Linking the roles to a person ensures that no redundant data is created. This is the description of the functionality of the module \"person\" with the name \"People\" regarding Input window: This window is used for the care of people. The window is divided into four flaps. The most important one is the first tab \"Master data\". It contains basic personal data as well as communication information such as address and telephone number. These can be maintained in the lower area via the main menu or the context menu. The second tab \"Additional data\" contains data which is not part of the most important personal data. In the standard system, the bank details of a person are found here, which can also be maintained accordingly via the main menu. At the same time, this tab provides space for customer-specific extensions. The third tab \"Characteristics\" offers the possibility to add the characteristics (attributes) defined in ClassiX® to a person and to assign corresponding values to them. The fourth and last tab \"Picture\" is used to store a picture of a person in the database. An image can be loaded via the button \"Select image\". This is then displayed accordingly. With the help of the radio buttons the display can be selected, either in original size or dynamically adjusted to the window size. This image is used at different places within ClassiX®, e.g. it is displayed in the employee mask. This is the description of the functionality of the module \"person\" with the name \"People\" regarding List window: This window is used to list the persons. The list of roles and communication objects of the person currently selected is displayed on the right-hand side of the window. Double-clicking on a role takes you directly to its input window. Furthermore, the context menu can be called up by right-clicking to create new roles or to display the validity. Communication objects can be edited with a double click. This is the description of the functionality of the module \"person\" with the name \"People\" regarding Selection window: This window is used to select a person. This is the description of the functionality of the module \"person\" with the name \"People\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button.",
            "This is the description of the functionality of the module \"processes_attribute\" with the name \"Attributes - Processes\" regarding 7. editing of attributes in master and transaction data: The group for editing attributes on master data and transaction data is usually as follows. {img fileId=\"248\" thumb=\"box\" width=\"100%\"} Global attributes are represented by the globe, local attributes are marked with the box. The values can be maintained by double-clicking on one of the attributes. Behind the purple lines there are visible attributes which have been inserted in a structured way. This means that various attributes have been combined into an attribute node (see Structuring of Attributes). By double-clicking on the purple line, the node is expanded and the attributes of this node are displayed. Another double-click collapses the node again. The button \"Edit\" leads to a selected global attribute to edit the attribute value in the list. local attribute for editing the attribute in the edit mask purple attribute node for editing the node designation in the list The list of attributes can be extended by clicking the \"Insert\" button. The normal case is that a root attribute is selected and inserted. Here there are the options \"At end\", \"Before selected position\" and \"Behind selected position\". In addition, a local attribute can also be created. Here the type of the attribute (\"Presettable\", \"Calculated\", \"Conditional\") must be determined via the menu. Via the menu \"Insert new structural level\" an attribute node can be created manually. Attributes can then be moved up and down in this node using the arrows. The arrow keys take over the function to determine the order of the attributes. You can also move an attribute into an attribute node or retrieve it again. Before attributes are moved to a level from within it, the user is asked if he really wants to perform this action. This is the description of the functionality of the module \"processes_attribute\" with the name \"Attributes - Processes\" regarding 8. use of comparison operators: Even before creating a new attribute with an attached table, it is important to know how to work with it later. You must also be aware that the attributes can have different types internally, e.g. STRING, ENUMCHAR, etc. In the case of characteristics created as type STRING or with a data field of type STRING, the value (text) entered by the user is retained internally and is therefore also used for comparisons. If, however, you create a characteristic with the type ENUMCHAR, for example, the internal structure of the attached table is different. There is no longer the value directly (e.g. text in the case of the type STRING), but in the internal table there is a numbering given by the feeder and for each of the entries the value to be shown externally, e.g. 1 -> apples, 2 -> pears and 3 -> bananas. For comparison operations, the internal value is always used in all cases of e.g. ENUMCHAR, because you cannot compare apples with pears over \"bigger\" or \"smaller\", so to speak. But of course you can test for \"equal\" without any problems, but you have to be very careful with \"not equal\" comparisons. This is especially true in cases where one has created, for example, the following table: 1 -> \"100\", 2 -> \"200\" and 3 -> \"150\". There you cannot simply make the comparison \"less than or equal to 200\", because the \"200\" is first converted into the internal value 2, and with the internal values only 1 and 2 are \"less than or equal to 2\", so that the entry 3 -> \"150\" is not output."
        ],
        "modules": [
            "attrisit",
            "atsetobj",
            "attribut",
            "attrisat",
            "attrilst",
            "person",
            "processes_attribute"
        ]
    },
    {
        "query": "How are parts evaluated in the warehouse?",
        "response": "Based on the information provided in the module description, it appears that parts are evaluated in the warehouse using two different methods:\n\n1. Standard price from the production role or order roll: If an order exists as a predecessor, the price is taken from the order roll. Otherwise, the price is taken from the production role.\n2. Average price from the warehouse account: If no preceding document exists, the average price from the warehouse account is used.\n\nIt is important to note that the specific evaluation method used may depend on the configuration of the system and the needs of the user. Additionally, the module description mentions that the influence of storage on the moving average price of the part depends on the setting for determining the average price on the client. Therefore, it is recommended to consult the module documentation or seek assistance from a qualified professional to determine the exact evaluation method used in a particular instance.",
        "docs": [
            "This is the description of the module \"stockInput\" with the name \"Storage\": General Price formation on the positionStorage of excess quantities from customer ordersStorage of variant parts Cost centres Cost unit EvaluationInfluence of storage on the moving average price of the part Post CalculationMobile storage. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding General: You can post warehouse parts that were entered in the goods receipt to the warehouse or enter other goods receipts (e.g. surplus stock removal ). The other putaways can be assigned to a cost object in order Attention! For QA parts, putaways can only be made if quality assurance documents have been posted for the corresponding goods receipt to be put away. The open quantity of the goods receipt is determined automatically. The following formula is used for this: Sum of all QA quantities - quantity provided to GR - putaways already posted - returned quantity = new quantity for putaway (goods receipt). Example: Goods receipt item 10 pieces has the following successors: = 1 piece open for new storage position ( 7 pieces - 5 pieces - 1 piece ) As no quality assurance has been booked for the last 3 parts, they cannot be stored. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Price formation on the position: There are always 2 prices on the storage position: The standard price of the part from the corresponding roll (production or order roll, depending on the logistics settings) and the price which is the current average price on the stock account or the price from the previous order. For newly created parts and immediate storage, the average price is not yet set. In these cases the field \"Price\" is writable and a valuation of the goods receipt can be made with this. After a one-time entry and storage, the price is set as the new average price on the warehouse account of the part and can only be changed afterwards by a physical inventory. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Storage of excess quantities from customer orders: If a quantity from a sales order item which contains a variant part is to be put away, a subpart with the corresponding characteristic must first be created. During the putaway process, the system now recognises that this new subpart on the putaway document is a part belonging to the variant part. The putaway can therefore take place with the lower part. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Storage of variant parts: Variant parts can only be put away if they have the indicator 'common warehouse account'. If this indicator is not set, then only a temporary storage can be created for a variant part. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Cost centre: It is possible to assign a storage to a cost centre at any time by checking the box \"Cost centre\". This is conceivable, for example, if a certain part has been broken on the construction site by an own employee of a certain cost centre. This cost centre was then specifically debited with the replacement of this part. Now this cost centre has procured its own spare part and is to be credited. For this purpose, this cost centre must be specified on the storage. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Cost unit: There is the possibility to relieve a cost unit by storing the goods, this is the case, for example, if an interested party wishes to receive a sample of a part in advance for inspection. In this case, there is not yet an order to which these costs could be linked. In this case it is a good idea to create a project (cost unit) for this interested party in which all costs are collected. The cost unit can be relieved by storing the part if it is not to your liking. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Evaluation: Storage facilities will be provided with 2 prices: 1. price from previous documents (pricePer) 2. price from rolls (last.svpPricePer) The following rules apply for the determination of prices: For price 1: If a preceding document exists, its price is transferred to the goods receipt document, taking all conditions into account. If no preceding document exists, the average price from the warehouse account is used. If no average price exists in the warehouse account either, the price remains at 0. For price 2: If an order exists as a predecessor, the price is taken from the order roll. In the case of a production order as predecessor, the price from the production role. If the item does not have a predecessor, the logistics indicator is used to check whether the price should be taken from the order or production role. This is the description of the functionality of the module \"stockInput\" with the name \"Storage\" regarding Influence of storage on the moving average price of the part: Which price of the goods receipt changes the moving average price and is thus evaluated in the warehouse statistics, now only depends on the setting for determining the average price on the client. If the option \"roll price\" is selected, the standard price from the procurement role is used for the valuation. If the option \"Document price\" is selected, the price from the previous order item including all surcharges and discounts. ",
            "This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding 1. bearing guide: The warehouse management in ClassiX® consists of the individual storage locations which are assigned to the superordinate warehouses. Each warehouse must be created in ClassiX®. It describes a certain room, a certain building, which serves as a warehouse for parts. Within a warehouse, the individual storage locations must also be stored in the system as storage bins. In ClassiX®, warehouses and the storage bins they contain are not only textual information, but describe accounts with their respective stock values. A warehouse can be assigned a manager, an owner and/or a cost centre. The address of the manager is also the address of the warehouse. For further controls, the type of warehouse can be declared as a consignment, bonded or manual warehouse. Furthermore, warehouses can be marked as non MRP if the stocks in these warehouses are not to be taken into account in MRP from requirement and stock lists. The identification as a chaotic warehouse is used to have the system automatically assign an empty storage bin when goods are received. Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding 1.1 Creating a new warehouse: You can create or edit new warehouses via the menu item 'Organisation warehouses'. Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding 1.2 Creating storage locations: Via 'Edit - Storage bins' you can then create storage bins to which individual parts can be assigned later. Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding 2. stock/requirements list: In the B&B list you can see the demand and stock of parts. For example, you can see if the minimum stock level is not reached. In the B&B list not only the current stock is evaluated but also the planned (dispositive) movements are taken into account. It is also possible to check the planned movements for their dates and, if necessary, to generate requirement requests or stock orders directly. Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding incoming goods: Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding Goods receipt posting: This module is used to record goods receipts and assign them to orders. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding Goods receipt note: A goods receipt slip is printed for each goods receipt and passed on with the goods. The goods receipt slip contains all data from the order. If the goods have been requested for an order, the order item is printed, in the case of warehouse parts the warehouse and storage location and in the case of consumables / capital goods the cost centre/investment number. In addition, the text and any characteristics are taken from the parts master. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding 3.3 Unclear incoming goods: Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding storage: After posting the goods receipt or quality control, stock parts are booked to the corresponding stock account. Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding removal: Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding relocation: You can transfer goods from one storage bin to another. The storage bins do not have to be in the same warehouse. Please refer to the module documentation for detailed information on use. This is the description of the functionality of the module \"processes_stockaccounting\" with the name \"Warehouse - Processes\" regarding 7. quality assurance: Recording of the quality assurance documents. All goods receipt items which are subject to QA at the time of posting must be checked by the quality assurance department before they can be put into storage. QS obligatory means that they bear the QS mark on the part or on one of the requisition, purchase order or goods receipt documents at the specified time. The indicator is frozen during posting, so that subsequent changes do not generate errors in the workflow. On the delivery schedule of a QA part order, the quantity still to be inspected is saved when the goods receipt is posted (inAssurance.quantity). This quantity is reduced by the inspected quantity when a subsequent QA document is posted. The storage account also shows this quantity still to be checked. Please refer to the module documentation for detailed information on use. "
        ],
        "modules": [
            "stockInput",
            "processes_stockaccounting"
        ]
    },
    {
        "query": "What is a price table?",
        "response": "Based on the information provided in the module descriptions, I can confidently say that a \"price table\" refers to a feature in the \"Processes Sales Pricing\" module that allows users to define complex prices or discounts/surcharges based on certain conditions. Specifically, it enables users to create a table with multiple rows representing different combinations of conditions, each with its own price or discount.\n\nThe price table feature is useful when there are many variations of prices or discounts that need to be managed, such as in a scenario where a company offers different prices for products based on volume, location, customer type, or other factors. By defining these conditions in a single table, users can easily manage and update the prices or discounts across all relevant products.\n\nTo summarize, a \"price table\" is a feature within the \"Processes Sales Pricing\" module that enables users to define complex prices or discounts/surcharges based on specific conditions, making it easier to manage and update pricing information across multiple products.",
        "docs": [
            "This is the description of the module \"PriceDiscountTable\" with the name \"Price table\": This module is used to maintain conditional price or discount/surcharge tables. Note: The strictest or stricter condition of two or more must always be at the top, as the table is worked through from top to bottom and the first hit is taken as the answer!.",
            "This is the description of the functionality of the module \"processes_salespricing\" with the name \"Sales pricing\" regarding General: ClassiX® offers a high degree of variability in sales pricing. Thus, prices can not only be stored on the article, but also defined individually for customers (customer agreements) or customer groups. In addition, there are extensive possibilities to define discounts/surcharges and over/under prices. The variability is rounded off by the fact that all prices and conditions can be defined using conditional tables and formulas. When creating a price or for example a discount, please use the following diagram to find the right solution in ClassiX. For example, to define a special price of a sales item for a defined customer group you will be guided directly to the customer group price (3). {img type=\"fileId\" fileId=\"316\" thumb=\"box\" width=\"100%\"}. This is the description of the functionality of the module \"processes_salespricing\" with the name \"Sales pricing\" regarding Formation of a selling price: In the simplest case the price is a simple value per quantity independent of any variable. The price becomes variable through the use of a formula or price table, as the price is now formed depending on various attributes/data fields. In addition to the basic price, the price can be assigned surcharges and discounts. This is the description of the functionality of the module \"processes_salespricing\" with the name \"Sales pricing\" regarding Customer price agreement: Customer agreements can be reached via the sales role on the one hand and via the customer on the other. In the sales article, you can see the agreements which have been made with which customers for this article and the customer's condon for this. To create a price agreement, insert a customer in the customer tab of the sales role by clicking the \"Insert\" button. The price agreement is created automatically and the agreed price can be entered directly. (Info: Besides the price you can also enter the customer's article number here). The same functions (price history, detailed processing, price tables, ) are available for processing the price of customer agreements as for processing the item price. --- If the article is now inserted in an offer/order to the corresponding customer, the price of the agreement is taken over instead of the standard price. {img type=\"fileId\" fileId=\"318\" thumb=\"box\" width=\"100%\"}. This is the description of the functionality of the module \"processes_salespricing\" with the name \"Sales pricing\" regarding Customer conditions: In the \"Conditions\" tab in the customer editing window, it is possible to define not only shipping, delivery and payment conditions etc., but also discounts and surcharges. If an offer/order is directed to this customer, these conditions will be included in the document. If a surcharge/discount is declared as list price related, it will not be shown in the print and the reduction/increase in value will be allocated to the item price. The \"hidden\" condition thus influences the sales price without the customer being informed of this.",
            "This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Copy buffer: Using the copy buffer, which can be called up from the menu, individual discounts or surcharges can be copied into other prices of other parts. However, the main price cannot be copied because there can only be one in the list and this cannot be deleted from the list. In this way, complex discount price tables can be copied very quickly. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Input window: This window is used to maintain complex prices or discounts/surcharges. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Editing window of prices and costs: Processing of costs and prices This window is very similar to the input window described above, except that wherever the value is displayed or edited, one (purchase cost for a purchased part) or two (standard cost of material and labour for a manufactured part) cost fields are displayed simultaneously. Which cost fields are displayed is controlled by the logistics indicator. The part roles, which are responsible for the costs and prices, are also displayed in the module. The prices and costs can then be edited directly from the module. In doing so, the editor should note that he directly changes the data of the roles. When switching the price type (value per quantity, formula, percent, table), the price/cost type of the roll is also changed automatically. If different price/cost types are found, the user will be informed by two red dots. The red text also indicates the different value types. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Creation of price tables for costs and prices: This module offers the simplest way to create price tables for costs and prices, as prices are usually linked to the same conditions as costs. Normally the agent would go into the sales role and create the price table and do the same for the material and labour costs of the production role. He would therefore have to create three almost identical tables. Using the module for parallel editing of prices and costs the following steps are sufficient. First of all, the type of the prices must be set to \"Table\". Then the button can be used to open the module for editing a price table. The columns are created identically to the \"normal\" price tables. The only difference is that in this price table there is not only the column for the price but also the column for the costs. In the background, the step that only has to be done once here is automatically carried out for all price and cost tables. So you can go back to the parts roll and you will only find one (the normal) price table here. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Price history: This window displays the price history. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Price history: Graphic display of the price development. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Simulative price-cost comparison: Through this window it is possible to compare sales prices and costs of a part where the structure of the complex pricing is different. This is the description of the functionality of the module \"PriceDiscount\" with the name \"Complex price or discount and surcharge\" regarding Option window: Use the option window to set the default settings. If, for example, prices of several articles are changed and the new price is always only valid from the turn of the year, the changeover date, which is preset with the session date, can be overwritten.",
            "This is the description of the functionality of the module \"pcalcgrp\" with the name \"Pricing group\" regarding Input window: This window is used to maintain pricing groups. You can select a pricing group by entering the desired number in the Number field and confirming with RETURN. If you want to call up the list window, you can select the menu item \"Search\". This is the description of the functionality of the module \"pcalcgrp\" with the name \"Pricing group\" regarding List window: Used to list the pricing groups. This is the description of the functionality of the module \"pcalcgrp\" with the name \"Pricing group\" regarding Selection window: This window is used to select a pricing group. This is the description of the functionality of the module \"pcalcgrp\" with the name \"Pricing group\" regarding Subgroup window: This window allows you to insert a pricing group subgroup.",
            "This is the description of the module \"pricecal\" with the name \"Calculation scheme\": Especially in trading companies, a lot of work is done with supplier price lists. In order not to have to import all parts that a supplier has in his regularly sent price list into the database, there is the external trading goods database.Conditions \"net\" (are taken over in orders) In addition to the price list, calculation schemes for determining the supplier's own purchase price from the sales price stated in the price list are agreed with the supplier. For example, the price list may contain a sales price of x, and a sales price of 25% has been agreed for the determination of the purchase price. This -25% is therefore part of the calculation schema and is marked as \"net\" when the condition is created.Conditions \"list price related\" (are not taken over in orders) If customs duties are added, which have to be taken into account for the determination of the cost price in the order, but which may not be transferred to the order, these surcharges can be marked as \"list price related\" and can also be recorded in this calculation scheme.List price-related conditions are transferred to the order created from an order. Net-related conditions are not. They are only responsible for the calculation of the own cost price in the order. This is the description of the functionality of the module \"pricecal\" with the name \"Calculation scheme\" regarding List window: This window lists the calculation schemes entered in the machine. This is the description of the functionality of the module \"pricecal\" with the name \"Calculation scheme\" regarding Selection window: This window is used to select the calculation schemas entered in the system for assignment to an existing object. This is the description of the functionality of the module \"pricecal\" with the name \"Calculation scheme\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button.",
            "This is the description of the module \"prichas\" with the name \"Price processing: Sale\": The price change module is basically used to automatically increase or decrease the price of a group of sales items. It is possible to determine in four steps the quantity of parts to be changed, set the rules and values of the price change, test the changes and finally make the price change. Data security is guaranteed by an error log. Additionally, this module can also be used to get an overview of prices. In addition to the standard sales prices, you can also display any existing price lists or price groups. This is the description of the functionality of the module \"prichas\" with the name \"Price processing: Sale\" regarding Conditional percentage price change: With the normal price change, a fixed percentage amount is specified by which the sales price of the corresponding rolls should change. This is different for the conditional percentage change. Here a conditional table is defined, which specifies the percentage price change for each sales role. The procedure is as follows:."
        ],
        "modules": [
            "PriceDiscountTable",
            "processes_salespricing",
            "PriceDiscount",
            "pcalcgrp",
            "pricecal",
            "prichas"
        ]
    },
    {
        "query": "What are conditional parts list items?",
        "response": "Based on the provided module descriptions, I can confidently say that I am familiar with the topic of conditional parts list items. According to the modules \"billofma\" and \"salecond,\" conditional parts list items are defined as items that can be included in a bill of materials (BOM) based on certain conditions. These conditions can be specified using formulas or conditional tables, and the system will automatically insert the appropriate item into the BOM based on the specified criteria.\n\nFor instance, if a customer wants to produce a product with multiple variations, such as color or size, each variation could be represented by a separate conditional part. When the customer selects their preferred options, the system will automatically generate a customized BOM that includes only the relevant components.\n\nAdditionally, the module \"billofma\" explains that individual parts can be included in sets, and their characteristics can be assigned to these conditional individual parts. This allows for greater flexibility in creating customized products.\n\nOverall, conditional parts list items provide a powerful feature for managing complex BOMs and producing customized products efficiently.",
        "docs": [
            "This is the description of the module \"billcond\" with the name \"Conditional parts list item\": A conditional BOM item of a bill of material contains a conditional list of individual BOM items, the so-called variants. This provides a tool for defining different parts in a BOM item, e.g. due to different characteristics of the part to be produced. Different quantity specifications can also be stored in an individual bill of material item as a table. In the course of a bill of material explosion, the item whose condition is fulfilled first is inserted into the production bill of material. Attention: See also special features of conditional tables. This is the description of the functionality of the module \"billcond\" with the name \"Conditional parts list item\" regarding Input window: This window is used to maintain conditional BOM items.",
            "This is the description of the module \"salecond\" with the name \"Conditional sales parts list entry\": Conditional individual parts in sets Conditional individual parts can be included in sets. Characteristics can be assigned to these conditional individual parts, which later appear in the offer or order items. If no characteristics were entered for these conditional individual parts, the quotation or order item automatically takes the characteristics of the selected individual part from the parts master. The first position whose condition is fulfilled is used when resolving the conditional items. Quantities Three different types can be defined for the quantity information: A value, a formula or a conditional table. Parts button Clicking on the parts button opens a sub-menu which offers the possibility to choose between sales parts, spare parts and services. This is the description of the functionality of the module \"salecond\" with the name \"Conditional sales parts list entry\" regarding Input window: This window is used to maintain conditional sales list entries.",
            "This is the description of the module \"billofma\" with the name \"Parts lists\": Parts lists describe the composition of a production part. A bill of material consists of parts, which in turn can have a bill of material. Each bill of material item describes which parts are required in which quantity for the production of a manufacturing part. There are two item types of a bill of material: Single item Variant item (conditional parts list item) The basic heading contains a part from the parts master that is required in the specified (constant or calculated) quantity. A variant item is a conditional list of single items. When exploding the bill of material, the (single) item whose condition is fulfilled first is used. If a subpart (of a variant part) is inserted into a bill of material, its characteristics are not automatically transferred, as these bills of material do not represent master data. During further processing of the parts list in orders or similar, the master data of the individual parts \"shine through\" and can then be changed later. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Input window: This window is used for maintaining parts lists. You can select a parts list by entering the desired number in the Number field and confirming with RETURN. If several bills of material exist with the number, the selection window is displayed and you can select the desired bill of material. If you want to call up the list window, you can select the menu item \"Search\". Enter a corresponding part-/drawing number and in the field 'Description' the name of the part. The creation date and the editor are predefined by the system and can be changed. Before you can add parts list items, a new parts list must be saved. Before you use a bill of material (which contains conditional items or calculated/conditional quantity specifications), you should test it (bill of material inspection). You can also \"sort positions\" in the \"Positions\" submenu: There the positions of the current parts list are sorted anew - according to a freely enterable and then ascending position number. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Parts list display: If, in the list of parts list items, the symbol is output, then it is a part that is now valid as an exchange object of an originally inserted part object. In the parts list editing mask there are two possibilities for visualising the parts list. One is the display as a modular parts list, in which only the items of the first level are displayed. {img type=\"fileId\" fileId=\"370\" thumb=\"box\" width=\"100%\"} In addition, the entries of possible variant parts list items can be displayed via the variant checkbox. The parts list items can be selected with the button can be displayed in the tree view. Then the complete structure of the called up parts list is displayed - including all structures of the sub parts lists occurring in the parts list itself. This output is for viewing only, editing is (currently) not possible. The structured parts list can also be displayed in list form (radio button), for this purpose you can also specify the desired depth to which you want to track the parts lists. (The parts list report is only recommended in this list display) With the checkbox \"also display invalid items\" all items of the parts list can be displayed, i.e. also those on invalid set parts list items. With the button you can display the MRP product structure of the bill of material. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Inspection parts list: You can check whether the parts list has been entered correctly via the menu item 'Parts list inspection'. The window 'Inspection Bill of Material' opens. Via 'Edit - Resolve' you can select the scope of the test and via 'Edit - Delete test resolutions' you can undo tests. If a parts list cannot be exploded, the system will display an error message. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Renumber parts list items: This window is used to enter the information for a new numbering of the parts list items. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding List window: Serves on the one hand to list (headers) of parts lists and on the other hand as a starting point for listing and checking routines for parts list items. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Bill of material items (across different bills of material): In this window, the positions of the parts lists previously selected in the list window are displayed. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Selection window: This window is used to select a parts list. This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button. ",
            "This is the description of the functionality of the module \"billofma\" with the name \"Parts lists\" regarding Parts list items (search results): If a search was carried out using set attributes, the positions to which the search applied are displayed here. A search for attributes applies if the subitem itself has the attribute you are looking for in any specified form, or if the subitem has a formula or conditional table as a quantity that contains this characteristic. For quantities as formulas or conditional values, the value of the characteristic is never checked. This means that if you search for LENGTH=34mm, a BOM/routing item is not displayed, even if it contains a quantity table with an entry LENGTH=34mm. Likewise, conditional BOM/routing items whose condition exactly matches the searched expression are not found. Only if this position also has the fixed attribute LENGTH=34mm, it will be found. So if you want to search all conditional entries and formulas for an attribute, you have to use the search on \"available\". A double click on an entry opens the editing mask of the position.",
            "This is the description of the functionality of the module \"montagestuecklisten\" with the name \"Assembly parts lists\" regarding Instructions for setting up intermediate stages in variant parts lists: Here is a guide to setting up intermediate stages (purely MRP assemblies) in variant parts lists, which are only to apply to certain versions of the variant part, i.e. to certain sub-parts. These instructions are step-by-step, so it looks more complicated than it actually is. Step 1: First of all, all the subparts for which an intermediate stage is to be created must be selected: Step 2: The intermediate stage must be created as a variant part. Step 3: Creating the new production roll We create a production role for this new variant part, select no parts list and save. Then we insert a purely MRP assembly via the \"Create\" button in the \"MRP product structure\" group. We confirm the question with \"Yes\". In the newly opened window, we press the button \"Parts list\" and search for the parts list that belongs to the finished variant part in the search list that appears. Double-click on the entry found; it is then transferred to the small window of the purely dispositive assembly. We enter the reference quantity of 1 piece and save the new purely dispositive assembly. After saving, we can now drag all the BOM items of the original BOM into the lower item list. To do this, press the button next to the parts list. A parts list tree opens. The top level in this tree is to be expanded and all the sub-items that can now be seen are to be dragged individually into the list. Attention: The conditional items must also be dragged into the list as they are, NOT JUST A CERTAIN EXPRESSION of them! Then save with OK. Step 4: Enter the condition in the MRP assembly. Now the dispositive assembly is marked out in the parts list of the painted variant part for all subparts. However, we want this assembly to be valid only for our three versions, so we have to switch to the \"Condition\" tab in the window of the purely dispositive assembly, tick Condition and enter a formula in the formula field. This formula is composed as follows: 1 Part: Get the numbers from the corresponding data fields (different for BOMs, stock order items and preliminary parts costing). 2nd part: Comparison of the determined number with our sub-part numbers. Here, the numbers of the painted and unpainted subparts must be specified as shown in the example below! Formula: Step 5: Creation of the production rolls for the lacquered lower parts So that the sub-parts that have received an intermediate stage do not receive the complete routing of the entire construction stage on the top level (in which there is only the unpainted part), these sub-parts must still receive their own production role on which we only need to overwrite the routing. So we open the painted variant part, then open the editing mask of the subpart by double-clicking on the corresponding subpart, select the menu item \"Edit->Part Rolls->Production Data\", then change the number in the production role mask of the variant part and save. When saving, an important question appears asking whether the production data should apply to the sub-part. Be sure to answer the question with \"Yes\". Now a new production role has been created for the bottom part. We click with the right mouse button on the entered routing and select the entry \"Create\". The editing screen for the new routing opens, which immediately receives the number of the lower part. It can be saved immediately. Then insert the new routing item \"Final painting\" and save it. Now the number of the routing can be noted and the mask closed. The production role is now connected to the new routing and can also be closed. Back to the part master mask. The next sub-part is marked and a production role is inserted. The routing that we have just created is now also searched for here via the \"Routing\" button, selected and connected by subsequently saving it. The same applies to the third sub-part with intermediate stage."
        ],
        "modules": [
            "billcond",
            "salecond",
            "billofma",
            "montagestuecklisten"
        ]
    },
    {
        "query": "How do I import my inventory data into GESTIN?",
        "response": "Based on the provided module descriptions, it appears that the \"inventoryImport\" module allows for importing stock data from a materials management system into the ClassiX system. However, the description does not specify how to actually perform this import. Therefore, I cannot answer the query based solely on the information provided in the module descriptions.\n\nTo assist further, would you please clarify what specific aspects of the import process you need assistance with? For example, do you need help selecting the appropriate files to import, configuring the import settings, or troubleshooting any issues that may arise during the import process? Additionally, if you have any relevant details about the structure of the data in the materials management system or any specific requirements for the imported data, providing that information could also be helpful in providing a solution.",
        "docs": [
            "This is the description of the module \"inventoryImport\" with the name \"Import book inventory from materials management system\": With this app you can import stock data exported from a materials management system as a file into the ClassiX system. This is the description of the functionality of the module \"inventoryImport\" with the name \"Import book inventory from materials management system\" regarding Input window: In this window, all information required for the import is entered and the import is triggered. It is also possible to first check whether the import file can be read in technically and contentwise (e.g. check for units of measure defined in the system).",
            "This is the description of the module \"inventoryTaking\" with the name \"Recording a count\": With this app, the counting results of an inventory can be recorded. The app is designed in such a way that it can also be operated on a tablet PC or a smart phone. This is the description of the functionality of the module \"inventoryTaking\" with the name \"Recording a count\" regarding Input window: This window is for entering and maintaining the count results. The order of entry can be determined based on the consecutive numbering of the inventory items, a previously explicitly assigned count item number, or the order of the count list when printing (defined in the BIRT report of the count list).",
            "This is the description of the module \"invanaly\" with the name \"Inventory analysis\": With this module, inventories are analysed in order to be able to draw conclusions about the quality of inventory accounting from completed inventories in the past, on the one hand, and to be able to check first of all whether the scope of the counting of inventories can be reduced by means of inventory sampling procedures, on the other. If a warehouse is suitable for inventory sampling, the samples can be drawn and checked from this module. This is the description of the functionality of the module \"invanaly\" with the name \"Inventory analysis\" regarding Inventory analysis: In this window, you can compile inventory items of one or more physical inventory documents into a common list for the purpose of an analysis or for carrying out inventory sampling. The reason for merging different inventories - i.e. inventory documents - is that instead of creating just one inventory/an inventory document with all storage bins, it can also make sense to create several inventory documents subdivided according to different storage bin areas. In the latter case the inventory of another, already counted storage bin area can be entered and posted during the inventory in one storage bin area and this storage bin area can be released again. This is the description of the functionality of the module \"invanaly\" with the name \"Inventory analysis\" regarding List window: This window lists the inventory samples stored in this machine. This is the description of the functionality of the module \"invanaly\" with the name \"Inventory analysis\" regarding Option window: Here you can make settings for inventory sampling. The window can only be closed via the \"OK\" button. Once set, options can be saved as the default option for the logged in user. For this purpose, there is a context menu item on the \"Preferences\" tab in the \"User Preferences\" list which can be used to save the current options.",
            "This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Draw number of samples: From this window, a freely definable number of samples can be taken from the inventory items in the inventory document currently being processed. After drawing the sample, only the items that were drawn by sample remain in the inventory document. The remaining items are removed from the display and kept in the inventory document as a noted item for the items originally present in the inventory document. You can therefore always select new samples from the noted item. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Selection window: This window is used to select an inventory. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Mobile data acquisition: This window is adapted in size and functionality to a mobile data collection station. The information such as inventory/line or storage location/article number should be scanned in order to only have to enter the counted quantity directly at the station. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Options window: Here, among other things, all settings for the search can be made. The window can only be closed by pressing the \"OK\" button. Once options have been set, they can be saved as default options for the logged-in user. For this purpose, there is a context menu entry on the \"Preferences\" tab in the \"User preferences\" list, which can be used to save the current options. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Determination of the new average price:: The determination of the new average price for parts when posting an inventory is done as follows: When creating inventory items, the current average prices are written to the document as the \"old average price\" and as the new valuation, as well as the current stock level of the selected storage bin as the SET quantity. Calculations are then carried out when posting: (Current total stock * current average price ) + (valuation * counted quantity storage bin) - (old average price * TARGET quantity-storage bin). / current stock quantity + counted quantity storage bin - SET quantity storage bin current average price unit of measure If a part now has stock in several storage bins, the new value will also only change the average price proportionally according to the new total stock. It is then not taken over 1:1 For a simplified explanation If the part only has one storage bin, the formula could be simplified somewhat: The first part of the formula is omitted because the SET quantity of the storage bin is the current stock and the old average price is the current average price: (valuation * count quantity-storage bin) / Quantity counted Current average price unit Example: The receipt shows a valuation of 10€/1piece. The quantity counted is 10 pieces. The value indicated on the inventory item is therefore taken over 1:1 as the new average price: Valuation * counted quantity == 100 EUR / counted quantity (10 pieces) = 10 EUR/piece Per denominator of current average price = 10 EUR / 1pc.",
            "This is the description of the module \"inventry\" with the name \"Inventory\": This app supports the recording of current inventories (so-called stock corrections) as well as annual inventories in the form of one-time or permanent inventories. Since an inventory is supposed to represent a comparison/check of the (book) stocks in the DP system with the actual stocks in the warehouse, inventories are initially generated from data in the DP. In combination with the inventory analysis app, inventory sampling is also supported. Inventories are an important part of monthly and annual financial statements. As part of accounting, inventories are subject to strict organisational guidelines. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Structure: There are 5 different ways of setting up an inventory: The following generally applies to the selection: If a part is invalid but still has stock in one of its storage bins, it is included in the inventory. If there is no stock quantity, an invalid part is not included in the inventory. By default, when an inventory is set up, the average price of a part in a warehouse is copied into the inventory document. This value can be subsequently changed in the inventory manually or by programme run. The date, value and quantity of the last inventory are also written to the new inventory document when the inventory is set up. This data can be viewed and further evaluated in the inventory analysis. Instead of creating a single inventory document with all storage bins, it can also make sense to create several inventory documents subdivided according to different storage bin areas. In the latter case, while an inventory document is still being counted in one storage bin area, the count of another storage bin area that has already been counted can be recorded and posted in the separate inventory document and then this storage bin area can be released. By means of the inventory analysis, it is nevertheless possible to obtain an overview of several inventories. Duplicate inventory items (same part, same storage bin) are generally not permitted by the system. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Count: After creating the inventory document, a count list can be printed with which the actual count or inventory can then be carried out in the warehouse. Once the actual counted stocks have been entered in the count list, they are subsequently recorded in the inventory document. The counted stocks can be entered manually via the count list or via a mobile data entry station (MDE). This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Reconciliation and posting: After reconciliation of the counted stocks and the EDP book stocks, the inventory document is posted. Depending on whether a stock correction is desired or not, either only the difference is posted or the counted quantity is also saved in the system as a stocktaking quantity with date. Posted inventories can no longer be edited subsequently. The valuation on the inventory item is used to recalculate the moving average price. This valuation is taken from the currently valid average price of the part when the inventory item is created. More on this topic in the chapter \"Determining the new average price\". When posting, the posting of the items is divided into individual steps. This is necessary for very long inventories of many parts, otherwise the database is blocked too long for other users. If posting is interrupted, it can happen that individual items have already been properly posted, but others have not yet been posted. You can recognise the complete inventory posting as usual by the posting date on the inventory header document and the blocked posting button. As long as this is not locked, the inventory is not completely posted. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Input window: This window is used to enter and maintain inventories. You can select an inventory by entering the desired number in the Number field and confirming with RETURN. If you want to call up the list window, you can select the menu item \"Search\". There are three views (details are described in the options window ): The count list hides all fields that represent the current stock in the ClassiX® system so that the count result is not influenced by the target quantity. These include: When posting, all totals are calculated automatically. A currency table valid for the inventory can be created at the inventory header. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Position window: This window is used to maintain the inventory items. The quickest way to enter the inventory is to jump to the next / previous item with the arrow keys 'up' and 'down' after entering the values for an item. The data is automatically saved when you switch. If you select the Close button, no data is written to the database. The display and maintenance of the fields depends on the display options. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding List window: Used to search and list inventories. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Sorting window: In this window, special sorting criteria can be made to sort the displayed items in the list. "
        ],
        "modules": [
            "inventoryImport",
            "inventoryTaking",
            "invanaly",
            "inventry"
        ]
    },
    {
        "query": "What is inventory sampling?",
        "response": "Based on the provided module descriptions, I cannot determine what \"inventory sampling\" refers to specifically. However, I can suggest some possibilities based on the mentioned terms and concepts:\n\n1. Stratified inventory sampling: The module \"inventoryStratification\" seems to relate to stratified inventory sampling, where the inventory items are divided into strata based on certain criteria before taking a sample.\n2. Random sampling: The module \"invanaly\" mentions drawing samples from inventory items, which could imply random sampling.\n3. Shift jumpers: The module \"inventoryStratification\" talks about stratum jumpers, which might refer to items that switch between strata due to changes in their values during the inventory process.\n4. New average price: The module \"inventry\" discusses calculating a new average price for parts when posting an inventory, possibly involving weighted averages or other calculations based on the stored quantities and values.\n\nWithout more specific information about the context and goals of the inventory sampling, it is difficult to provide a definitive answer to the query. Additionally, some of the terminology used in the module descriptions is unfamiliar to me, making it challenging to accurately interpret the content. Therefore, if you need further assistance or clarification, please feel free to ask follow-up questions or seek additional resources.",
        "docs": [
            "This is the description of the module \"invanaly\" with the name \"Inventory analysis\": With this module, inventories are analysed in order to be able to draw conclusions about the quality of inventory accounting from completed inventories in the past, on the one hand, and to be able to check first of all whether the scope of the counting of inventories can be reduced by means of inventory sampling procedures, on the other. If a warehouse is suitable for inventory sampling, the samples can be drawn and checked from this module. This is the description of the functionality of the module \"invanaly\" with the name \"Inventory analysis\" regarding Inventory analysis: In this window, you can compile inventory items of one or more physical inventory documents into a common list for the purpose of an analysis or for carrying out inventory sampling. The reason for merging different inventories - i.e. inventory documents - is that instead of creating just one inventory/an inventory document with all storage bins, it can also make sense to create several inventory documents subdivided according to different storage bin areas. In the latter case the inventory of another, already counted storage bin area can be entered and posted during the inventory in one storage bin area and this storage bin area can be released again. This is the description of the functionality of the module \"invanaly\" with the name \"Inventory analysis\" regarding List window: This window lists the inventory samples stored in this machine. This is the description of the functionality of the module \"invanaly\" with the name \"Inventory analysis\" regarding Option window: Here you can make settings for inventory sampling. The window can only be closed via the \"OK\" button. Once set, options can be saved as the default option for the logged in user. For this purpose, there is a context menu item on the \"Preferences\" tab in the \"User Preferences\" list which can be used to save the current options.",
            "This is the description of the module \"inventoryFrequencyDistribution\" with the name \"Frequency and value distribution\": With this app, previously selected inventory items can be divided into freely selectable value ranges. This provides an overview of the value distribution of inventory items, which is particularly useful for stratified inventory sampling. The BIRT reports \"Frequency distribution\" and \"Lorenz curve\" are available as standard reports. This is the description of the functionality of the module \"inventoryFrequencyDistribution\" with the name \"Frequency and value distribution\" regarding Frequency and value distribution: With regard to a stratified inventory sampling, the upper limit of the 1st stratum (and thus the determination of the variance for further stratification), as well as the upper limit of the last stratum (and thus the determination of the many, low-value inventory items, which account for approx. 50% - 55% of the inventory value and therefore should only be taken by sample) can be determined here.",
            "This is the description of the module \"inventoryStratification\" with the name \"Stratification\": In this window, an inventory sampling can be carried out for inventory documents using the stratification procedure. This is the description of the functionality of the module \"inventoryStratification\" with the name \"Stratification\" regarding Stratification: In the upper area of the window, the various possible stratifications for an inventory sampling are displayed for the previously selected physical inventory items. In the tab windows Layers, Full inventory and Count below, the layers defined by a stratification and those for a full inventory as well as the inventory items selected by sample are listed. If a stratification is selected, the individual strata belonging to this stratification are output in the lower list. Each stratification thus consists of different strata. A description of the upper \"stratification\" and the lower \"strata\" list can be found below. This is the description of the functionality of the module \"inventoryStratification\" with the name \"Stratification\" regarding Layers\" tab window: If a stratum is selected, the inventory item samples belonging to this stratum are output in the lower list. It is also possible to select several strata at the same time. This is the description of the functionality of the module \"inventoryStratification\" with the name \"Stratification\" regarding Tab window \"Full inventory: The inventory items of the full inventory selected by a stratum are displayed in this list. This is the description of the functionality of the module \"inventoryStratification\" with the name \"Stratification\" regarding Count\" tab window: All inventory items selected by a stratification for a count (sample and full inventory area) are displayed in this list. For a sample inventory item, the stratum number is displayed in the first column, for an inventory item of the full inventory area the word \"full inventory\". If a count result was recorded for a random sample inventory item, the column after the valuation difference shows whether the inventory item has become a shift jumper or not as a result of the count. Stratum jumpers are those items whose value no longer matches the original value stratum after counting, i.e. the new value is smaller than the lower value limit of its stratum or the new value is larger than the upper value limit of its stratum. This is the description of the functionality of the module \"inventoryStratification\" with the name \"Stratification\" regarding List window: This window is used to list samples.",
            "This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Draw number of samples: From this window, a freely definable number of samples can be taken from the inventory items in the inventory document currently being processed. After drawing the sample, only the items that were drawn by sample remain in the inventory document. The remaining items are removed from the display and kept in the inventory document as a noted item for the items originally present in the inventory document. You can therefore always select new samples from the noted item. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Selection window: This window is used to select an inventory. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Mobile data acquisition: This window is adapted in size and functionality to a mobile data collection station. The information such as inventory/line or storage location/article number should be scanned in order to only have to enter the counted quantity directly at the station. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Options window: Here, among other things, all settings for the search can be made. The window can only be closed by pressing the \"OK\" button. Once options have been set, they can be saved as default options for the logged-in user. For this purpose, there is a context menu entry on the \"Preferences\" tab in the \"User preferences\" list, which can be used to save the current options. This is the description of the functionality of the module \"inventry\" with the name \"Inventory\" regarding Determination of the new average price:: The determination of the new average price for parts when posting an inventory is done as follows: When creating inventory items, the current average prices are written to the document as the \"old average price\" and as the new valuation, as well as the current stock level of the selected storage bin as the SET quantity. Calculations are then carried out when posting: (Current total stock * current average price ) + (valuation * counted quantity storage bin) - (old average price * TARGET quantity-storage bin). / current stock quantity + counted quantity storage bin - SET quantity storage bin current average price unit of measure If a part now has stock in several storage bins, the new value will also only change the average price proportionally according to the new total stock. It is then not taken over 1:1 For a simplified explanation If the part only has one storage bin, the formula could be simplified somewhat: The first part of the formula is omitted because the SET quantity of the storage bin is the current stock and the old average price is the current average price: (valuation * count quantity-storage bin) / Quantity counted Current average price unit Example: The receipt shows a valuation of 10€/1piece. The quantity counted is 10 pieces. The value indicated on the inventory item is therefore taken over 1:1 as the new average price: Valuation * counted quantity == 100 EUR / counted quantity (10 pieces) = 10 EUR/piece Per denominator of current average price = 10 EUR / 1pc."
        ],
        "modules": [
            "invanaly",
            "inventoryFrequencyDistribution",
            "inventoryStratification",
            "inventry"
        ]
    },
    {
        "query": "What does PYTHIA do?",
        "response": "Based on the descriptions provided, I can confidently answer that PYTHIA does not exist.",
        "docs": [
            "This is the description of the module \"Pythia_cxAntiTerrorScreening\" with the name \"Anti Terror Screening Protocols\": Each import of the EU, US, UK, CH and UN sanctions lists, each individual search, each mass comparison with data from an ERP system or with Outlook contacts (direct comparison with Outlook contacts not available in cloud version) is saved as an anti-terror screening log with the corresponding results. Each log is archived with user, date and time, the search criteria and the results found and can be viewed at any time. This is the description of the functionality of the module \"Pythia_cxAntiTerrorScreening\" with the name \"Anti Terror Screening Protocols\" regarding Input window: This window displays logs of search, import and matching activities in the Pythia database. The data serves as a log and cannot be changed. This is the description of the functionality of the module \"Pythia_cxAntiTerrorScreening\" with the name \"Anti Terror Screening Protocols\" regarding List window: This window is used to list the logs of search, import and matching activities in the Pythia database. The data serves as a log and cannot be changed. This is the description of the functionality of the module \"Pythia_cxAntiTerrorScreening\" with the name \"Anti Terror Screening Protocols\" regarding Selection window: This window is used for the selection . This is the description of the functionality of the module \"Pythia_cxAntiTerrorScreening\" with the name \"Anti Terror Screening Protocols\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button.",
            "This is the description of the functionality of the module \"Pythia_outlook_py\" with the name \"Synchronise Outlook contacts with Pythia anti-terror database\" regarding Description: This module compares Outlook contacts with the personal data in the Pythia database. This is the description of the functionality of the module \"Pythia_outlook_py\" with the name \"Synchronise Outlook contacts with Pythia anti-terror database\" regarding List window: This window lists the Outlook contacts whose names have hits in the Pythia database. When the window is opened, the default folder containing your contacts is loaded and displayed.",
            "This is the description of the functionality of the module \"Pythia_personList_pythia\" with the name \"Barred persons\" regarding Description: This module is used to display and search for blocked persons. These are persons with whom business transactions are prohibited by UN and EU resolutions. This is the description of the functionality of the module \"Pythia_personList_pythia\" with the name \"Barred persons\" regarding List window: This window is used to list the blocked persons.",
            "This is the description of the functionality of the module \"defclass\" with the name \"Pseudo class\" regarding Functionality: This window is used to maintain pseudo classes.",
            "This is the description of the module \"Pythia_xmlimprt_py\" with the name \"Import and compare sanctions lists\": With this module, anti-terrorism or other sanctions lists can be imported into the Pythia database or updated. The standard version includes the comparison with the sanctions lists of the European Union EU and the United Nations UN. In addition to the import/update of the sanctions lists, a comparison is automatically made with the persons/companies/one-time addresses that are listed in a whitelist or blacklist. If the information of a person/company from a sanctions list changes, which is assigned to a person/company/one-time address from these lists, then this assigned person/company/one-time address from either the whitelist or the blacklist is transferred to the checklist for renewed verification. After an import of a sanctions list a mass comparison with the person/company/one-time address of the host database and the contacts from Outlook should take place immediately afterwards. This is the description of the functionality of the module \"Pythia_xmlimprt_py\" with the name \"Import and compare sanctions lists\" regarding Selection window: This window is used to select the sanctions lists to be imported or compared. The sanctions lists provide data on persons and companies blocked by the EU or UN. This is the description of the functionality of the module \"Pythia_xmlimprt_py\" with the name \"Import and compare sanctions lists\" regarding Personal data: In addition to attributes such as date of birth (only the first named is taken over), gender, title, function or language, the data on the name of a blocked function are the decisive ones for carrying out a comparison. Attributes such as passport number or nationality are not processed. This is the description of the functionality of the module \"Pythia_xmlimprt_py\" with the name \"Import and compare sanctions lists\" regarding Company data: For companies, a comparison can only be made via the name:.",
            "This is the description of the functionality of the module \"Pythia_legalPersonList_pythia\" with the name \"Blocked companies\" regarding Description: This module is used to display and search for blocked companies. These are companies with whom business transactions are prohibited by UN and EU resolutions. This is the description of the functionality of the module \"Pythia_legalPersonList_pythia\" with the name \"Blocked companies\" regarding List window: This window is used to list the blocked companies.",
            "This is the description of the module \"query\" with the name \"Database query\": This module is used to search for information. On the one hand, this can be done using the search terms categorised by object type, and on the other hand using general and more technical query functions. This is the description of the functionality of the module \"query\" with the name \"Database query\" regarding Advanced search: The \"Advanced Search\" window is always accessed via another module. Usually these are list windows, in which there is a field Search terms. If the simple search using the search terms is not sufficient here, this mask can be called up here as an alternative. The results of the search are always sent back to the calling module, which then takes over the display. This is the description of the functionality of the module \"query\" with the name \"Database query\" regarding Data preparation and filtering: In the widget for data preparation and filtering, various criteria are specified and linked with each other. During execution, these are arranged in such a way that execution is as fast as possible while the meaning of the configured logical expression remains the same. As soon as it can be decided for an object whether it belongs to the result set for sure or not, no further criteria are evaluated for this object. This is the description of the functionality of the module \"query\" with the name \"Database query\" regarding Criteria: At the beginning the widget is still empty and criteria can be added using the green plus. The individual criteria can be removed using the red X on the right-hand side. The order of the criteria can be changed with the arrows on the left side. The individual criteria can be connected by the links AND and OR to form expressions of truth. In addition, the opening and closing brackets can be used for grouping. Unclosed brackets are automatically closed at the end. This is the description of the functionality of the module \"query\" with the name \"Database query\" regarding Categories: Each criterion can be from one of five categories: Query, Attribute, Formula, Callback or InstantView. A criterion of type Query defines a condition for a data field of an object so that it belongs to the result set. The first of the fields defines the access expression to be tested. Instead of the access expression, the name of a column can also be entered. Using the button with the three dots next to the field, either an access expression can be selected via the access expression configurator or one of the defined columns. In the middle the comparison operator is selected and then the value to be compared with is entered on the right. If a method is selected and it cannot be used in a query expression, the criterion is automatically converted into one of the type callback during execution. A criterion of type attribute defines an attribute with a comparison operator and a comparison value. For each object it is checked whether it has the corresponding attribute and whether the value of the attribute matches the relational operator and comparison value. With a criterion of type formula, a formula is defined which is then evaluated for each object. If the formula returns TRUE (or a value that evaluates to TRUE), the object belongs to the result set, otherwise it does not. A criterion of type Callback specifies InstantView® source code that is called for each object. The object is at the top of the stack. The source code should return a value at the end that is TRUE if the object belongs to the result set, otherwise a value that evaluates to FALSE. A criterion of the InstantView type is different from the other criteria in that it is not called for each object individually. Instead, when the specified InstantView® source code is executed, a collection with the previously selected objects is on the stack and at the end a collection with objects on the stack is expected again. The use of this criteria type offers full flexibility in editing options. Naturally, a criterion of this type cannot be moved to another point of processing, so a criterion of the InstantView type interrupts the optimisation. Criteria before and after this criterion are optimised on their own, but it is ensured that all criteria before this criterion are executed before and all criteria after this criterion are executed afterwards. For the same reason no brackets can be defined for this criterion and all previously opened brackets are automatically closed. "
        ],
        "modules": [
            "Pythia_cxAntiTerrorScreening",
            "Pythia_outlook_py",
            "Pythia_personList_pythia",
            "defclass",
            "Pythia_xmlimprt_py",
            "Pythia_legalPersonList_pythia",
            "query"
        ]
    },
    {
        "query": "Can I change the output currency of an order confirmation?",
        "response": "Based on the information provided in the module description, it appears that the ability to change the output currency of an order confirmation is not directly supported by the \"processes_foreigncurrency\" module. According to the description, the output currency is determined by the currency of the order and cannot be changed. Additionally, the description states that the conversion rate cannot be changed once the invoice has been registered.\n\nHowever, there is mention of a feature called \"Manual Account Assignment\" where the exchange rate can be changed for incoming invoices in a different currency. It is unclear whether this feature applies to order confirmations as well.\n\nTherefore, my answer is that it is not currently available to change the output currency of an order confirmation based solely on the information provided in the module description. However, I suggest consulting the actual implementation of the module or seeking additional clarification from the developer or support team to determine if there are any alternative options or workarounds available.",
        "docs": [
            "This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Introduction: In a globalised economy one is constantly confronted with foreign languages and foreign currencies. In this section we will look at foreign currencies and describe how currencies are processed in the CyberEnterprise business OS. But first, some definitions of terms: The local currency (or standard currency) is the currency that is set as the currency of the registered client, i.e. the currency in which the client prepares his balance sheet: All internal values (e.g. all bookings and accounts of the accounting system (financial, operational and asset accounting) or statistical values such as turnover or costs) are kept in this currency. Foreign currencies are all other currencies that can be used as desired within the CyberEnterprise business OS: In transaction data (e.g. in offers, orders, invoices, etc.) and also in master data (e.g. in supplier prices, sales prices, etc.). The conversion between currencies is controlled via currency tables. The currency covered is the currency in which currency or monetary amounts are recorded in the system. The output currency is the currency in which documents (e.g. quotations, order confirmation, invoice, credit note, etc.) are printed. In outgoing and incoming invoices or in other documents whose values must be converted into the internal local currency, the output currency is also referred to as the conversion currency, since it must be taken into account here not only for the preparation of the print, but also for the transfer to the internal accounting system (e.g. when creating open items in financial accounting). In the following tables, € is the local currency and $ is any foreign currency. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Foreign currencies in sales: An offer/order or invoice/credit note can only be entered in one currency. The following table lists, among other things, the effect of a foreign currency on financial accounting and its open items (see also here) In all cases, the currency details of the order can be overwritten in the invoice. For example, order type C can become an invoice of type B, if the user so specifies. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Manual account assignment of invoices with foreign currencies: (see also: Manual account assignment) In case B, that is, if the invoice has been entered in the local currency but issued in a different currency, the issue currency and the exchange rate can be changed in the Manual Account Assignment window even after the invoice has been registered. If a different, possibly more up-to-date exchange rate has been agreed upon with the customer after registration but before posting in the financial accounting, this can still be maintained. If the invoice was entered in a foreign currency, the conversion rate can be changed in the manual account assignment, but not the conversion currency. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Setting the: While when registering an invoice, the conversion rate must always be set if a foreign currency is used (this rate can either be set manually or is set automatically (see also here)), this can be made more open during order/invoice processing. At least you have the options whether the exchange rate should be frozen or whether the current exchange rate, defined via the global currency table, should always be used for calculation. The setting, which should be used by default, can also be set via the options. When the documents are output, the output currency and, if applicable, its exchange rate is transferred to the print template. However, the specifications can be changed here for printing. When creating a follow-on document [[Quotation -> New quotation version -> Order -> Invoice -> Credit note], the print currency and, if applicable, the exchange rate are automatically adopted. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Foreign currencies in sales prices: In the section Foreign currencies as output currency (print currency) in sales it was shown which problems occur when converting from the local currency to the output currency(calculation currency of the order -conversion-> customer). In this section, the influence of a foreign currency in the sales prices on the order calculation(sales prices -conversion-> calculation currency of the order) is discussed. Local currency: currency of the client Calculation currency: The currency with which the order is calculated. (The currency specified by the net value of the order). Output currency: The currency in which the order is output (printed) and which is transferred as a foreign currency together with a frozen rate in the financial accounting. The problems to be considered include the following: The following cases thus arise for the use of sales prices in the order in different currencies. For all the above cases, € is the local currency and a fixed conversion rate of $1.25 to €1.00 is defined in the valid SALESFX. It can be defined in the client whether a currency table (SALESFX or local) must exist if the calculation currency of the order or the currency of a sales price in a foreign currency is used. If this option is set, an error message will be displayed if this is not the case. If the option is not set, the EUROFX table is used for conversion and the above-mentioned currency fluctuations occur. ",
            "This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Foreign currencies in purchasing: In purchasing, the documents most commonly used are purchase orders and purchase invoices, where foreign currencies play a role. However, there is a significant difference between this and sales. While in sales documents (quotations, orders, A/R invoices) - at least in most cases - the sales prices are recorded in the local currency and a foreign currency + exchange rate is \"only\" used for the output of prices in print, this is different in purchasing. Here the documents themselves (order, incoming invoice) are entered in a foreign currency: An incoming invoice which is received in $, for example, should of course also be entered in $. So if an incoming invoice is entered in a foreign currency, the corresponding exchange rate MUST be indicated. The reason for this can be found in the initial account assignment, which is always made in the local currency. If the exchange rate were not frozen, there would be differences between the account assignment and the gross value if the exchange rate in the currency table were to change. An order or an incoming invoice/credit note can only be entered in one currency. The following table lists the effect of a foreign currency on financial accounting and its open items (see also here):. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Foreign currencies in financial accounting: In principle, the accounts of the financial accounting are managed in the local currency, which is fixed in the client. However, it is necessary to be able to process and post outgoing and incoming invoices, outgoing and incoming payments and foreign currency accounts in different foreign currencies. A/R invoice documents and A/R credit memo documents are converted into the local currency at the time of registration (the time of automatic or later manual preassignment) (see Foreign Currencies in Sales), and the conversion rate is determined for A/P invoice documents and A/P credit memo documents when they are entered (see Foreign Currencies in Purchasing). The conversion rates already defined in the pre-defined documents are transferred to financial accounting. The further processing of automatically imported bank statements in financial accounting is described in the section Foreign Currencies in Bank Statements, but first follows a description of the processing of foreign currencies in manual postings. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Foreign currencies for manual bookings: The debit or credit value of an entry can be entered in any foreign currency, as long as a conversion rate into the local currency is available. If a currency table is logged in, the exchange rate - as far as it is available in the currency table as exchange rate into the local currency - is automatically determined and the foreign currency amount is converted into an amount in local currency. This automatically determined amount can also be maintained manually by means of a special setting. This is the description of the functionality of the module \"processes_foreigncurrency\" with the name \"Foreign currency\" regarding Foreign currencies in bank statements: When bank statements from bank accounts with foreign currency are taken over or bank postings with incoming or outgoing payments in foreign currency are made, an immediate conversion into the local currency is carried out as a preliminary step to posting in the financial accounting. If this conversion is to take place using the date of the bank statement, this must be stored in the client.",
            "This is the description of the module \"cxCurrencyTable\" with the name \"Currency table\": The conversion of currencies, unlike the conversion of other units, is a special case in that the relationship (i.e. the exchange rate) between two currencies is not fixed but changes daily. The conversion must be done using a currency table that defines exchange rates between different currencies. This currency table can be present in the system - for individual days or periods of time it may be different - but it can exist several times.In order to be able to differentiate between these - time dependent - currency tables, it is advisable to give the currency tables unique names (e.g. EUROFX for the currency table of the ECB (European Central Bank) which can be updated daily). All currency tables of a certain name are kept apart as to their validity, i.e. only one currency table of a certain name should be valid in the system at any given time. In order to have up-to-date conversion rates, you can have the rates updated automatically via the Internet.Normally, the system converts a value in a foreign currency to the value of the local currency using the currently logged in currency table. In some cases, this may be undesirable, for example, for outgoing invoices, incoming invoices and the transfer of bank statements. In these cases, the currency table valid only on a certain day may be used instead of the currently registered currency table. The necessary settings for this are made in the client (see for outgoing invoices, incoming invoices and bank statements).Besides the currency tables, which are valid for the whole system after logging in, there are also tables which can only be assigned to one company (one customer). (see customer documentation and foreign currency). This is the description of the functionality of the module \"cxCurrencyTable\" with the name \"Currency table\" regarding Direct Conversion: Direct conversion uses exactly one exchange rate to convert one currency into another. The list of exchange rates is run through one after the other and the first exchange rate that can be used for conversion is used. If a conversion is to be possible with several exchange rates, i.e. \"across other currencies\", indirect conversion is to be used. This is the description of the functionality of the module \"cxCurrencyTable\" with the name \"Currency table\" regarding Indirect conversion: In contrast to direct conversions, indirect conversions can be used to convert \"across multiple currencies\". For example, if a \"€\" amount is to be converted into \"$\", it is not necessary to define an exchange rate between these two currencies. If there is an exchange rate between \"€\" and \"£\" and between \"£\" and \"$\", a \"€\" amount can be converted into \"$\" by \"detouring\" from \"£\" to \"$\". The length of the conversion path is irrelevant. This is the description of the functionality of the module \"cxCurrencyTable\" with the name \"Currency table\" regarding Update: As exchange rates are subject to fluctuations, it is necessary to update the currency tables. For this purpose ClassiX® provides a function for automatic updating via Internet. The basis for the update are the reference rates of other currencies to the Euro, which are published daily by the European Central Bank. The rates are available online at http://www.ecb.int/stats/exchange/eurofxref/html/index.en.html. In parallel, the ECB also provides the rates in an XML file, which is more suitable for automatic processing. This XML file is also used by the ClassiX® system to update the currency tables. The update can be done either online, i.e. ClassiX® tries to load the XML file and updates the currency tables, or offline, if no internet access is available. In this case the XML file has to be copied to the computer by other means and can then be read out. "
        ],
        "modules": [
            "processes_foreigncurrency",
            "cxCurrencyTable"
        ]
    },
    {
        "query": "What is a packing list?",
        "response": "Based on the provided module descriptions, I cannot answer the query about a packing list because there is no mention of such a thing in any of the modules described. Instead, the descriptions focus on various aspects of inventory management, ordering, and shipping. Therefore, I cannot provide an answer to the query based on the information provided.",
        "docs": [
            "This is the description of the module \"cxAccessoryList\" with the name \"Packing list\": The packing lists are used for internal deliveries to construction sites and thus distinguish themselves from external delivery notes. The packing lists thus provide an overview of the material flow between the companies and the construction sites of the articles that are not level 0 parts of the order. Consequently, packing lists can be created from the following documents:Order items without delivery statusProduction parts list items Goods receipt items Material withdrawal items In addition, free positions can be entered without a predecessor.The packing list can be printed and enclosed with the delivery. Thus, the reference to the goods can be established on the construction site. This is the description of the functionality of the module \"cxAccessoryList\" with the name \"Packing list\" regarding Creating packing lists: Packing lists can be created for order items without delivery status, production parts list items, goods receipt items, material withdrawal items. In the editing masks of the respective documents there is either a button in the toolbar ( ) to create the packing lists or a menu item \"Packing list\". In both cases you can choose via a submenu whether you want to create a new packing list or extend an existing packing list. If you want to extend an existing package insert list, it must be opened. In both cases the selected items (order item, production parts list item, etc.) of the editing mask are transferred to the supplement list. However, it is also possible to create a new (empty) accessory list and expand it using Drag&Drop. In this case, the items (order item, production BOM item, etc.) must be dragged into the item list of the packing list. In this way, a packing list item is created for each predecessor. The part and the quantity are automatically transferred. It is also possible to create a free packing list item. For this purpose press the \"Create\" button in the \"Positions\" tab. Now you have the possibility to create all data freely, like quantity, part and predecessor. All the above mentioned predecessor documents can now be dragged onto the predecessor field again. If no quantity has been entered or no part selected, the data of the predecessor will be taken over. If data has already been entered, it will not be overwritten. It is not possible to select stocked parts in free packing list positions without a predecessor. In this case the predecessor must be the retrieval item. If goods are to be delivered that are not entered in the parts master, simply leave the \"Part\" field empty and enter the goods in the description. When the packing list is created, the quantities are checked so that no overdelivery can occur. The packing list has no influence on the status of its predecessors. This is the description of the functionality of the module \"cxAccessoryList\" with the name \"Packing list\" regarding Business process of the packing lists: There are three relevant states to describe the processing status of the packing lists. This is the description of the functionality of the module \"cxAccessoryList\" with the name \"Packing list\" regarding List window: Serves to list the packing list. This is the description of the functionality of the module \"cxAccessoryList\" with the name \"Packing list\" regarding Selection window: This window is used to select a packing list. This is the description of the functionality of the module \"cxAccessoryList\" with the name \"Packing list\" regarding Document presets: This window is for setting the document settings for packing lists. The document settings can be assigned to a user, an account track, a client, or a partner function, for example. The document presettings of the packing lists are not only used when creating the packing list, but also when creating orders and offers. Here the group \"Packing list data\" is preset with the data defined here. This is the description of the functionality of the module \"cxAccessoryList\" with the name \"Packing list\" regarding Option window: Here you can make and save settings specific to the packing list. The window can only be closed with the \"OK\" button.",
            "This is the description of the module \"packload\" with the name \"Package list\": This module can be used both as a loading list and as a forwarding order.The loading list serves as a specification of a delivery note with regard to the packaging of the goods. If the goods of a delivery note are divided into several packages, containers, etc., the loading list can be used to determine which package contains which goods. At the same time, the package as such is specified in the loading list item, for example by weight, size, tracking ID. The loading list can either be printed directly. However, it is also possible to print it via the delivery note. In this case, the loading list number in which the item is packed is printed behind each delivery note item. The overview of all loading list items is then printed in the delivery note footer. The forwarding order is the order given to the forwarder. It informs him which parcels (forwarding order items) he should bring where (pick-up point) and where (delivery note address). Further information can be given using the text blocks. This is the description of the functionality of the module \"packload\" with the name \"Package list\" regarding - from the delivery note:: To do this, switch to the Positions tab in the editing screen of the delivery note and select the positions for the loading list there. Using the corresponding button in the toolbar (\"Create loading list with selected items\"), a new loading list with one item is automatically created. This first item now refers to the selected delivery note items via the predecessor-successor relationship. To create the next positions in the loading list, switch back to the delivery note screen WITHOUT closing the loading list. By selecting the next positions and pressing the button \"Extend loading list by selected position\" the opened loading list is extended. This process is repeated until all delivery note items in the loading list are swapped. This is the description of the functionality of the module \"packload\" with the name \"Package list\" regarding - in the loading list:: Items can be created in the loading list. These can be assigned as predecessors to delivery note or order items. to a loading list. It is also possible to pack an item in several loading list items. To do this, you have the option of specifying which quantity is contained in each of the different items via the item of the loading list. The items can also be arranged hierarchically. If you select a position and press \"Insert\", you can select whether the position is to be created below the loading list or below the selected position. in this way, several boxes can be packed on a pallet and these in turn in a container. In the tree view, positions can also be moved among each other. If order items are selected as predecessors, the items in the loading list are found directly when the delivery note is created and assigned to the delivery note. If a delivery note item created in this way is deleted again, the order is entered again as the predecessor. Input window. This is the description of the functionality of the module \"packload\" with the name \"Package list\" regarding List window: Used to list the loading lists.",
            "This is the description of the module \"loggipic\" with the name \"Picking - Shipping\": The picking list for dispatch is the hub for the coordinator, as it provides him with an optimal overview of the order items that need to be delivered. (All order items with a delivery status are displayed, the logistical status of these items is displayed in the form of the planning status) By automatically creating delivery notes and goods withdrawals from the list, the coordinator can actively intervene in further processing.By printing the picking documents from the list, the packer receives his instructions. After completion of the work step, the picking papers, which have been extended by the package information, are returned to the coordinator. The coordinator can now enter the package data and report the delivery note as packed.Furthermore, the order processor receives an overview of the processing status of his orders. For this purpose, the list must be switched from the position view to the order view via the radio buttons. This is the description of the functionality of the module \"loggipic\" with the name \"Picking - Shipping\" regarding structure of the list: Various filter fields are available for filling the list to search for the order items to be sent. The search is triggered via the sum symbol in the toolbar. The list shows all items that have to be delivered. These items are indicated by the presence of a delivery status. An exception are the sales sets where the set itself has the delivery status. In this case, the sub-items of the sets can be listed even if they have not been assigned the delivery status. This means that both the delivery note for the set and the picking (removal from storage, packing) of the sub-items can be carried out from the picking list. The order items can be added to the \"Picking\" status. This enables the sales department to select the items to be delivered and the warehouse to take over the complete picking of the parts. This is the description of the functionality of the module \"loggipic\" with the name \"Picking - Shipping\" regarding generation of the stock removal documents: All items that are to be processed further must be selected in the list. (All items can be selected at once via the context menu of the list). If you now select the menu item \"Further processing -> Create stock removal\", the corresponding document is automatically created. Of course, this only happens for the items whose standard provision is stock removal. Attention: If no withdrawal document was created for an item once, please check whether the part has an invalid storage bin with stock! These cases are suppressed so that they stand out. In these cases, the total stock is no longer correct due to the incorrect stock in the invalid warehouse. This is the description of the functionality of the module \"loggipic\" with the name \"Picking - Shipping\" regarding generation of delivery notes: Exactly in the previous point, the items that are to be delivered must be selected. Via \"Further processing -> Generate delivery note\", a delivery note with the corresponding items is then generated for each order. This is the description of the functionality of the module \"loggipic\" with the name \"Picking - Shipping\" regarding setting the options: At the moment, all settings that can be made in the option window refer only to stock reservations that are to be made available!. This is the description of the functionality of the module \"loggipic\" with the name \"Picking - Shipping\" regarding Option window: Here you can change all settings for can be made here. The window can only be closed with the \"OK\" button.",
            "This is the description of the module \"packitem\" with the name \"Packaging material\": The roll of packaging material can be used to define outer packaging and/or the labels required for it. This is the description of the functionality of the module \"packitem\" with the name \"Packaging material\" regarding Input window: This window is for the maintenance of packaging materials. This is the description of the functionality of the module \"packitem\" with the name \"Packaging material\" regarding Label printing: Labels can also be defined via the packaging material. This definition is used for label printing in the delivery note, stock removal etc. You can use it for different quantities, customers, etc. Define and automatically print labels. A label is only used for a packaging if the packaging size is divided into an x number of labels without remainder. For example, if a quantity of 6 pieces is removed from stock and the definition is 4 pieces, it is not taken into account as it does not add up, but a definition with 2 pieces is taken into account. This is the description of the functionality of the module \"packitem\" with the name \"Packaging material\" regarding List window: This window is used for listing . This is the description of the functionality of the module \"packitem\" with the name \"Packaging material\" regarding Selection window: This window is used to select packaging materials. A double click selects a specific item. Multiple selections are made using the \"Select\" button, i.e. you select several positions and click on the button. This is the description of the functionality of the module \"packitem\" with the name \"Packaging material\" regarding Option window: All settings for the search can be made here."
        ],
        "modules": [
            "cxAccessoryList",
            "packload",
            "loggipic",
            "packitem"
        ]
    },
    {
        "query": "What is master data?",
        "response": "Based on the provided module descriptions, I cannot answer the query \"What is master data?\" with confidence. The term \"master data\" is mentioned several times throughout the descriptions, but it is not explicitly defined or explained. Additionally, the descriptions focus primarily on the technical aspects of the module rather than providing a clear explanation of what constitutes \"master data.\" Therefore, I cannot provide a definitive answer to the query based solely on the information provided.",
        "docs": [
            "This is the description of the functionality of the module \"partnerpflege\" with the name \"Master data\" regarding Preparation: Before the daily work in the ClassiX® application can begin, all master data must first be created. As all these data are related to each other in the program, as in real life, it is recommended to plan the creation of master data carefully and to proceed methodically during the input. First of all, gather all your data together, bring it up to date and organise it clearly. It is advisable to prepare the data in Excel, for example, as they can then be automatically transferred to the ClassiX® application. Any other structured file format can of course be used in the same way. Since almost every software application allows the output of your data into such structured files, you can also transfer the data directly from another system into ClassiX®. Please keep in mind that the new start always offers a good opportunity to revise your master data and its maintenance. Think carefully about which data you want to transfer from where and on which level and make sure that you can provide the data in a well structured way. It is equally important that you determine how master data once created should be maintained in the future so that it is always up-to-date. For example, where in your company should new customers, vendors, cost objects, etc. be created and who can and may continue to maintain them? Will data also come from other programs in the future, so that an interface is needed to guarantee the integrity of the data and avoid double data maintenance? If you have prepared yourself methodically in this way, you will see that the start with ClassiX® is hardly easier and faster. If you are already using other ClassiX® modules, everything will be even easier, because the data already created there will not have to be created again. Likewise, master data created in ClassiX®-Office or in ClassiX®-Financial Accounting are immediately available in ClassiX®-Office or ClassiX®-Financial Accounting in case of later extensions by additional ClassiX® modules. As the data is created in stages, some of the relationships have to be maintained. For example, you can only link the tax accounts to the client data after you have created both the client and the chart of accounts. Of course, all master data can also be created manually and maintained as described in the following section of this chapter. This is the description of the functionality of the module \"partnerpflege\" with the name \"Master data\" regarding Clients/company: When you log in for the first time in a completely new ClassiX® application, you have to confirm the login window empty, because no users have been created yet. Next you have to create the client master data, because all further data should be saved client-dependent. In the client master data, it is important to define the fields 'Number' and 'DB layer' uniquely in order to functionally guarantee multi-client capability. Number' is the client number used in the system and 'DB layer' for the physical differentiation of clients at the database level. The currency must also be entered. Address data and telephone, etc. should also be entered because the program can then refer to these correctly if necessary. Finish each field entry with the 'Tab' key and do not forget to save your entries with 'OK'. The client window contains several pages/tabs between which you can scroll by clicking on the title of the page. By clicking on 'Accounting' - or by using the key combination 'Alt'-'R' - you get to the third page where you enter which cost accounting functions you use in your company. When you have completed all the fields, you can enter further company-related data, such as bank details on the 'Additional data' tab of the new window by clicking the 'Company' button. You will notice that overlapping information does not have to be re-entered, because in ClassiX® all data is logically linked. Later, this menu item allows you to switch between several clients created in the system. This is the description of the functionality of the module \"partnerpflege\" with the name \"Master data\" regarding User - System User: This is where the users are created who should and may use your ClassiX® applications. The login name (user ID) and password must be entered. Furthermore, the personnel number and also a time limit for the validity of the login can be added. In the lower part of the window you can also define restricted access rights. If you have just created your login here when creating a new system, please log in to the system again. Since a real person should be assigned to the login if possible, it is recommended to first create the personal data in the ClassiX® partner administration. You can also do this later. In general, however, you should keep in mind that 'user' is only the role of one person, and one person may have several roles. If you first create the person and then assign one or more roles to this person, you can avoid double entries and you will always have your data well structured. However, system users do not have to be created as persons at the same time!. This is the description of the functionality of the module \"partnerpflege\" with the name \"Master data\" regarding Financial year and periods: After the fiscal year has been created, the periods must be generated. If these correspond to the calendar months, they can be generated automatically, otherwise please create the sub-periods individually. You must also set the status of the period to be posted to in the sub-periods to 'started'. By double-clicking on one of the created periods you can edit it. Similar to the creation of the posting periods, you can also create the working calendars. ",
            "This is the description of the module \"item\" with the name \"Part master data\": The ClassiX® system distinguishes between a part and the possible roles of a part. A part itself contains the descriptive data that can be named regardless of its use. For example, a part could be completely described by \"carpet\". Depending on its use, further data entities or roles are obtained: If the \"carpet\" is sold, then sales-specific data such as sales price, is maintained in the role sales item . Further roles would be order article (with data like main supplier, last purchase price) , production part (with data like bill of material, routing, lot size), etc. In ClassiX® any roles can be assigned to a part.Furthermore, ClassiX® distinguishes between single part, sub-part and variant part:A variant part describes a group of things or parts that are distinguished by certain characteristics: For example, \"carpet\" can be distinguished by colour and width. We then say that the variant part \"carpeting\" is described by the characteristic bar with the characteristics colour and width.A subpart is a unique characteristic of a variant part, e.g. \"Carpet: Colour red, width 4m\" . There is a direct assignment to a variant part, in our example to the variant part \"carpet\". Sub-parts can be detached (decoupled) from a variant part at any time and thus become an individual part.Individual parts are not variant parts and are not subordinate to a variant part. Individual parts can, however, be subsequently assigned (coupled) to variant parts. Usually, most EDP systems only support single parts.The advantage of processing with variant parts is that previously unknown characteristics of a part do not always have to lead to data entry. For example, if a customer wants a \"carpet\" with the colour pink and a \"carpet\" of this colour has never been processed before, this \"carpet\" can be ordered directly from the supplier as a variant part with the new characteristic pink without entering a new order article.The characteristic bar of a variant part consists of various characteristics or attributes. In our example above, these were the attributes colour and size . The attribute size can also be a formula attribute, i.e. it is calculated from the attributes\"length times width\". In this case, the attributes length and width must be specified in the subpart.The variant part \"carpet\" can of course be specified more precisely by further attributes. For example, material type (such as wool, plastic, or similar), pile thickness (in mm), pattern, etc. would be possible. One could even go so far as to define all carpets in the world as a sub-part of only one variant part. However, this would require an increase in the number of characteristics to be able to describe each carpet in a sufficiently distinguishable way from the others.To what extent parts are described with different variant parts - or whether variant parts are used at all - depends very much on the individual case. A DIY store may have only a few (or even only one) \"carpet\" variants, whereas a carpet manufacturer will prefer a more structured structure of its \"carpet\" variants. ",
            "This is the description of the module \"cxDocumentIndex\" with the name \"Document master\": Terms/Definitions File Location Printing documentsThe document master in ClassiX® offers the possibility to manage digital documents. An EDM system (Electronic Document Management), respectively a DMS(Document Management System) is already integrated in ClassiX®.The advantage of the integrated solution is the direct association of documents to receipts or master data. The drawings of an article can thus be maintained directly via the parts mask and the documents belonging to an order can be directly linked to the ClassiX order.The associations of the transaction data with the documents can be maintained via a separate editing mask, which can be called up via the document history module, for example. In the master data there is a tab \"Documents\" for this purpose, as for example in the parts mask. If this tab is not available on the processing mask, documents can be linked via the transaction folder or directly via the processing mask of the document entry.Both the master data and the transaction data can either refer directly to the documents or via a conditional table. A conditional table is useful, for example, if the documents of a variant part are managed and different versions should lead to different documents. This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding Type: The file location is the reference to the document. Three different reference options are available, from which one can be selected. This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding Printing documents: The documents held by the document index can be printed in various ways. On the one hand via the \"Open\" button . After the document has been opened, it can be printed from the program (Word, IE, AutoCAD Viewer, ). However, there are other possibilities for OLE documents stored in the database. In the tab \"OLE document\" you can view and edit the document. In addition, document variables can be accessed here, via which the document can read information from the ClassiX® system. (To update the variables please use the Refresh button). This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding List window: Used to list document references. This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding Selection window: This window is for selecting document references. This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding Option window: All settings for the search can be made here. The window can only be closed with the \"OK\" button. This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding Moving documents: This window allows you to move documents and move the associated document references. It is useful to move files or folders with this function, because only this guarantees that the document references in ClassiX are adjusted and point to the moved file. About the function in general: The folder from which the files are to be moved and the folder which is the destination folder are selected. Then all document references are searched to see if they contain references to a file in the source folder. If this is the case, the file is moved to the destination folder and the document reference is adjusted with regard to the link. This is the description of the functionality of the module \"cxDocumentIndex\" with the name \"Document master\" regarding Technical documentation: Pseudo class CX_DOCUMENT_INDEX::CX_ITEM Fields mlShortName (file name) StructureByID(\"DOCUMENT_TYPE\").mlShortName = Type mlDescription (prose description) Group with radio settings =1 file directory to be viewed via: \"path+filename\" SystemObject Call(Execute) settings =2 CX database (copy processing with bprhisto) settings =3 Document server (server directory saved using the types (structure DOCUMENT_TYPE)) associations REL:MN to associations DROPPABLE all CX_EXPANDABLE Inherited: first test with CX_ITEM, wrapping dropped objects."
        ],
        "modules": [
            "partnerpflege",
            "item",
            "cxDocumentIndex"
        ]
    }
]