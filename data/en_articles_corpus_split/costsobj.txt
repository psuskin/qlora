costsobj: Along with cost types and cost centres, cost objects are part of cost accounting. However, the term cost object is also used synonymously with the term sales opportunity (marketing/sales), the term framework agreement (purchasing) and the term internal cost object (e.g. R&D), depending on the specialist area. A cost object thus describes a business object to which a wide variety of inventory objects and a wide variety of documents can be assigned.The documents assigned to a cost object, i.e. the documents posted with a cost object can also contain costs/services. Thus, costs/services can be assigned to a cost object either directly via financial accounting or via special (cost) documents (e.g. time sheets).A (specialised) sales cost unit can be assigned inventory data of a plant (industrial plant, machine, part (e.g. for development projects)) and/or a business partner(customer, interested party, operator) or an operative partner(interested party, operator).Transaction data such as offers or orders can also be assigned to a sales cost unit. In this case, a "project" is thus the superordinate node for various offer or order documents. Usually at the beginning of a quotation or order processing there is the definition of a project, with specification of the external and internal project manager, the assignment to a plant and possibly also the determination of a first rough cost framework(order/sales planning) and a time schedule(network), which can be imported directly from a planning by means of MS-Projects and can also be reconciled with it.Using certain buttons in the toolbar, quotations and orders can therefore be created directly from a sales cost unit. Framework contracts and call orders: Blanket orders can also be defined above a sales cost object. The sales cost object takes over the definition of the outline agreement, for example, the partner and the contract period are defined. The "Framework contract data" tab is used to define the items, the total quantity agreed in each case and the price negotiated (project price). For this purpose the module of customer agreements is used. The call-off orders are recorded as normal sales orders, which are assigned to the outline agreement as cost objects. The creation of a call-off order is initiated via the sales cost object. For this purpose, the articles which are called off by the customer are selected in the list. Then the sales order with the order items is created via the context menu "Create call order". The respective quantity called off and the delivery date must be entered in the order item. In the customer agreement, the order items called up are listed in the "Receipts" tab. In addition, the quantity called off is displayed in the tab "Framework agreement". Input window: This window is used for maintaining sales cost objects. You can select a sales cost object by entering the desired number in the Number field and confirming with RETURN. If you want to call up the list window, you can select the menu item "Search". The editing mask consists of the tab for entering the project data, the tab for displaying additional data for the project, the tab for displaying the documents assigned to the project, the tab for editing the framework agreement data and the tab for editing the documents and/or other associations assigned to a project. Change sales cost unit settings with Wizzard: With this wizard, settings can be set for a group of selected sales cost objects in one. The selection of the sales cost objects can still be changed while the wizard is open. The checkboxes in front of the groups "Category", "Status", "Business field" and "Type" can be used to show or hide the data fields. Data fields that are shown are changed in the sales cost units by the Wizzard. These groups are not changed by hiding them. List window: Serves to search and list cost units. Status: The status of the insurance provider defines the different statuses that an insurance provider can have. The status is defined via the evaluation group "COST_OBJECTIVE_STATE". This evaluation group can contain both simple structure nodes and structure statuses . In the case of structure status, the status is automatically determined by transition conditions in further structure statuses. All simple structure nodes are displayed for selection and the structure statuses are displayed at the beginning of the status chain. Thus, for example, the structure term "COST_OBJECTIVE_STATE" could be structured as follows: - Completed - Releases In this example, the statuses FINISHED and RELEASED can be set in the cost object by the user. FINISHED blocks the complete processing of the cost unit. No additional data can be added to the cost unit. Existing data cannot be edited. RELEASED releases the processing of the cost unit. Additional data can be added to the cost unit. Existing data can be edited. {img fileId="532" thumb="box" width="100%"} Options for the processing and use of the parts can be stored at the individual statuses. These options are stored as attributes at the structure node (see also Attributes/characteristics and in particular the paragraph: Attributes with control function). Selection window: This window is used to select an insurance provider. Option window: Here you can make settings for the behaviour of the module. Module name: cxSalesCostObjective.mod. Classes: CX_SALES_COST_OBJECTIVE. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: salesCostObjectiveEdit.app. Classes: CX_SALES_COST_OBJECTIVE. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: salesCostObjectiveList.app. Classes: CX_SALES_COST_OBJECTIVE. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: salesCostObjectiveSelect.app. Classes: CX_SALES_COST_OBJECTIVE.