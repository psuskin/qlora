product: The production part is a part roll and contains the relevant production data. This module is used to maintain production parts. A new production part can be created in two ways: From the input window of the parts master via menu item New button in the editing / list window of the production part If the production part is called up from the input window of the part master, the system first checks whether a roll of this type already exists and displays it if necessary. Otherwise a new production part is created and connected to the part master (only after saving). On the tab 'Production data' the data from the part master are taken over, which must be supplemented by the missing points. With the second option, a new part master record is created for the production part when saving, which you should maintain afterwards. A production part can be defined as a normal assembly (part has a bill of material and routing), factory assembly (part has no bill of material, only a routing), MRP assembly (the production part has its own MRP bill of material and is only defined from a logistics point of view) or engineering assembly (the part is not "seen" from a logistics point of view). Input window: You can select a production part by entering the desired number in the Number field and confirming with RETURN. If you want to open the list window, you can select the menu item "Search". This window is divided into the different flaps. List window: Serves to list the production parts. Selection window: This window is used to select a production part. Option window: All settings for the search can be made here. The window can only be closed with the "OK" button. Production cost allocation or calculation: As a matter of principle, the production costs for a part are divided into two cost areas that are valued differently: Wage costs and material costs. The costs of a production part, taking into account all the necessary wage and material costs on the basis of the master parts lists and routings, are taken over by the preliminary parts calculation. As a standard, the additional costs incurred in addition to wages and materials, e.g. for purchasing or stock management of the required parts, are included in the overheads. These are stored globally in the client. However, the following approach is preferable in order to be able to calculate production costs precisely according to other costs incurred during production, such as machine running costs and programming costs, without having to include all costs invisibly in overheads: In the part or at the work plan position, a material characteristic must be defined which contains the costs for e.g. the machine costs per hour according to the following format costs = 120€/h (see below in the picture in the work sequence). You must therefore create a material characteristic for each cost element. The characteristic can also be stored directly on variant parts and can also calculate itself there from other boundary conditions (calculated or conditional characteristics). To be able to take these costs into account, a formula in the resource of the work sequence is necessary (in the picture the standard costs of the working group): Standard costs = formula = costs+(40€/1h) Since the formulae do not know any compound units, instead of 40€/h --> write 40€/1h and put this in brackets. The machine costs per hour specified via the material characteristic are now added to the standard machine costs per hour. In order to check whether the costs are actually there without any error occurring, the formula can be extended by a query as follows In this case, the system queries in advance whether the costs have been found and otherwise uses the value 0?, whose unit is based on the next component for further calculation. In the preliminary parts calculation we then immediately see the result: The marked line is our work sequence, which has received wage costs of 1.600€ for 600 minutes (10 hours) (120€ machine running costs + 40€ standard costs = 160€ per hour * 10 hours = 1600€). Overview: Has changed: product.mod. Module name: product.mod. Classes: CX_PRODUCT. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: devel.mod. Classes: CX_PRODUCT. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: produedt.mod. Classes: CX_PRODUCT. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: develedt.mod. Classes: CX_PRODUCT. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: produsel.mod. Classes: CX_PRODUCT.