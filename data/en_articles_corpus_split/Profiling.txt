Profiling: This app controls the profiling of processes, i.e. of any InstantViewÂ® code that can be executed. The profiling allows the following to be examined where time remains in detail which code is executed for an operation which messages are triggered and which messages trigger them. Functionality: Depending on the scope of the protocol and the restrictions made above, the analysis may take some time. The analysis can of course be aborted (depending on what is set in the system, e.g. with Ctrl-F12). A cluster analysis can also be carried out to get the jumble of data under control. Tree: In this example, a bill of material was exploded. The analysis was limited to messages and macros. Some examples should help to interpret the tree: How is the duration calculated? The duration is the time that elapsed between the beginning of the statement in question and the beginning of the next statement. If 'CleanUp' takes two seconds, this means that two seconds have passed from the start of 'CleanUp' to the start of the next command. It is not known exactly how much time 'CleanUp' took, only how much time passed until the next statement! But 'CleanUp' takes much less time - the rest of the time was spent waiting for user input: As a rule, this need not be taken into account. In the case of unusually time-consuming statements, however, it should not be forgotten that there may have been a wait for input directly after the statement. Module name: profilingEdit.app. Classes: CX_LINK_TXN.