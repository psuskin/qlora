restrict: The value range of an attribute can be limited via the Constraint data field of the attributes. However, there are also cases in which the values of two or more attributes are mutually exclusive or restricted. These constraints can be defined via the restriction table. A restriction table is a conditional table. The results of the conditions are the values "allowed", "warning" or "not allowed". A combination of attribute values is invalid according to the restriction table if it returns "Not allowed" as a result. Therefore it is also valid if it does not return a result. Warning should be used for values that are still tolerable but the user should have the final decision. As a rule, only the combinations and warnings that are not permitted are stored in the restrictions table. However, if the number of permitted combinations is smaller than the number of non-permitted combinations, the permitted combinations can also be entered. In this case, the conditional table must then end with a non-permitted condition, which always applies (an empty condition for example). Restriction tables can be created for variant parts (via the characteristics bar) or sales item roles. Restriction tables for variant parts describe impossible combinations of characteristics. Restriction tables for sales article roles describe attribute combinations in which a sales article may not be sold. Restriction tables for variant parts are checked at the following events: Testing the creation of a gozintograph (warning message) Creation of a gozintograph (abort message) Preparation of a preliminary costing Sales release of an order item Posting an order (red -> green traffic light) if the order item has not yet been delivered Restriction tables for sales article rolls are checked in the following events: Sales release of an order item Posting an order (red -> green traffic light) if the order item has not yet been delivered. Restriction table: This window is used to maintain the restriction tables. Module name: "module".mod. Classes: CX_"Class. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: "module".mod. Classes: CX_"Class. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: "module".mod. Classes: CX_"Class.