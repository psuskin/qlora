cxDataConnector: Data connectors form the link between the database and reports. The data connectors define possible data fields, which can also contain complex logic, and commands for loading all objects of a data connector. Reports, in turn, are based on these and use only a subset of the fields of the data connector and can filter the data. In special cases a report can also define new data fields or overwrite the commands for loading the data. While reports are intended for the end user and are used, for example, for individual lists, the data connectors are of a technical nature and not intended for direct use by end users. Data connectors can either be defined manually or created automatically from the data in a database using the Web Crawler object. The latter has the advantage that the data connectors then represent exactly the data in the database. The Web Crawler object and its logic are described on a separate page. There is a distinction between main data connectors and auxiliary data connectors. Main data connectors are created by the Web Crawler object only for main objects. Main objects are mainly objects of a REP. This logic is further refined by a blacklist and a whitelist. For more information, please see the page of the object Web Crawler. Auxiliary data connectors are created for all objects that are found but are not main objects. These do not appear in the lists of data connectors, they are only used for navigation in the apps that display data connectors and their links. Input window: This window is used to maintain data connectors. List window: This window is used to list data connectors. Selection window: This window is used to select a data connector. Quick View: This window provides a quick overview of a data connector. If a data connector is double-clicked in one of the trees, the Quick View switches to the data connector. If a data field is double-clicked, the editing window for the data field is opened. Module name: cxDataConnector.mod. Classes: CX_DATA_CONNECTOR (pseudo class). Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: dataConnectorEdit.app. Classes: CX_DATA_CONNECTOR (pseudo class). Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: dataConnectorSelect.app. Classes: CX_DATA_CONNECTOR (pseudo class).