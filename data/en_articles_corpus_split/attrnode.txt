attrnode: Attribute nodes allow the gradual and conditional expression of attributes. This is particularly useful in product configuration (the specification of variant parts), but can also be useful when entering any form (document) or master data. Application example for the gradual development: An application example for the gradual development of attributes is the division of a complex table of values of an attribute. Let us assume there is an attribute "MATERIAL". Behind this attribute there is a very large selection of different materials (various types of steel, aluminium and plastic as well as numerous alloys). This table can become very long, so it could take longer to select the right material. As a solution to this problem, the attribute "MATERIAL" can be created several times and the result table can be restricted in each case. So mine could create an attribute for steel, aluminium etc. and offer only the corresponding selection options as a result table. In addition you would have to create a new attribute "MATERIAL_ART" with the selection table: steel, aluminium, plastic and alloys. Behind this attribute, an attribute node is stored, which refers to the corresponding attribute "MATERIAL" depending on the set value. For example, in the sales item, the attribute "MATERIAL_ART" is then inserted instead of the complex table "MATERIAL". In the order, one then first selects "MATERIAL_ART". The corresponding attribute "MATERIAL" is then automatically added and in the second stage this value can then be set. Application example for the conditional gradual characteristic: The conditional characteristic behaves similarly to the application example mentioned above, but is a little more complex. In the first example, the expression of one attribute led to other attributes with the same name with filtered result tables. However, an extensive product configuration can also be carried out via the attribute nodes. Let us imagine the configuration of a car. A car can be defined by many parameters. However, these parameters can be strongly interdependent. For example, after selecting 2- or 4-door, the question of rear electric windows may be obsolete. The same applies if one of the parameters is selected as the series and various extras are then already included. This type of multi-level conditional configuration is also possible via the attribute nodes. Input window: This window is used to maintain attribute nodes. List window: This window is used to list attribute nodes. Selection window: This window is used to select attribute nodes. Module name: cxAttributeNode.mod. Classes: CX_ATTRIBUTE_NODE. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: attributeNodeEdit.app. Classes: CX_ATTRIBUTE_NODE. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: attributeNodeList.app. Classes: CX_ATTRIBUTE_NODE. Security: In addition to restricting access rights via the class and its data fields, the module can be restricted in its use via some of the received messages. Module name: attributeNodeSelect.app. Classes: CX_ATTRIBUTE_NODE.