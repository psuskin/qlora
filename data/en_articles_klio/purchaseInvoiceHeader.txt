This is the description of the module "purchaseInvoiceHeader" with the name "Incoming invoice": General overview of the workflow of incoming invoices General procedure for processing incoming invoicesReasons for inspectionAccount assignmentVAT invoice Determining the invoice quantityRecording of a penalty (contractual penalty)Incoming invoice capture via scanned documents General informationThe main task of this module is the recording of the incoming invoices of the vendors and forms the basis of the overall task, the processing of the incoming invoices. This results in further subtasks such as checking the invoice, making the initial account assignment and posting in the financial accounting. ClassiX® supports this process by an ergonomic, semi-automatic capture of the incoming invoice. By means of an automated check, which presents the invoices to be checked directly to the respective employees for checking, the time delay caused by transport and communication between the departments/employees involved is minimised. Due to the assignment of the incoming invoice via the document history to the demand triggers, the initial account assignment is also carried out automatically. the posting to the financial accounting is carried out via the invoice receipt book. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding General overview of the workflow of incoming invoices: . This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding General procedure for processing incoming invoices: 1. invoice receipt / options Entering an incoming invoice begins outside the ClassiX® system by assigning a paging number. The stack of invoices to be entered should now be sorted by this number. This way, the "Date of receipt" and the "Auto. Pagination number", which are set automatically when each invoice is entered. The pagination number is incremented after each invoice and is then updated when the next invoice is entered. Thus the invoice stack should be sorted according to the LiFo principle (last in first out), i.e. the invoice with the smallest pagination number is always on top. 2. create a new incoming invoice The creation of a new incoming invoice in ClassiX starts with pressing the button NEW and entering the header data. The focus is now in the field Invoice number and jumps by RETURN to the field Invoice date. 3. creating the incoming invoice items Again via RETURN you can now access the order field. By entering and triggering the purchase order number to which the incoming invoice refers, the incoming invoice is created, the pagination number and the date of receipt are transferred according to the options and the vendor according to the purchase order. However, the most important part of this step is the creation of incoming invoice items according to the purchase order. Subsequently, further orders can be triggered if the supplier has invoiced several orders at the same time. 4. input of the invoice amounts For the sake of efficiency, the invoice amounts are recorded in a separate window. For the invoice header, these would be the service charges, the tax value and the invoice value. The net value is then calculated from the difference. In addition, service charges can also be recorded at the order level. This is particularly relevant if several orders from the supplier have been combined in one invoice. The input tax is attempted to be determined automatically on the basis of the supplier and is offered as a pre-selection. If the tax is overwritten, it is not only copied into the header, but also to all newly created items. In addition, the order conditions are displayed and can be exchanged here if the creditor has referred to other conditions. If freight and packaging are taken over as additional costs via the order, a note appears in the quick comparison window so that these costs are not entered twice. The order header conditions are also transferred to the incoming invoice. Only if all conditions of the purchase orders also appear in the incoming invoice, the ER can be released automatically. The additional costs reappear in the incoming invoice as conditions, whereby the additional costs of the order item level are distributed by value to the items just created automatically. When deleting items, the ancillary costs are then distributed again. As a result, you can no longer maintain the distributed conditions via the item mask, but only the originally created item ancillary costs. There is an extra window for this, which you open via the menu Edit -> Conditions -> Edit additional costs. Two columns are displayed. On the one hand the value of the service charge item, which can be maintained via OboxEdit, and on the other hand the items to which the service charge item refers. The distributed value is shown in brackets after each item. 5. capture "free positions A free incoming invoice item is used to record those incoming invoices which cannot be recorded in the regular way. A free incoming invoice item must always be entered manually. Another special feature is that it never goes directly to the "released" status, but must always be checked beforehand. Furthermore, it has no influence on an order status, as the items are entered without quantity. Free items can only be entered if the invoice has already been created. Therefore you should save at least once and already have the vendor, paging number, etc. A free position can now be created via the "Insert" button and the "Free position" menu that opens. In case the invoice cannot be assigned to a ClassiX® order at all, all data of the item must be set manually. Otherwise, for example an order header can be selected as predecessor. In this case, among other things, the vendor is transferred to the invoice header, if this has not yet been done at this point. If the data is not sufficient for the examiner, the description field can also be used. The field "invoice quantity" remains permanently closed for this type of entry. Thus the invoice item has no influence on the invoice status of the order. 6. release cycle The next step is to advance ("release") the incoming invoice. If no item is displayed in the item list with a stop sign, which stands for a manual check, the invoice goes directly to the status "released" by advancing and can thus be transferred to the financial accounting. Otherwise, all items that could not be automatically released are presented to the inspectors for checking. (see test reasons) In addition, a rule (recognition rule) can be stored in the client, which automatically accepts an invoice. The rule could for example be: "The net value of the invoice is less than 100€". If an invoice has been entered to which the rule applies, a checkbox "Accept invoice" opens next to the "Release" button, which is clicked by default. A set checkbox means that the invoice will still be checked, but not in the manual check. Instead, the invoice is released directly. The rule mentioned as an example thus leads to the fact that all invoices under 100€ can be directly released and thus paid, although there are reasons for checking (e.g.: open goods receipt). If you would like to have an invoice checked despite the rule, the tick must be removed from the checkbox. Incoming invoices that are directly recognised do not have to be approved, even if the licensing regulations provide for this. 6.1 Checking a position If there are reasons (see reasons for checking) which prohibit the automatic release of an incoming invoice item, this invoice is presented to the auditors for manual release. In addition, the person entering the incoming invoice can also mark an item as "to be checked", although no defined reasons for checking apply. Items with the status "Check" are usually released by the inspector (field in the item mask). He finds his incoming invoices to be checked in his activity folder. All fields are blocked for the verifier, as he should only have the possibility to block or release the incoming invoice. If he blocks an item, the entire incoming invoice is also blocked. Otherwise it is checked whether all items have been released. If this is the case, the incoming invoice is also released for posting. The auditor shall be provided with his own tool for checking the incoming invoices to be audited. (see here). This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding VAT invoice: As a rule, the tax key is stored both in the incoming invoice header and in the items, whereby only one tax key may be used in the whole invoice. This is different for overtax invoices. Here, the incoming invoice header is not assigned a tax key at all, which means that different taxes can be entered in the items. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Account assignment: Topic on the subject of "accounting/pre-assignment Four values are required for the account assignment of an incoming invoice, which are set in the ER items. An absolute must is the financial accounting account and the amount. The financial accounting account can be either a G/L account or a cost element, if the cost element account assignment is permitted by the settings in the client. The other values are the cost centre and the cost unit. The financial accounting account is usually specified directly in the order item role and is set automatically when the item is entered. An exception are text articles, for example, where a "default" cost element is stored in the client. The same also applies to the account assignment of service charges. Important notes: The automatic account assignment can be changed manually in the invoice receipt book. Once this has been done, the invoice can no longer be changed via the editing screen. With the cost unit account assignment, an attempt is made to determine the exact share of the cost unit items in an incoming invoice. If one or more cost object predecessors have no quantities because it is the order header or a group, the remaining quantity (BA quantity - sum of the cost object quantities) is divided proportionally among the remaining items without quantities. If an overdelivery/underdelivery (BA quantity > or < sum of cost object quantities and there are no items without quantities) takes place, the total costs are divided on the basis of the number of predecessors, since it is not possible to assign the over quantity exactly to a cost object item. The value of the delivery schedule(s) is decisive for the cost allocation of a free item. If a free item has one or more purchase orders as predecessors, all delivery schedules of these purchase orders are taken into account. When releasing or forwarding incoming invoices, the account assignment is checked for the presence of a cost object or cost centre if the cost type insists on a cost object or cost centre constraint. Account assignment of an (EU) income tax A purchase tax of, for example, 16% is treated as 0% in the incoming invoices and only affects the account assignment. The created posting container for the tax has the value zero externally (display in the invoice receipt book etc.), but internally in the financial accounting the 16% value is used for calculation. Manual account assignment of an (EU) income tax. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Determining the invoice quantity: The invoice quantity is attempted to be determined automatically in order to save time during data entry. The following quantities serve as a basis for the determination: - Order quantity - Delivery quantities - QA quantities (for QA parts) - invoiced quantity (quantity already invoiced by the supplier) The invoice quantity is determined according to the following logic. No QS parts: QA parts: Attention! It can only be attempted to determine the quantity invoiced by the supplier, there is of course no 100% certainty. Therefore, the invoiced quantity should be checked manually to avoid errors. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Recording of a penalty (contractual penalty): The penalty is a contractual penalty or also a contractual penalty for non-performance or poor performance of deliveries and services and is designed as a fine. The recording of a penalty differs from other invoices in purchasing in that the penalty is to be regarded as income and not as expense. Thus, when assigning an account, a revenue account instead of an expense account and a VAT account instead of an input tax account must be addressed. The selection of the revenue account on the item does not differ from normal incoming invoices. However, the selection of a VAT key must first be enabled via the options. The penalty should be recorded as a credit note with positive values and a value added tax. The posting record for a contractual penalty of 100€ then looks like the following: For the entry of the penalty, it is advisable to have a free position which is assigned to the order header as a predecessor. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Incoming invoice capture via scanned documents: When entering incoming invoices using scanned documents, it is assumed that the invoices are already available in a scanned form in a register. The scanned incoming invoices and incoming credit notes must be stored in separate directories. These directories are defined in the client. In addition, two directories must be defined in which the scanned documents are moved and archived. The directories shall be defined according to the following scheme: Path for scanned incoming invoices : Z :\classix\IncomingInvoices\*.pdf Path for incoming invoices to be processed: Z:\classix\InvoicesReceived\InProcess\. Path for incoming invoices to be archived: Z:\classix\IncomingInvoices\Archive\ It is important that the path to the scanned incoming invoices also includes the type of document (pdf, tif, etc.), as other files, such as text files with the contents read from the documents, can also be stored here. To prevent the folder of archived incoming invoices from becoming too full and thus confusing, there is the option "Move archived scanned documents to subfolders (year-month)". With this option, further subfolders with the designation "yyyy-mm" are created below the folder. Thus the folder "2013-01" stands for January 2013. The incoming invoices are moved to the archived folder if they have been booked or rejected in the financial accounting. For invoices that have been booked into the financial accounting, the posting date of the financial accounting successor is decisive for the creation and moving into a subfolder. For rejected incoming invoices, it is the invoice date. The file name must correspond to the pagination number of the invoice/credit note. The file name can additionally begin with "ER" or "EG" to determine the type of document via the name. However, the documents are distinguished by the different directory and not by this abbreviation. When determining the pagination number, any existing abbreviation is omitted. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Automatic creation of incoming invoices: When opening the editing mask, a check is made to ensure that scanned documents to be imported are in the appropriate directory. If this is the case, this is indicated in the toolbar by a "GO" character ( ) and the number of documents to be imported is displayed, otherwise a "STOP" sign ( ) are shown. The import is started by pressing the "Go" sign. Then the file with the smallest pagination number is searched for in the directory of the invoices to be imported. If no pagination number with a valid format could be found or if the pagination number was already used, the process is cancelled. The next step is to move the file to the archive directory. If there is a file with the same name and the extension ".txt" in the directory, this file is also moved into the archive directory. Next, a new invoice is created with the determined pagination number and the file moved to the archive directory is associated with it. This is done by means of local document references. The document is also opened automatically so that the invoice data can be determined and transferred to the incoming invoice mask. The document associated with the invoice can be edited at any time using the toolbar button for editing associations ( ) can be opened. If the scanned content of the incoming invoice document was placed in a text file of the same name, this file is searched for data which can be automatically transferred to the invoice mask. This is, for example, the supplier, which can be determined via the sales tax ID. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Manual creation of incoming invoices: It is also possible to enter the incoming invoice manually, for example if the incoming invoice document is available in analogue form. In this case, the incoming invoice is entered into ClassiX with the pagination number. ClassiX then automatically checks whether there is a document with the same name in the folder for the scanned incoming invoices. If this is the case, the local document reference is created and linked to the incoming invoice. The document is moved to the "in process" folder. The PDF does not open automatically in this case, as in this case the entry is not made via the PDF. In the case of manual creation of the incoming invoice/credit note, it is not necessary to store the scanned documents in different folders for invoices and credit notes, as the distinction between invoice and credit note is made manually via the capture. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding General information: Only after each of the A/P invoice items has been released can the entire A/P invoice be posted. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding List window: Used to list the incoming invoices. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Selection window: This window is for selecting an A/P invoice. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Implementation: checkMask CalculatePurchaseInvoice Controls the entire calculation of the incoming invoice CalculateSubPositions MarkAllBookingContainers CalculateSubPositions Adds all net and gross values (Pos. Totals) of the incoming invoice items. These values serve as the calculation basis (Pos. Totals + Conditions(CalculateSingleCharge)) of the calculated incoming invoice value. MarkAllBookingContainers Initialises the values of the accounting containers. DetailedAccounting CalculateFirstDifferences AccountingRecursive CalculateFirstDifferences_Tax AccountingRecursive_Tax CalculateFirstDifferences Calculates and distributes the cost of the input invoice/item. The result is the vector accounted.amount, which is divided as follows: CX_PURCHASE_INVOICE CX_LINK_TXN GetBaseAccountingValue InitAccountedAmount AccountingRecursive If an incoming invoice is passed to the macro, all items are calculated by calling the macro CalculateFirstDifferences. Subsequently, surcharges and the net difference are distributed to the items before the macro is called up recursively. The accounting containers are then created for the items by calling up the macro AccountTmpPos. CalculateFirstDifferences GetBaseAccountingValue Determines the net value of the incoming invoice (sum of the items)/item (quantity * price). InitAccountedAmount Initialises the vectors which are hidden behind accounted.amount (see CalculateFirstDifferences). The first vector is assigned the return value of the macro GetBaseAccountingValue , all others the value "0". CalculateFirstDifferences_Tax If an incoming invoice item is passed to the macro, this will calculate the tax value (gross-net). The 0th element of the taxed.amount vector is then initialised with this value. The 1st element receives the value "0". Otherwise, if an input invoice object is passed, the taxed value is calculated based on the sums of the net and gross values. The vector is then pre-initialised in the same way. The difference between the calculated and the actual tax value is then written into the second element. AccountingRecursive_Tax CalculateFirstDifferences_Tax CalculateSingleCharge Calculates the net value including the conditions. This is the description of the functionality of the module "purchaseInvoiceHeader" with the name "Incoming invoice" regarding Quality assurance: Messages during account assignment.