This is the description of the module "bottlesOfBeerType" with the name "Bottles Of Beer": This app is part of the tutorials for learning the InstantView scripting language.In addition to the "Hello World" example, the output of the lyrics of the English nursery rhyme "Bottles Of Beer" is often used to compare the implementation of the same, simple tasks in different programming languages.The text goes as follows: 99 bottles of beer on the wall, 99 bottles of beer. Take one down and pass it around, 98 bottles of beer on the wall. 98 bottles of beer on the wall, 98 bottles of beer. Take one down and pass it around, 97 bottles of beer on the wall. 97 bottles of beer on the wall, 97 bottles of beer. Take one down and pass it around, 96 bottles of beer on the wall. 3 bottles of beer on the wall, 3 bottles of beer. Take one down and pass it around, 2 bottles of beer on the wall. 2 bottles of beer on the wall, 2 bottles of beer. Take one down and pass it around, 1 bottle of beer on the wall. 1 bottle of beer on the wall, 1 bottle of beer. Take one down and pass it around, no more bottles of beer on the wall. No more bottles of beer on the wall, no more bottles of beer. Go to the store and buy some more, 99 bottles of beer on the wall. In this app, the output of this text has been programmed in 4 different forms: Simple Within a loop from 1 to 99, the individual stanzas are chained together, with only the corresponding number of bottles inserted into each stanza: %i bottles of beer on the wall, %i bottles of beer. Take one down and pass it around, %i bottles of beer on the wall. In the second line of text of a stanza, the number is always reduced by one. When the number has reached zero, the last two lines are added to the text. Finally, the entire text is output as one attention. The text is just a simple text string. This implementation corresponds to the output of "Hello World", which is achieved by means of the command sequence "Hello World" Attention . Grammatically correct In the first, simple implementation, we do not distinguish between singular and plural of the word bottle/bottles. Therefore, in this implementation, an "s" is placed or omitted in the text, which makes the programming a little more awkward. Multilingual A German translation of the text could read like this: 3 bottles of beer are on the shelf, 3 bottles of beer. Get one and pass it around, 2 bottles of beer are on the shelf. 2 bottles of beer are on the shelf, 2 bottles of beer. Bring one over and pass it around, 1 bottle of beer is on the shelf. 1 bottle of beer is on the shelf, 1 bottle of beer. Bring one over and pass it around, no bottle of beer left on the shelf. No bottle of beer left on the shelf, no bottle of beer left. Go to the shop and buy some, 99 bottles of beer are on the shelf. Here too we have the problem of the singular and plural in the word bottle/bottles, but additionally also in the passages "are on the shelf", "is on the shelf" and "no bottle of beer is on the shelf any more". This implementation corresponds to the previous one, but the real difference lies in the use of a multilingual text. By changing the language, the text can be displayed in German or English. With unit "bottle In order not to have to consider at least the words bottle/bottles directly in the programming, the number of bottles is not only represented by simple, whole numbers, but by means of value objects. A value object consists of a purely numerical part plus a unit, in this case we store the unit "bottle" in the system, with the specification "bottles" as plural. Now the value object automatically takes over the correct output as the word "bottle" or "bottles".