This is the description of the module "cxRateTable" with the name "Table of units": Unit tables define the conversion between different units. In this module unit conversions for parts are given, e.g. "1 bar" corresponds to "6000 mm". Specific weights/weights are also given in these tables of units ("1000 mm" corresponds to "3.25 kg"). The units defined here for a part can then be specified anywhere in the entire system for this part. A special feature is the variant part with its sub-parts; if the sub-part does not have its own unit table, the unit table of the variant part is used. Any conversions required for calculations are carried out automatically by the system using this unit table. Such calculations also arise whenever different units of measure for handling unit, purchasing/production unit and stock unit have to be specified in the logistics account of a part. Different units for sales and order prices (€ per "any" unit) may also have been specified here, which also require conversion. To cover all the complexity of such unit conversions, unit conversions may be specified as a fixed pair of values, as a formula or as a conditional table.The following rules apply to the conversion:Direct Conversion Indirect conversion Remainders when convertingConversion rates. This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Direct Conversion: Direct conversion uses exactly one exchange rate to convert one unit to another. The list of exchange rates is run through in sequence and the first exchange rate with which conversion is possible is used. If a conversion is to be possible with several conversion rates, i.e. "across other units", indirect conversion should be used. This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Indirect conversion: In contrast to direct conversion, indirect conversion allows conversion "across several units". If, for example, "15 cans" are to be converted into "pallets", it is not necessary to define a conversion rate between these two units. If there is a conversion rate between "cans" and "boxes" and between "boxes" and "pallets", "cans" can be converted to "pallets" by "diversion" via "boxes". The length of the conversion path is not important. This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Remainders when converting: In contrast to the conversion of currencies, there is still a fundamental difference, as the source unit cannot always be exactly converted into the target unit. For example, do the following two conversion rates exist: they represent integer ratios, i.e. the conversion of "6 cans" into "boxes" does not result in "1,2 boxes" but in "1 box and 1 can". If the conversion is done indirectly, there can also be several remainders, so that e.g. "22 cans" converted into "pallets" results in "1 pallet" with the remainder "1 crate and 2 cans". Classix provides functionality for the management of such remainders in order to be able to display the remainder as the initial unit again, in this example as "7 cans". This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Conversion rates: When defining an exchange rate, four types can be distinguished. These are. This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Input window: This window is used to maintain unit tables of parts. This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Examples: In the system a unit package is defined. Now it may happen that in certain cases the unit needs to be specified more precisely (e.g. "data package" or "Christmas package"). In order not to have to create a completely new unit, data and Christmas packages are both packages, a new designation can be entered in specific cases by means of a unit table. In addition to the designation, you can also enter a quantity (field "Unit2"). This means that a "Christmas package" does not necessarily have to be a synonym for "package", but can also correspond to "1 kg". For a "real" unit only one overdefined unit can exist. For example, if you define "data packet" first, then "Christmas packet" in a table of units and register this table, only "Christmas packet" (as a unit defined later) is a valid unit. This functionality of redefining units is not fully implemented. For example, in a ListBox, the redefined name is only displayed the first time it is displayed. In addition, the unit names defined in this way are monolingual because this window stores the unit name in the "uniqueID" field of the newly created CX_UNIT-RATE object. See also ChangeUnitNames. This is the description of the functionality of the module "cxRateTable" with the name "Table of units" regarding Conditional unit conversion: The conditional table is useful for variant parts if there must be a conversion that is dependent on a material characteristic. For example, for sheet metal. Sheets are calculated per kilogram in the order and ordered per piece. For these variant parts, the surface dimensions and material thicknesses can be freely set on the order. The different material thicknesses now result in different conversions from dm² to kg. These conversions can be entered in the conditional unit conversion. Example: Example 2 To get from one piece to the weight of the material (depending on dimensions and material), the unit conversion can be even more dynamic: Conversion 1: area in units Type: Formula Value: ValuePer(LENGTH_BROAD_PART*WIDTH_BROAD_PART, 1 piece) Result: dm²/piece Conversion 2: Material thickness in weight If the attributes LENGTH_BROAD_PART, WIDTH_BROAD_PART and STRENGTH_BROAD_PART are now set in the order at a position with a piece of this sheet, the weight per piece can be determined. To make the calculation also dependent on the material type (different density), the type "table" is to be preferred for conversion 2: Type: Table Content: Result: kg/dm² It should be noted that the l in the formula kg/l is a small L and stands for litres, i.e. replaces dm*dm*dm or dm³. This is simply clearer in the formula and has the advantage that the system does not search for a further conversion from kilogrammes to dm and possibly end up in an endless loop.