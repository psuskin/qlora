This is the description of the module "excelReader" with the name "English:ExcelReader": This app can be used to read an entire Excel file or just individual cells.If an entire Excel file is read in and a unique key of an object class is specified in a column of the Excel file, then each entry in the Excel file can be assigned an object in the database with this information.Each column (currently a maximum of 15 columns) of the Excel file is read in as text and output in the upper list window "of the objects found" from the 5th column onwards. The type of object is output in the first column, the unique key in the second column, the validity in the third column and the description of the object in the fourth column.If no type/class is specified or if no object is found with the key, this entry is output in the lower list of "not found objects". Here the type is in the first column and the unique key in the second column. The columns of the Excel file are output in this list from the third column onwards.The columns from the Excel file (as already explained above in the list of found objects starting from the fifth column, in the list of not found objects starting from the third column) are internally provided with the field names first.comment, second.comment, etc.This app is used in particular to be able to change individual fields of objects in the database quickly and without special programming via Excel columns. To do this, the list entries can be selected and the corresponding programme steps entered via the InstantView command window. Reading individual cells is useful if, for example, you want to check the content and in particular the type (date, number, etc.) of an Excel cell that has been read in. This is the description of the functionality of the module "excelReader" with the name "English:ExcelReader" regarding Input window: In this window, the details of the Excel file to be imported are entered. Fields.