This is the description of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse": This app is part of the multilingualism of the CyberEnterprise business OS and is responsible for the texts in the different operating languages. With this app, the texts occurring in the AppsWarehouse® (InstantView® code) (see also Text Constants in the InstantView® Framework) can be is displayed, adapted to specific company requirements and/or can be translated into all other languages required. By default, all texts in AppsWarehouse® Code (window titles, field labels, hint texts, etc.) are written in German as the first and English as the second, so-called bridge language. The respective expressions in these two languages together form the "key" for unambiguous identification of a text. Using this "key", the texts can be changed (for alternative designations: e.g. device - instrument - installation) and/or freely assigned to a language as of the third language (French). These extensions and/or changes to the texts from the AppsWarehouse code are written to the file appsWHLiterals.stg (formerly: cxstring-uc.002) with the above-mentioned "key" (see Stored text constants in file cxstring_uc.002).At runtime, the displayed texts are then adapted/overwritten/extended using the entries in this file.In addition, you can have a *.info file created (usually cxstring-uc.002.info), by means of which you can freeze a specific version of the AppsWarehouse text constants. If changes are made in the AppsWarehouse code afterwards, it can be determined in which modules/apps certain text constants used to be (see Text constants unrelated to AppsWarehouse®).The languages that can be selected or used at runtime are defined in the location-specific data (language, system number of the language). How many and which languages are actually to be used within an application is specified in the client under System/Language Control. If nothing is specified there, the number of languages is determined directly from the location-specific data. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding List window (Text Literal Browser: AppsWarehouse).: This window is used to list all text literals that occur in the AppsWarehouse® (i.e. in the InstantView® code). The loading/listing is done via the menu item "Load Text Literals of the AppsWarehouse" or the corresponding button in the toolbar. The two tabs show different views of the text literals in AppsWarehouse®. The first tab shows all occurrences in the AppsWarehouse® starting from the literals, while the second tab shows the various associated literals starting from the access expressions. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Literals: If an entry is marked in the list, all places where the marked text occurs are output in the lower list (used in AppsWarehouse). A double click opens either the corresponding window or the position in the code. The texts of a Text Literals itself are maintained by double-clicking in the editing window. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Access Expressions: This tab is mainly used to book access expressions with the corresponding literal in data connectors. The upper part is used to filter the desired access expressions, while the lower part is used to select and update the corresponding literal. It is also possible to automatically update several access expressions at once. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Editing window (Text Literal Editor: AppsWarehouse): This window is used to maintain individual text literals of the AppsWarehouse. The default languages are German and English. If text literals are changed (as alternative names) or languages are added, these text constants are stored in the file with the name appsWHLiterals.stg in the current system directory (this usually corresponds to the directory CX_ROOTDIR\system). Whether and which texts have been changed or extended by further languages can be displayed in the list window via the menu item Saved text constants in file appsWHLiterals.stg. ATTENTION: The file appsWHLiterals.stg is created for the first time when loading the text literals from the AppsWarehouse. It is therefore already present even if you have not yet changed any text constants. In this "empty" state, the file can be deleted without disadvantages, but if text constants have been changed or languages have been added, these entries are irrevocably lost when the file is deleted. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Text Literal Wizard: AppsWarehouse: This window is used for mass maintenance of AppsWarehouse text literals. This is the case if a company wants to generally change some of the designations used in the standard AppsWarehouse (e.g. Product -> Production item). This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Text Usage Wizard: AppsWarehouse: This window is used to maintain the use of the text constants in the programme code, i.e. changes are made directly in the programme in the code. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Stored text constants in file appsWHLiterals.stg: This window lists the text constants stored in the file appsWHLiterals.stg. If the list is empty, no text constants have been changed, nor have additional languages been added. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Text constants without relation to AppsWarehouse: If text constants have been changed or additional languages have been added to them (i.e. there are stored text constants in the file appsWHLiterals.stg), but they no longer appear there due to changes in the AppsWarehouse code, they will be listed in this window. This is the description of the functionality of the module "literalAppsWH" with the name "English:Text Literal Browser: AppsWarehouse" regarding Text Literal Translations: AppsWarehouse: With this app, languages other than German (first language) and English (bridge language) can be assigned to the (previously selected) text constants. In the delivered standard, translation is supported by means of DeepL (separate licence required).